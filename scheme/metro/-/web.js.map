{"version":3,"sources":["../../../../../me/easing.ts","../../../../../me/equal.ts","../../../../../me/me.ts","../../../../../me/atom2/async.ts","../../../../../me/atom2/path.ts","../../../../../me/atom2/entity.ts","../../../../../me/atom2/prop.ts","control.ts","../../../../../me/atom2/wheel_synth.ts","../../../../../me/atom2/wheel_touch.ts","../../../../../me/atom2/wheel_drag.ts","../../../../../me/atom2/ec.ts","../../../../../me/atom2/elem.ts","../../../../../me/atom2/event.ts","../../../../../me/atom2/atom2.ts","../../../../../me/atom2/ctx.ts","../../../../../me/atom2/pinch.ts","../../../../../me/atom2/raf.ts","../../../../../me/atom2/ric.ts","../../../../../me/stylesheet/stylesheet.ts","../../../../../me/cross/cross.ts","../../metro.ts","../../../../defaults/defaults.ts","../demo.ts"],"names":[],"mappings":"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","file":"web.js","sourcesContent":["namespace $.$$ {\n// ============================================================================\n\n// https://gist.github.com/gre/1650294\n/*\n * Easing Functions - inspired from http://gizma.com/easing/\n * only considering the t value for the range [0, 1] => [0, 1]\n*/\nexport function $me_easing_value(initial: number, target: number, t: number, fn = $me_easing.linear) {\n  return initial + (target - initial) * fn(t)\n}\n\nexport type $me_easing_func = (t: number) => number\nexport const $me_easing = <{[key: string]: $me_easing_func}>{\n  // no easing, no acceleration\n  linear: (t: number) => t ,\n  // accelerating from zero velocity\n  easeInQuad: (t: number) => t*t ,\n  // decelerating to zero velocity\n  easeOutQuad: (t: number) => t*(2-t) ,\n  // acceleration until halfway, then deceleration\n  easeInOutQuad: (t: number) => t<.5 ? 2*t*t : -1+(4-2*t)*t ,\n  // accelerating from zero velocity\n  easeInCubic: (t: number) => t*t*t ,\n  // decelerating to zero velocity\n  easeOutCubic: (t: number) => (--t)*t*t+1 ,\n  // acceleration until halfway, then deceleration\n  easeInOutCubic: (t: number) => t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 ,\n  // accelerating from zero velocity\n  easeInQuart: (t: number) => t*t*t*t ,\n  // decelerating to zero velocity\n  easeOutQuart: (t: number) => 1-(--t)*t*t*t ,\n  // acceleration until halfway, then deceleration\n  easeInOutQuart: (t: number) => t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t,\n  // accelerating from zero velocity\n  easeInQuint: (t: number) => t*t*t*t*t ,\n  // decelerating to zero velocity\n  easeOutQuint: (t: number) => 1+(--t)*t*t*t*t ,\n  // acceleration until halfway, then deceleration\n  easeInOutQuint: (t: number) => t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t\n}\n\n// ============================================================================\n}\n\n","namespace $.$$ {\n// ============================================================================\n\n// https://github.com/epoberezkin/fast-deep-$me_equal/blob/master/index.js\nlet isArray = Array.isArray\nlet keyList = Object.keys\nlet hasProp = Object.prototype.hasOwnProperty\n\nexport type $me_equal_type<Value> = (a: Value, b: Value) => boolean\nexport function $me_equal(a: any, b: any) : boolean {\n  if (a === b) return true\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n\n    const arrA = isArray(a) , arrB = isArray(b)\n    if (arrA != arrB) return false\n    if (arrA && arrB) {\n      const length = a.length\n      if (length != b.length) return false\n      for (let i = length; i-- !== 0;)\n        if (!$me_equal(a[i], b[i])) {\n          // if (length == 27) console.warn(i, a[i], b[i])\n          return false\n        }\n      return true\n    }\n\n    const setA = a instanceof Set, setB = b instanceof Set\n    if (setA != setB) return false\n    if (setA && setB) {\n      if (a.size != b.size) return false\n      let iter = a.keys()\n      let next = iter.next()\n      while (!next.done) {\n        if (!b.has(next.value)) return false\n        next = iter.next()\n      }\n      iter = b.keys()\n      next = iter.next()\n      while (!next.done) {\n        if (!a.has(next.value)) return false\n        next = iter.next()\n      }\n      return true\n    }\n\n    const mapA = a instanceof Map, mapB = b instanceof Map\n    if (mapA != mapB) return false\n    if (mapA && mapB) return $me_equal([...a], [...b])\n\n    const dateA = a instanceof Date, dateB = b instanceof Date\n    if (dateA != dateB) return false\n    if (dateA && dateB) return a.getTime() == b.getTime()\n\n    const regexpA = a instanceof RegExp, regexpB = b instanceof RegExp\n    if (regexpA != regexpB) return false\n    if (regexpA && regexpB) return a.toString() == b.toString()\n\n    const canvasA = a instanceof CanvasRenderingContext2D\n    const canvasB = b instanceof CanvasRenderingContext2D\n    if (canvasA != canvasB) return false\n    if (canvasA && canvasB) return (a as CanvasRenderingContext2D).canvas == (b as CanvasRenderingContext2D).canvas\n\n    const keys = keyList(a)\n    const length = keys.length\n    if (length !== keyList(b).length) return false\n    for (let i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false\n    for (let i = length; i-- !== 0;) {\n      const key = keys[i]\n      if (!$me_equal(a[key], b[key])) return false\n    }\n    return true\n  }\n  return a!==a && b!==b\n}\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ==========================================================================\n\nexport function $me_word_plural(count : number, word1 : string, word2_4 : string, word5more? : string) {\n  if (word5more === undefined) { word5more = word2_4 }\n  let result = word5more\n  const decimal = Math.floor(count / 10) % 10\n  if (decimal != 1) {\n    const unit = count % 10\n    if (unit == 1) {\n      result = word1\n    } else if ( unit >= 2 && unit <= 4 ) {\n      result = word2_4\n    }\n  }\n  return result\n}\n\n// ==========================================================================\n\nexport let $me_throw_silent = false\nexport function $me_throw(msg: string, ...p: any) {\n  if (!$me_throw_silent) console.error.apply(console, [msg, ...p])\n  throw new Error(msg)\n}\n\nexport let $me_debug: any\nexport let $me_stop = false\n\n// ==========================================================================\n\nexport enum $me_theme { light, dark }\n\n// ==========================================================================\n\nexport interface $me_size_intf {\n  width: number,\n  height: number,\n}\n\nexport interface $me_point_intf {\n  x: number,\n  y: number,\n}\n\nexport interface $me_rect_intf {\n  top: number,\n  bottom: number,\n  left: number,\n  right: number,\n}\n\nexport const $me_rect = () => ({left: 0, top: 0, right: 0, bottom: 0})\n\nexport const $me_rect_width = (rect: $me_rect_intf) =>\n  rect.right - rect.left\n\nexport const $me_rect_height = (rect: $me_rect_intf) =>\n  rect.bottom - rect.top\n\n// export const $me_rect = () => ({left: 0, top: 0, right: 0, bottom: 0})\n\nexport interface $me_pos_intf {\n  top?: number,\n  bottom?: number,\n  left?: number,\n  right?: number,\n}\n\nexport const $me_pos = () => ({left: 0, top: 0})\n\nexport const $me_point_in_rect = (x: number, y: number, rect: $me_rect_intf, tolerance = 0) =>\n  rect.left - tolerance < x && x < rect.right + tolerance &&\n  rect.top - tolerance < y && y < rect.bottom + tolerance\n\nexport const $me_dist_to_rect = (x: number, y: number, rect: $me_rect_intf) =>\n  $me_point_in_rect(x, y, rect) ? 0 :\n  Math.max(\n    Math.min(\n      Math.abs(rect.left - x),\n      Math.abs(rect.right - x),\n    ),\n    Math.min(\n      Math.abs(rect.top - y),\n      Math.abs(rect.bottom - y),\n    )\n  )\n\n\nexport function $me_point_in_rect_offset(\n  x: number,\n  y: number,\n  offsetRect: $me_rect_intf,\n  clientRect: $me_rect_intf\n) {\n  x -= clientRect.left\n  y -= clientRect.top\n  const result =\n    offsetRect && clientRect &&\n    offsetRect.left < x && x < offsetRect.right &&\n    offsetRect.top < y && y < offsetRect.bottom &&\n  true\n  return result\n}\n\n// ==========================================================================\n\nexport interface $me_options_caption_intf {\n  text: string,\n  width?: number,\n}\n\nexport type $me_options_caption = string | $me_options_caption_intf\n\nexport type $me_options_caption_fn =\n  (p: {\n    isSelected: boolean,\n    val: string|Set<string>|Map<string, null>,\n  }) => $me_options_caption\n\nexport interface $me_option_intf {\n  caption?: $me_options_caption | $me_options_caption_fn\n}\n\nexport interface $me_options {\n  [id: string]: $me_option_intf\n}\n\nexport function $me_option_caption(\n  id: string,\n  options: $me_options,\n  val?: string | Set<string> | Map<string, null>,\n): $me_options_caption {\n  const isSelected =\n    typeof val == 'string' ? val == id :\n    val instanceof Set ? (val as Set<string>).has(id) :\n    val instanceof Map ? (val as Map<string, null>).has(id) :\n    false\n  const caption : $me_options_caption =\n    typeof options[id].caption == 'function' ?\n    (options[id].caption as $me_options_caption_fn)({val, isSelected}) :\n    options[id].caption as $me_options_caption\n  return caption\n}\n\nexport function $me_option_caption_text(\n  id: string,\n  options: $me_options,\n  val?: string | Set<string> | Map<string, null>,\n): string {\n  const caption = $me_option_caption(id, options, val)\n  const result =\n    typeof caption == 'string' ? caption as string :\n    !caption || typeof (caption as $me_options_caption_intf).text != 'string' ? id :\n    (caption as $me_options_caption_intf).text\n  return result\n}\n\n// ==========================================================================\n\nexport type $me_fn<Value=void> = () => Value\n\n// ==========================================================================\n\nexport const $me_enum_names = (val: Object) => {\n  if (_enum_names_cache.has(val)) return _enum_names_cache.get(val)\n  const result = Object.keys(val).filter(key => typeof val[key] == 'number') as string[]\n  _enum_names_cache.set(val, result)\n  return result\n}\nconst _enum_names_cache = new Map<Object, string[]>()\n\nexport const $me_enum_values = (val: Object) => {\n  if (_enum_values_cache.has(val)) return _enum_values_cache.get(val)\n  const result = Object.keys(val).reduce((result, key) => {\n    const n = +key\n    if (Number.isFinite(n)) result.push(n)\n    return result\n  }, Array<number>())\n  _enum_values_cache.set(val, result)\n  return result\n}\nconst _enum_values_cache = new Map<Object, number[]>()\n\nexport const $me_enum_pairs = (val: Object) => {\n  if (_enum_pairs_cache.has(val)) return _enum_pairs_cache.get(val)\n  const result = $me_enum_values(val).map(value => [ value, val[value] ]) as [number, string][]\n  // if (_enum_values_cache.has(val)) return _enum_values_cache.get(val)\n  // const result = Object.keys(val).filter(key => typeof val[key] == 'string')\n  _enum_pairs_cache.set(val, result)\n  return result\n}\nconst _enum_pairs_cache = new Map<Object, [number, string][]>()\n\n// ==========================================================================\n\nexport enum $me_rect_corners_enum {leftTop, rightTop, leftBottom, rightBottom}\nexport interface $me_rect_corners_intf<Value=number> {\n  leftTop: Value,\n  rightTop: Value,\n  leftBottom: Value,\n  rightBottom: Value,\n}\nexport enum $me_rect_sides_enum {left, top, right, bottom}\nexport interface $me_rect_sides_intf<Value=number> {\n  left?: Value,\n  top?: Value,\n  right?: Value,\n  bottom?: Value,\n}\n\n// ==========================================================================\n\nexport enum $me_align { left = 0, top = 0, right = 1, bottom = 1, center = 2 }\n\nexport function $me_align_correction(align: $me_align, correction: $me_fn<number>) {\n  return (align == $me_align.left ? 0 : correction() / align)\n}\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nexport type $me_atom2_async_fn = (t: number) => void\nexport interface $me_atom2_async_p_intf\n  extends queue_item_intf {\n    fn: $me_atom2_async_fn\n  }\n\nexport function $me_atom2_async(p?: $me_atom2_async_p_intf, add = true) {\n  if ($me_stop) return\n  if (p !== void 0) {\n    add_to_queue(\n      p,\n      _me_atom2_async_raf_queue,\n      add ? null :\n        (pa, pb) =>\n          (pa as $me_atom2_async_p_intf).fn ===\n          (pb as $me_atom2_async_p_intf).fn\n    )\n  } else if (_raf == null) {\n    _raf = requestAnimationFrame(t => {\n      _raf = null\n    if ($me_stop) return\n      const start_raf = performance.now()\n      // const deadline = start_raf + 14\n      const deadline = start_raf + 60000\n      for (const {fn} of _me_atom2_async_raf_queue) fn(t)\n      {\n        const stat = new Map<string, $me_atom2_async_stat_item_intf>()\n        const len = _me_atom2_async_ric_queue.length\n        let i = 0\n        // let last_now: number\n        // $me_atom2.brutto_time = 0\n        $me_atom2.update_count = 0\n        $me_atom2.compute_count = 0\n        $me_atom2.pure_compute_count = 0\n        $me_atom2.update_timing = 0\n        $me_atom2.compute_timing = 0\n        $me_atom2.pure_compute_timing = 0\n        const start_ric = performance.now()\n        for (; performance.now() < deadline && i < len; i++) {\n          const {fn, name} = _me_atom2_async_ric_queue[i]\n          const start_fn = performance.now()\n          // const [count, pre] = fn(deadline, start_fn, t + performance.now() - start_raf)\n          const [count, pre] = fn(deadline, start_fn, t)\n          $me_atom2_async_stat_update(stat, name, count, pre, performance.now() - start_fn)\n          if (count) i = -1 // to start next round with i = 0\n        }\n        if (i < len) $me_atom2_async()\n        // if ($me_atom2.brutto_time > 5) console.warn({brutto_time: $me_atom2.brutto_time})\n        $me_atom2_async_stat_show(stat, start_ric, 'IDLE_CALLBACK')\n      }\n    })\n  }\n}\nlet _raf: number\nexport let _me_atom2_async_raf_queue = Array<$me_atom2_async_p_intf>()\n\nexport function $me_atom2_async_stat_update(\n  stat: Map<string, $me_atom2_async_stat_item_intf>,\n  name: string,\n  count: number,\n  pre: number,\n  timing: number,\n) {\n  if (!(count || timing > 1 || pre > 1)) return\n  const has = stat.has(name)\n  const si = has ? stat.get(name) : <$me_atom2_async_stat_item_intf>{count: 0, pre: 0, timing: 0}\n  si.pre += pre\n  si.count += count\n  si.timing += timing\n  if (!has) stat.set(name, si)\n}\n\nexport function $me_atom2_async_stat_show(\n  stat: Map<string, $me_atom2_async_stat_item_intf>,\n  start: number,\n  name: string,\n) {\n  if (!stat.size) return\n  const atom_stat = a.root().by_path_s('/.#stat')\n  if (typeof atom_stat === 'string') return\n  const thresholds = (atom_stat as $me_atom2<number[]>).value()\n  if (!thresholds) return\n  const timing = +(performance.now() - start).toFixed(1)\n  if (timing < thresholds[0]) return\n  const result = [ <table_item_intf>{name, timing} ]\n  if (thresholds.length >= 3 && timing > thresholds[2]) {\n    console.error({name, timing})\n  } else if (thresholds.length >= 2 && timing > thresholds[1]) {\n    console.warn({name, timing})\n  }\n  for (const [name, si] of stat) {\n    const item = <table_item_intf>{\n      name,\n      timing: +si.timing.toFixed(1),\n    }\n    const pre = +si.pre.toFixed(1)\n    if (pre)\n      item.timing = `${item.timing} (-${pre} => ${(item.timing - pre).toFixed(1)})`\n    if (si.count) {\n      item.count = si.count\n      item.per = (si.timing - si.pre) / si.count\n    }\n    result.push(item)\n  }\n  // result.sort((i1, i2) => i2.timing - i1.timing)\n  console.table(result)\n  console.log({\n    count: `${$me_atom2.update_count}/${$me_atom2.compute_count}/${$me_atom2.pure_compute_count}`,\n    // update_count: $me_atom2.update_count,\n    // compute_count: $me_atom2.compute_count,\n    // pure_compute_count: $me_atom2.compute_count,\n    timing: `${Math.round($me_atom2.update_timing)}/${Math.round($me_atom2.compute_timing)}/${Math.round($me_atom2.pure_compute_timing)}`\n    // update_timing: $me_atom2.update_timing,\n    // compute_timing: $me_atom2.compute_timing,\n    // pure_compute_timing: $me_atom2.compute_timing,\n  })\n}\n\ninterface table_item_intf {\n  name: string,\n  timing: any,\n  count?: number,\n  per?: number\n}\n\n// ==========================================================================\n\ninterface queue_item_intf { order?: number }\ntype queue_type = Array<queue_item_intf>\n\nfunction add_to_queue(\n  p: queue_item_intf,\n  queue: queue_type,\n  equal?: (pa: queue_item_intf, pb: queue_item_intf) => boolean\n) {\n  if (equal) {\n    const len = queue.length\n    for (let i = len - 1; i >= 0; i--)\n      if (equal(p, queue[i]))\n        queue.splice(i, 1)\n  } else {\n    let i = p.order != null ? 0 : queue.length\n    if (p.order != null)\n      while (\n        i < queue.length &&\n        queue[i].order != null &&\n        p.order >= queue[i++].order\n      ) {}\n    queue.splice(i, 0, p)\n  }\n}\n\n// ==========================================================================\n\nexport type $me_atom2_async_ric_fn = (deadline: number, last_now: number, t: number) => [number, number]\nexport interface $me_atom2_async_ric_p_intf\n  extends queue_item_intf {\n    fn?: $me_atom2_async_ric_fn,\n    name: string\n  }\nexport function $me_atom2_async_ric(\n  p?: $me_atom2_async_ric_p_intf\n  ) {\n  if (p !== void 0) {\n    add_to_queue(p, _me_atom2_async_ric_queue)\n  } else {\n    $me_atom2_async()\n  }\n}\n\nlet _me_atom2_async_ric_queue = Array<$me_atom2_async_ric_p_intf>()\nexport interface $me_atom2_async_stat_item_intf {\n  pre: number,\n  count: number,\n  timing: number,\n  per?: number\n}\n\n// ==========================================================================\n\nexport type $me_atom2_async_multi_origin_fn<Value, Origin> =\n  (p?: {\n    origin: Origin,\n    val: Value,\n    immediatly?: boolean,\n  }) => Value\n\nexport function $me_atom2_async_multi_origin<Value, Origin>(pp: {\n  name?: string,\n  default: Value,\n  raf_order?: number,\n  flush: (val: Value, _prev: Value, _value: { origin: Origin, val: Value }) => void,\n}) : $me_atom2_async_multi_origin_fn<Value, Origin> {\n  const _default = pp.default\n  const _raf_order = pp.raf_order\n  let _value: { origin: Origin, val: Value }\n  let _need_flush = false\n  let _prev: Value\n  const _flush = () => {\n    if (!_need_flush) return\n    pp.flush(_value.val, _prev, _value)\n    _prev = _value.val\n    _need_flush = false\n  }\n  if (_raf_order != null) $me_atom2_async({fn: _flush, order: _raf_order})\n  const result = function (p?: {\n    origin: Origin,\n    val: Value,\n    immediatly?: boolean,\n  }) : Value {\n    if ((p !== void 0) && (\n      _value == null || (\n        $me_equal(p.origin, _value.origin) ?\n        !$me_equal(p.val, _value.val) :\n        !$me_equal(p.val, _default)\n      )\n    )) {\n      // if (pp.name == 'cursor') console.warn((p.origin as any as $me_atom2_path).toString(), p.val)\n      _value = {origin: p.origin, val: p.val}\n      _need_flush = true\n      if (_raf_order == null && p.immediatly === false)\n        $me_throw('immediatly can not be false whilst raf_order is not set')\n      if (_raf_order == null || p.immediatly) {\n        _flush()\n      } else {\n        $me_atom2_async()\n      }\n    }\n    return _value ? _value.val : _default\n  }\n  return result\n}\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ==========================================================================\n\nexport interface $me_atom2_path_class_p_intf {\n  ent: $me_atom2_entity_enum,\n  tail?: string,\n  path?: $me_atom2_path,\n}\n\nexport class $me_atom2_path {\n  readonly ent: $me_atom2_entity_enum\n  readonly tail: string\n  readonly path: $me_atom2_path\n  constructor (p: $me_atom2_path_class_p_intf) {\n    this.ent = p.ent\n    const isRoot = p.ent === $me_atom2_entity_enum.root\n    this.tail = isRoot ? '' : p.tail\n    this.path = isRoot ? null : p.path\n  }\n  get 'toString()'() {\n    return this.toString()\n  }\n  static fromString(s: string, pos = 0, keys?: $me_atom2_keys_intf): $me_atom2_path | string {\n    let idx_key = 0\n    const err = (msg: string) => `${msg} in '${s}' at pos ${pos}`\n    let path: $me_atom2_path\n    let ent: $me_atom2_entity_enum\n    while (pos < s.length) {\n      const ent_prev = ent\n      let ch = s.slice(pos, pos + 1)\n      ent = $me_atom2_path_ent2prefix.indexOf(ch) as $me_atom2_entity_enum\n      const expected =\n        ent_prev == $me_atom2_entity_enum.prop && (\n          ent === $me_atom2_entity_enum.control ||\n          ent === $me_atom2_entity_enum.elem\n        ) ? `\"${$me_atom2_path_ent2prefix[$me_atom2_entity_enum.prop]}\"` :\n        ent < 0 ||\n        ent === $me_atom2_entity_enum.root && pos ||\n        ent === $me_atom2_entity_enum.key ? $me_atom2_path_ent2prefix\n          .filter((val, idx) => idx > $me_atom2_entity_enum.key)\n          .reduce((result, val, idx, arr) =>\n            result +\n            (\n              !idx ? '' :\n              idx < arr.length - 1 ? `, ` :\n              ` or `\n            ) +\n            `\"${val}\"`\n          , '') :\n          ''\n      if (expected)\n        return err(`${expected} is expected instead of \"${ch}\"`)\n      pos++\n      let pos_next = indexOf(s, pos, ...$me_atom2_path_ent2prefix, ']')\n      let tail = s.slice(pos, pos_next)\n      if (!tail && ent !== $me_atom2_entity_enum.root) {\n        if (ent === $me_atom2_entity_enum.prop && (\n          (ch = s.slice(pos_next, pos_next + 1)) == $me_atom2_path_ent2prefix[$me_atom2_entity_enum.control] ||\n          ch == $me_atom2_path_ent2prefix[$me_atom2_entity_enum.elem]\n        )) {\n          tail = s.slice(pos, pos_next = indexOf(s, pos_next + 1, ...$me_atom2_path_ent2prefix, ']'))\n        } else {\n          return err(`${$me_atom2_entity_enum[ent]} name must not be empty`)\n        }\n      }\n      pos = pos_next\n      path = new $me_atom2_path({ent, tail, path})\n      if (pos < s.length) {\n        ch = s.slice(pos, pos + 1)\n        if (ch === ']') {\n          return err(`\"]\" without preceding \"[\" found`)\n        } else\n          while (ch === '[') {\n            const pos_next = indexOf(s, pos + 1, ']')\n            if (pos_next === s.length)\n              return err(`not found \"]\" for \"[\"`)\n\n            let tail: string\n            if (pos_next - pos >= 2) {\n              tail = s.slice(pos + 1, pos_next)\n              // const firstChar = tail.charAt(0)\n              // if ((firstChar == '-' || firstChar == '+') && Number.isInteger(+tail)) {\n              //   if (!keys) return err(`keys must be provided`)\n              //   if (idx_key >= keys.key.length) return err(`keys[${idx_key}] must be provided`)\n              //   const idx = keys.key_enum[idx_key].indexOf(keys.key[idx_key]) + +tail\n              // console.warn(keys.key_enum[idx_key].indexOf(keys.key[idx_key]), {idx_key, tail})\n              //   if (idx < 0 || idx >= keys.key_enum[idx_key].length)\n              //     return err(`[${tail} => ${idx}] is out of range: [0, ${keys.key_enum[idx_key].length - 1}]`)\n              // }\n              // if (tail.)\n              // if (tail == '-1') {\n              //   console.log(tail, keys)\n              // }\n              // // TODO: [-1], [+1], [0:], [1:-1]\n            } else {\n              if (!keys) return err(`keys must be provided`)\n                // console.log(keys.key)\n              if (idx_key >= keys.key.length) return err(`keys[${idx_key}] must be provided`)\n              tail = keys.key[idx_key++]\n            }\n            const ent = $me_atom2_entity_enum.key\n            path = new $me_atom2_path({ent, tail, path})\n            pos = pos_next + 1\n            if (pos >= s.length) break\n            ch = s.slice(pos, pos + 1)\n          }\n      }\n    }\n    return path\n  }\n  toString(...paths: $me_atom2_path[]) {\n    paths.push(this)\n    const arr = Array<{ent: $me_atom2_entity_enum, tail: string}>()\n    for (let path of paths.reverse()) {\n      arr.push(path)\n      while (path = path.path) arr.push(path)\n    }\n    const result = arr\n      .reverse()\n      .reduce((result, item, idx) =>\n        result +\n        $me_atom2_path_ent2prefix[item.ent] +\n        item.tail +\n        ent2suffix[item.ent] +\n        ''\n      , '')\n    return result\n  }\n}\n\nexport const $me_atom2_path_ent2prefix = ['/', '[', '.', '^', '@']\nconst ent2suffix = ['', ']', '', '', '']\nexport const $me_atom2_path_ch_parent = '<'\n\nfunction indexOf(s: string, from: number, ...ch_seek_for: string[]) {\n  const len = s.length\n  const len_ch_seek_for = ch_seek_for.length\n  for (let i = from; i < len; i++) {\n    const ch = s.slice(i, i + 1)\n    for (let j = 0; j < len_ch_seek_for; j++)\n      if (ch === ch_seek_for[j])\n        return i\n  }\n  return len\n}\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ==========================================================================\n\nexport enum $me_atom2_entity_enum {root, key, prop, control, elem}\n\nexport interface $me_atom2_entity_class_p_base_intf {\n  tail?: string,\n  parent?: $me_atom2_entity,\n}\n\nexport interface $me_atom2_entity_class_p_intf\n  extends $me_atom2_entity_class_p_base_intf\n  {\n    ent: $me_atom2_entity_enum,\n  }\n\nexport let $me_atom2_entity_saved = 0\nexport let $me_atom2_entity_saved_stat = <{[tail: string]: number}>{}\n\nexport class $me_atom2_entity {\n  static root(): $me_atom2_entity {\n    if (!$me_atom2_entity._root)\n      $me_atom2_entity._root = new $me_atom2_entity({ent: $me_atom2_entity_enum.root})\n    return $me_atom2_entity._root\n  }\n  static by_path_s<Entity extends $me_atom2_entity=$me_atom2_entity>(s: string) {\n    return $me_atom2_entity.root().by_path_s(s) as Entity\n  }\n  static by_path<Entity extends $me_atom2_entity=$me_atom2_entity>(path: $me_atom2_path) {\n    return $me_atom2_entity.root().by_path(path) as Entity\n  }\n  private static _root: $me_atom2_entity\n\n  // ===========================\n\n  readonly path: $me_atom2_path\n  constructor (p: $me_atom2_entity_class_p_intf) {\n    const pp = <$me_atom2_path_class_p_intf>{ ent: p.ent }\n    const isRoot = p.ent === $me_atom2_entity_enum.root\n    if (isRoot) {\n      this._active = true\n    } else {\n      this._active = true\n      pp.tail = p.tail\n      pp.path = p.parent && p.parent.path ||  $me_atom2_entity.root().path\n    }\n    this.path = new $me_atom2_path(pp)\n    if (!isRoot) {\n      const parent = this.parent()\n      const enitites = parent._entities || (parent._entities = {})\n\n      const ent_name = $me_atom2_entity_enum[p.ent]\n      const enitites_of_type = enitites[ent_name] || (enitites[ent_name] = {})\n\n      if (enitites_of_type[p.tail])\n        $me_throw(`${parent.path} already has ${ent_name} '${p.tail}'`)\n      enitites_of_type[p.tail] = this\n      this._active = parent._active\n    }\n    // if (p.ent == $me_atom2_entity_enum.elem || p.ent == $me_atom2_entity_enum.control) {\n    // if (!$me_atom2_en.to_activate_candidates) $me_atom2.to_activate_candidates = new Set<$me_atom2_entity>()\n    $me_atom2_entity._to_activate.add(this)\n    // }\n    this.met(this.path.ent, this.path.tail)\n  }\n  // static to_activate_candidates: Set<$me_atom2_entity>\n  protected _on_active() {\n  }\n  destroy() {\n    if (this.path.ent === $me_atom2_entity_enum.root)\n      $me_throw(`can not destroy root`)\n    this._active = false\n    $me_atom2_entity._to_activate.delete(this)\n    // this.active(false)\n    // if (!$me_atom2.to_activate_candidates)\n    if (this._entities) {\n      for (const ent_name in this._entities) {\n        const enitites_of_type = this._entities[ent_name]\n        for (const name in enitites_of_type)\n          enitites_of_type[name].destroy()\n      }\n    }\n    const ent_name = $me_atom2_entity_enum[this.path.ent]\n    const parent = this.parent()\n    if (parent) {\n      if (parent._entities[ent_name]) {\n        delete parent._entities[ent_name][this.path.tail]\n      } else {\n        $me_throw(this.name(), parent.name(), parent._entities, (this._descendant(0) as $me_atom2_entity).name())\n      }\n    } else {\n      $me_throw(this.name())\n    }\n    // this._parent_cache = null\n  }\n  by_path_s(s: string, keys?: $me_atom2_keys_intf): $me_atom2_entity | string {\n    let parent = this as $me_atom2_entity\n    let n = 0\n    let ch = s.slice(0, 1)\n    if (ch === $me_atom2_path_ent2prefix[$me_atom2_entity_enum.root]) {\n      parent = $me_atom2_entity.root()\n      n = 1\n    } else if (ch === $me_atom2_path_ch_parent) {\n      while (true) {\n        n++\n        ch = s.slice(n, n + 1)\n        if (n >= s.length || ch !== $me_atom2_path_ch_parent) break\n      }\n      parent = this._descendant(n - 1, true) as $me_atom2_entity\n      if (typeof parent === 'string')\n        $me_throw(`${s}: ${parent}`)\n    }\n    const path = $me_atom2_path.fromString(s, n, keys) as $me_atom2_path\n    if (typeof path === 'string')\n      $me_throw(`${s}: ${path}`)\n    const result = parent.by_path(path) || path.toString(parent.path)\n    return result\n  }\n  by_path<Entity extends $me_atom2_entity=$me_atom2_entity>(path: $me_atom2_path): Entity {\n    let result = null as Entity\n    if (!path) {\n      result = this as any as Entity\n    } else if (path.ent === $me_atom2_entity_enum.root) {\n      result = $me_atom2_entity.root() as any as Entity\n    } else {\n      const entity_parent = !path.path ? this : this.by_path(path.path)\n      if (entity_parent) {\n        const enitites = entity_parent._entities\n        if (enitites) {\n          const ent_name = $me_atom2_entity_enum[path.ent]\n          const enitites_of_type = enitites[ent_name]\n          result = enitites_of_type && enitites_of_type[path.tail] as Entity\n        }\n      }\n    }\n    return result\n  }\n  static _static_active: boolean\n  static static_active(val?: boolean) {\n    if (void 0 !== val) {\n      // console.log(this.name(), val)\n      $me_atom2_entity._static_active = val\n      if (val) {\n        // if ($me_atom2.to_activate_candidates) {\n        //   for (const entity of $me_atom2.to_activate_candidates) {\n        //     entity._on_active()\n        //   }\n        // }\n        // for (const entity of $me_atom2.to_activate_candidates)\n        //   $me_atom2._to_activate.add(entity)\n\n        // $me_atom2._to_activate = $me_atom2.to_activate_candidates\n        // $me_atom2.to_activate_candidates = null\n        $me_atom2_async()\n      }\n    }\n    return $me_atom2_entity._static_active\n    // return $me_atom2_entity._static_active !== void 0 ? $me_atom2_entity._static_active : this.path.ent === $me_atom2_entity_enum.root\n  }\n  active(val?: boolean) {\n    return this._active && $me_atom2_entity.static_active()\n    // $me_atom2_entity_enum.root\n    // if (void 0 !== val) {\n    //   console.log(this.name(), val)\n    //   $me_atom2_entity.static_active = val\n    //   if (val) {\n    //     if ($me_atom2.to_activate_candidates) {\n    //       for (const entity of $me_atom2.to_activate_candidates) {\n    //         entity._on_active()\n    //       }\n    //     }\n    //     // $me_atom2._to_activate = $me_atom2.to_activate_candidates\n    //     $me_atom2.to_activate_candidates = null\n    //     $me_atom2_async()\n    //   }\n    // }\n    // return $me_atom2_entity.static_active !== void 0 ? $me_atom2_entity.static_active : this.path.ent === $me_atom2_entity_enum.root\n    // return this.path.ent === $me_atom2_entity_enum.root || $me_atom2_entity.static_active\n    // if (this.entity_active_did) return true\n    // return true\n    // if (void 0 !== val) {\n    //   val = val && (this.path.ent === $me_atom2_entity_enum.root || this.parent()._active)\n    //   if (val !== this._active) {\n    //     this._active = val\n    //     for (const ent_name in this._entities) {\n    //       const enitites_of_type = this._entities[ent_name]\n    //       for (const tail in enitites_of_type) {\n    //         // if (!enitites_of_type[tail].active) $me_throw(tail, this.name(), enitites_of_type) //console.warn(this.name(), tail)\n    //         enitites_of_type[tail].active(val)\n    //       }\n    //     }\n    //     if (val) {\n    //       this._on_active()\n    //       // this.entity_active_did = true\n    //     }\n    //   }\n    // }\n    // return this._active\n  }\n  // private entity_active_did: boolean\n  parent(skip_keys = false) {\n    const ret = this._descendant(0, skip_keys)\n    if (!ret) $me_throw('no parent', this)\n    if (typeof ret == 'string') $me_throw(ret as string, this)\n    return ret as $me_atom2_entity\n  }\n  name() {\n    return this.path.toString()\n  }\n  props(props: $me_atom2_prop_intf | $me_atom2_prop_intf[], pp?: {\n    def?: (pp: {\n      tail: string,\n      idx: number,\n      len: number,\n      prop_defined: {[tail: string]: number},\n      prop_def: $me_atom2_prop_def<any>,\n      p: $me_atom2_prop_def_prepare_p_intf<any>,\n    }) => $me_atom2_def<any>,\n    dup?: (pp: {\n      tail: string,\n      idx: number,\n      len: number,\n      prop_defined: {[tail: string]: number},\n      src: $me_atom2_prop_intf[],\n    }) => void,\n  }) {\n    const prop_defined = <{[tail: string]: number}>{}\n    if (props) {\n      const src =\n        Array.isArray(props) ?\n        props as $me_atom2_prop_intf[] :\n        [props as $me_atom2_prop_intf]\n      let idx = 0\n      const len = src.length\n      for (const props of src) {\n        if (props)\n          for (const tail in props)\n            if (props[tail])\n              if (void 0 === prop_defined[tail]) {\n                const prop_def = props[tail]\n                const p = <$me_atom2_prop_def_prepare_p_intf<any>>{\n                  parent: this,\n                  tail,\n                }\n                let def_atom: $me_atom2_def<any>\n                if (pp && pp.def )\n                  def_atom = pp.def({tail, idx, len, prop_defined, prop_def, p})\n                if (def_atom === null) continue\n                if (def_atom === void 0)\n                  def_atom = $me_atom2_prop_def_prepare<any>(prop_def, p)\n\n                /// !!! EXPERIMENTAL\n                if (false) {\n                  const pp = def_atom as $me_atom2_def_compute_apply_intf<any>\n                  if (!pp.fn_apply && Array.isArray(pp.masters)) {\n                    const masters = pp.masters as string[]\n                    const len = masters.length\n                    if (len == 1) {\n                      const master = (pp.masters as string[])[0]\n                      if (master.indexOf('[') === -1) {\n                        let conforms = master.startsWith('/')\n                        let atom: $me_atom2\n                        if (conforms) {\n                          atom = $me_atom2_entity.root().by_path_s(master) as $me_atom2\n                          conforms = atom instanceof $me_atom2\n                        } else if (master.startsWith('.') && !pp.fn_compute) {\n                          atom = pp.parent.by_path_s(master) as $me_atom2\n                          conforms = (atom instanceof $me_atom2 && atom.path.path !== pp.parent.path)\n                        }\n                        if (conforms) {\n                          if (!pp.parent._entities) pp.parent._entities = {}\n                          if (!pp.parent._entities.prop) pp.parent._entities.prop = {}\n                          pp.parent._entities.prop[pp.tail] = atom\n                          prop_defined[tail] = idx\n                          $me_atom2_entity_saved++\n                          if (!$me_atom2_entity_saved_stat[tail]) $me_atom2_entity_saved_stat[tail] = 0\n                          $me_atom2_entity_saved_stat[tail]++\n                          continue\n                        }\n                      }\n                    } else if (len > 0) {\n                      let b = false\n                      for (const master of masters) {\n                        let conforms = master.startsWith('/')\n                        let atom: $me_atom2\n                        if (conforms) {\n                          atom = $me_atom2_entity.root().by_path_s(master) as $me_atom2\n                          conforms = atom instanceof $me_atom2\n                        } else if (master.startsWith('.') && !pp.fn_compute) {\n                          atom = pp.parent.by_path_s(master) as $me_atom2\n                          conforms = (atom instanceof $me_atom2 && atom.path.path !== pp.parent.path)\n                        }\n                        if (!(b = conforms)) break\n                      }\n                      if (b) console.warn(pp)\n                    }\n                  }\n                }\n\n                $me_atom2.to_def.push(def_atom)\n                this.wait($me_atom2_entity_enum.prop, tail)\n                prop_defined[tail] = idx\n              } else if (pp && pp.dup) {\n                pp.dup({tail, idx, len, prop_defined, src})\n              }\n        idx++\n      }\n    }\n    return prop_defined\n  }\n  // ===========================\n  get 'parent()'() {\n    return this.parent()\n  }\n  get 'name()'() {\n    return this.name()\n  }\n  // toString() {\n  //   return this.name()\n  // }\n  // ===========================\n  // private\n  _active: boolean\n  // protected\n  _entities: {\n    [ent_name: string]: {\n      [entity_name: string]: $me_atom2_entity\n    }\n  }\n  // private _parent_cache: {\n  //   [skip_keys: string]: $me_atom2_entity\n  // }\n  _descendant(level: number, skip_keys = false): $me_atom2_entity | string {\n    // let cache_key: string\n    // if (level === 0 && this._parent_cache && this._parent_cache[cache_key = skip_keys + '']) {\n    //   return this._parent_cache[cache_key]\n    // }\n    let path = this.path\n    let i = level + 1\n    for (; i > 0 && path.ent !== $me_atom2_entity_enum.root; i--) {\n      if (!skip_keys || path.ent !== $me_atom2_entity_enum.key) {\n        path = path.path\n      } else {\n        while (path.ent === $me_atom2_entity_enum.key) path = path.path\n        path = path.path\n      }\n    }\n    if (i > 0)\n      return `'${this.path}'._descendant(${!level ? '' : level}) is out of range (no parent above root)`\n    const result = $me_atom2_entity.root().by_path(path)\n    if (result == null)\n      return `entity '${path}' not found`\n    // if (level === 0) {\n    //   if (!this._parent_cache) this._parent_cache = {}\n    //   this._parent_cache[cache_key || skip_keys + ''] = result as $me_atom2_entity\n    // }\n    return result as $me_atom2_entity\n  }\n  // ===========================\n  // private\n  _waiting_for: Map<$me_atom2_entity_enum, Set<string>>\n  wait(ent: $me_atom2_entity_enum, tail: string) {\n    if (!this._waiting_for) this._waiting_for = new Map()\n    if (!this._waiting_for.has(ent)) this._waiting_for.set(ent, new Set())\n    this._waiting_for.get(ent).add(tail)\n\n    // following code significally slows grid scroll:\n    if (this.path.ent !== $me_atom2_entity_enum.root)\n      this.parent().wait(this.path.ent, this.path.tail)\n\n    $me_atom2.static_active(false)\n    // this.active(false)\n  }\n  met(ent: $me_atom2_entity_enum, tail: string) {\n    if (this._waiting_for) {\n      if (this._waiting_for.has(ent)) {\n        const ss = this._waiting_for.get(ent)\n        ss.delete(tail)\n        if (!ss.size) this._waiting_for.delete(ent)\n        if (!this._waiting_for.size) this._waiting_for = null\n      }\n    }\n    if (!this._waiting_for) {\n      if (this.path.ent !== $me_atom2_entity_enum.root)\n        this.parent().met(this.path.ent, this.path.tail)\n      // if (this.path.ent == $me_atom2_entity_enum.root) console.error('heer')\n      // $me_atom2_entity._to_activate.add(this.path)\n      $me_atom2.static_active(true)\n      $me_atom2_async()\n    }\n  }\n  static activate_entities() {\n    const root = $me_atom2_entity.root()\n    let count = 0\n    // console.warn($me_atom2_entity.static_active(), $me_atom2_entity._to_activate)\n    if ($me_atom2_entity.static_active() && $me_atom2_entity._to_activate.size) {\n      for (const entity of $me_atom2_entity._to_activate) {\n        if (entity._waiting_for) continue\n        if (entity._active) {\n          entity._on_active()\n          count++\n        }\n        $me_atom2_entity._to_activate.delete(entity)\n      }\n    }\n    // for (const path of $me_atom2_entity._to_activate) {\n    //   const entity = root.by_path(path)\n    //   if (entity && !entity._waiting_for && !entity.active()) {\n    //     const start = performance.now()\n    //     entity.active(true)\n    //     if ($me_debug) console.warn(entity.name(), performance.now() - start)\n    //     count++\n    //   }\n    // }\n    // const count = $me_atom2_entity._to_activate.size\n    // $me_atom2_entity._to_activate.clear()\n    return count\n  }\n  static _to_activate = new Set<$me_atom2_entity>()\n}\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nexport interface $me_atom2_prop_intf {\n  [prop: string]: $me_atom2_prop_def<any>\n}\n\nexport type $me_atom2_prop_def<Value=number, Masters=any[]> =\n  $me_atom2_prop_compute_only_def<Value, Masters> |\n  $me_atom2_prop_def_compute_apply_intf<Value>\n\nexport type $me_atom2_prop_compute_only_def<Value=number, Masters=any[]> =\n  $me_atom2_prop_def_compute_intf<Value, Masters> |\n  $me_atom2_prop_fn<Value> |\n  string\n\nexport interface $me_atom2_prop_def_compute_apply_intf<Value=number, Masters=any[]>\n  extends $me_atom2_prop_def_compute_intf<Value, Masters>\n  {\n    fn_apply?: $me_atom2_apply_fn<Value>,\n  }\n\nexport interface $me_atom2_prop_def_compute_intf<Value=number, Masters=any[]> {\n  masters: string[],\n  fn_compute?: $me_atom2_compute_fn<Value, Masters>,\n}\n\nexport type $me_atom2_prop_fn<Value=number> =\n  $me_fn<Value> |\n  $me_atom2_prop_key_fn<Value>\n\n// ============================================================================\n\nexport type $me_atom2_prop_key_fn<Value=number> =\n  (key: string) => Value\n\nexport const $me_atom2_prop_masters = <Masters=any[]>(\n  masters: string[],\n  fn_compute: $me_atom2_compute_fn<string[], Masters>,\n) => <$me_atom2_prop_def_compute_intf<string[], Masters>>{masters, fn_compute}\n\nexport type $me_atom2_prop_masters_type =\n  $me_atom2_def_masters_type |\n  $me_atom2_prop_keyed_masters_intf\n\nexport interface $me_atom2_prop_keyed_masters_intf {\n  keys: string[],\n  masters?: $me_atom2_def_masters_type\n}\n\n// ============================================================================\n\nexport function $me_atom2_prop<Value=number, Masters=any[]>(\n  masters: $me_atom2_prop_masters_type,\n  fn_compute?: $me_atom2_compute_fn<Value, Masters>,\n  fn_apply?: $me_atom2_apply_fn<Value>,\n) : $me_atom2_prop_def_compute_apply_intf<Value, Masters> {\n  if (!masters) $me_throw('!masters')\n  const result =\n    Array.isArray(masters) ||\n    typeof (masters as $me_atom2_masters_prop_intf).fn_compute === 'function' ?\n    <$me_atom2_prop_def_compute_apply_intf<Value, Masters>>{\n      masters,\n      fn_compute,\n      fn_apply\n    } :\n    <$me_atom2_prop_def_compute_apply_intf<Value, Masters>>{\n      ...(masters as $me_atom2_prop_keyed_masters_intf),\n      fn_compute,\n      fn_apply,\n    }\n  return result\n}\n\n// ============================================================================\n\nexport const $me_atom2_prop_abstract = <Value=number>() => $me_atom2_prop([],\n  () => null as Value,\n  ({atom}) => { $me_throw(`ABSTRACT: ${atom.name()}`) }\n)\n\n// ============================================================================\n\nexport interface $me_atom2_prop_def_prepare_p_intf<Value>\n  extends $me_atom2_entity_class_p_base_intf\n  {\n    fn_apply?: $me_atom2_apply_fn<Value>,\n    fn_key_idx_changed?: $me_atom2_key_idx_changed_fn,\n  }\n\nexport function $me_atom2_prop_def_prepare<Value=number>(\n  prop_def: $me_atom2_prop_def<Value>,\n  p: $me_atom2_prop_def_prepare_p_intf<Value>\n) : $me_atom2_def_compute_apply_intf<Value> {\n  if (!prop_def) $me_throw(`prop_def is null`)\n  const pp =\n    typeof prop_def === 'string' ? <$me_atom2_prop_def_compute_apply_intf<Value>>{\n      masters: [prop_def as string],\n    } :\n    typeof prop_def === 'function' ? <$me_atom2_prop_def_compute_apply_intf<Value>>{\n      masters: [],\n      fn_compute: prop_def as $me_fn<Value>,\n    } : <$me_atom2_prop_def_compute_apply_intf<Value>>{\n      ...(prop_def as $me_atom2_prop_def_compute_apply_intf<Value>),\n      masters:\n        Array.isArray((prop_def as $me_atom2_prop_def_compute_apply_intf<Value>).masters) ?\n        // ((prop_def as $me_atom2_prop_def_compute_apply_intf<Value>).masters as string[]).slice() :\n        [...(prop_def as $me_atom2_prop_def_compute_apply_intf<Value>).masters] :\n        (prop_def as $me_atom2_prop_def_compute_apply_intf<Value>).masters,\n    }\n\n  if (pp.masters) {\n    const len = pp.masters.length\n    for (let i = 0; i < len; i++)\n      if (!pp.masters[i]) console.error(p.tail, pp.masters, i)\n  }\n\n  if (pp.fn_apply && p.fn_apply)\n    $me_throw(`fn_apply collision for ${p.tail}`, p.fn_apply, pp.fn_apply)\n  pp.fn_apply = pp.fn_apply || p.fn_apply\n\n  return <$me_atom2_def_compute_apply_intf<Value>>{...p, ...pp}\n}\n\n// ============================================================================\n\n\n// function prop_key_def<Value=number>(\n//   props: $me_atom2_prop_intf,\n//   prop: string,\n//   key_suffix: string,\n//   key: string,\n//   prop_def: $me_atom2_prop_def_compute_apply_intf<Iterable<string>, Value>\n// ) {\n//   props[prop + key_suffix] = <$me_atom2_prop_def_compute_apply_intf<Value>>{\n//     key,\n//     masters: prop_def.masters_key,\n//     fn_compute: prop_def.fn_compute_key,\n//     fn_apply: prop_def.fn_apply_key,\n//   }\n// }\n\n// TODO: avoid $me_atom2_prop_scale, use same as me_atom2_prop_compute_fn_sum\n// export const $me_atom2_prop_scale = (\n//   master: string,\n//   k: number\n// ) => (<$me_atom2_prop_def_compute_intf<number>>{masters: [master], fn_compute: ({v}) => v(0) * k})\n\n// export const $me_atom2_prop_compute_fn_scale = (k: number) =>\n//   (pp: $me_atom2_compute_fn_p_intf<number, number[]>) => pp.masters[0] * k\n\n// export const $me_atom2_prop_compute_fn_and = (initial?: boolean) =>\n//   (p: $me_atom2_compute_fn_p_intf<boolean, boolean[]>) =>\n//     p.masters.reduce(\n//       (result, val) => result && val,\n//       initial === void 0 ? true : initial\n//     )\n\nexport const $me_atom2_prop_compute_fn_or = (initial?: boolean) =>\n  initial === void 0 ? compute_fn_or :\n  (p: $me_atom2_compute_fn_p_intf<boolean, boolean[]>) =>\n    compute_fn_and(p, initial)\nconst compute_fn_or = (p: $me_atom2_compute_fn_p_intf<boolean, boolean[]>, initial?: boolean) =>\n    p.masters.reduce(\n      (result, val) => result || val,\n      initial === void 0 ? false : initial\n    )\n\nexport const $me_atom2_prop_compute_fn_and = (initial?: boolean) =>\n  initial === void 0 ? compute_fn_and :\n  (p: $me_atom2_compute_fn_p_intf<boolean, boolean[]>) =>\n    compute_fn_and(p, initial)\nconst compute_fn_and = (p: $me_atom2_compute_fn_p_intf<boolean, boolean[]>, initial?: boolean) =>\n    p.masters.reduce(\n      (result, val) => result && val,\n      initial === void 0 ? true : initial\n    )\n\nexport const $me_atom2_prop_compute_fn_mul = (initial?: number) =>\n  initial === void 0 ? compute_fn_mul :\n  (p: $me_atom2_compute_fn_p_intf<number, number[]>) =>\n    compute_fn_mul(p, initial)\nconst compute_fn_mul = (p: $me_atom2_compute_fn_p_intf<number, number[]>, initial?: number) =>\n    p.masters.reduce(\n      (result, val) => result * val,\n      initial === void 0 ? 1 : initial\n    )\n\nexport const $me_atom2_prop_compute_fn_sum = (initial?: number) =>\n  initial === void 0 ? compute_fn_sum :\n  (p: $me_atom2_compute_fn_p_intf<number, number[]>) =>\n    compute_fn_sum(p, initial)\nconst compute_fn_sum = (p: $me_atom2_compute_fn_p_intf<number, number[]>, initial?: number) =>\n    p.masters.reduce(\n      (result, val) => result + val,\n      initial === void 0 ? 0 : initial\n    )\n\nexport const $me_atom2_prop_compute_fn_diff = (initial?: number) =>\n  initial === void 0 ? compute_fn_diff :\n  (p: $me_atom2_compute_fn_p_intf<number, number[]>) =>\n    compute_fn_diff(p, initial)\nconst compute_fn_diff = (p: $me_atom2_compute_fn_p_intf<number, number[]>, initial?: number) =>\n    p.masters.reduce(\n      (result, val, idx) => result + (!idx ? val : -val),\n      initial === void 0 ? 0 : initial\n    )\n\n// export const $me_atom2_prop_compute_fn_keys =\n//   (p: $me_atom2_compute_fn_p_intf<string[], [{[key: string]: any}]>) =>\n//     Object.keys(p.masters[0])\n    // compute_fn_sum(p, initial)\n\nexport const $me_atom2_prop_keys = (masters: $me_atom2_prop_masters_type, strip_null = false) =>\n  $me_atom2_prop<string[], [{[key: string]: any}]>(masters,\n    ({masters}) => Object.keys(masters[0]).filter((key: string) => !strip_null || masters[0][key] != null),\n  )\n\nexport const $me_atom2_prop_bind = (master: string) =>\n  $me_atom2_prop([master],\n    null, \n    ({val}) => { a(master, val, true) }\n  )\n\n// export const $me_atom2_prop_theme = () =>\n//   $me_atom2_prop([master], null, ({val}) => {a(master, val, true) })\n// =>\n//   $me_atom2_prop<string[], [{[key: string]: any}]>(masters,\n//     ({masters}) => Object.keys(masters[0]).filter((key: string) => !strip_null || masters[0][key] != null),\n//   )\n// export const $me_atom2_compute_fn_max = (p?: {initial?: (v: $me_atom2_master_value_provider_fn) => number}) =>\n//   (v: $me_atom2_master_value_provider_fn) => v<number[]>().reduce((result, val) => result == null || result < val ? val : result, !p || !p.initial ? null : p.initial(v))\n\n// export const $me_atom2_compute_fn_and = (p?: {initial?: (v: $me_atom2_master_value_provider_fn) => boolean}) =>\n//   (v: $me_atom2_master_value_provider_fn) => {\n//     let result = !p || !p.initial ? true : p.initial(v)\n//     const len = v($me_v_.len)\n//     if (len) for (let i = 0; i < len && (result = v<boolean>(i)); i++) {}\n//     return result\n//   }\n\n// export const $me_atom2_compute_fn_or = (p?: {initial?: (v: $me_atom2_master_value_provider_fn) => boolean}) =>\n//   (v: $me_atom2_master_value_provider_fn) => {\n//     let result = !p || !p.initial ? false : p.initial(v)\n//     const len = v($me_v_.len)\n//     if (len) for (let i = 0; i < len && !(result = v<boolean>(i)); i++) {}\n//     return result\n//   }\n\n// TODO:\n// export const $me_atom2_compute_fn_case = <Value=number>(fn_wrap?: wrap_fn<Value>) =>\n//   (v: $me_atom2_master_value_provider_fn) : Value | $me_atom2_anim_class<Value> => {\n//     const len = v($me_v_.len)\n//     if (!(len % 2)) $me_throw(`${a.resolve('.')}: ${len}`)\n//     let i = 0\n//     for (; i < len - 1; i += 2)\n//       if (v<boolean>(i)) return v<Value>(i + 1)\n//     const result = v<Value>(i)\n//     return !fn_wrap ? result : fn_wrap(result)\n//   }\n// type wrap_fn<Value> = (val: Value) => Value | $me_atom2_anim_class<Value>\n\n// TODO: avoid $me_atom2_prop_diff, use same as me_atom2_prop_compute_fn_sum\n// export const $me_atom2_prop_diff = (\n//   masters: string[],\n// ) => (<$me_atom2_prop_def_compute_intf<number>>{\n//   masters,\n//   fn_compute: (v: $me_atom2_master_value_provider_fn) => {\n//     let sum = 0\n//     for (let i = 1; i < masters.length; i++) sum += v(i)\n//     return v(0) - sum\n//   },\n// })\n\n// TODO:\n// export const $me_hover_prop = (cursor = 'default') => ({\n//   isHover: $me_atom2_prop<boolean>([],\n//     () => false,\n//     cursor == 'default' ? void 0 : (val) => {\n//       $me_body_cursor({origin: a('.name'), val: !val ? 'default' : cursor})\n//     }\n//   )\n// })\n\n// TODO:\n// export type $me_atom2_prop_bind_set_fn<SourceValue, TargetValue> = (atom: $me_atom2<SourceValue>, val: TargetValue) => void\n// export type $me_atom2_prop_bind_set_type<SourceValue, TargetValue> = boolean | $me_atom2_prop_bind_set_fn<SourceValue, TargetValue>\n// export type $me_atom2_prop_bind_p_type<SourceValue, TargetValue> = boolean | $me_atom2_prop_bind_p_intf<SourceValue, TargetValue>\n// export interface $me_atom2_prop_bind_p_intf<SourceValue, TargetValue> {\n//   get?: (val: SourceValue) => TargetValue,\n//   set?: $me_atom2_prop_bind_set_type<SourceValue, TargetValue>,\n// }\n// export const $me_atom2_prop_bind = <TargetValue=any, SourceValue=any>(\n//   name_atom: string,\n//   p?: $me_atom2_prop_bind_p_type<SourceValue, TargetValue>,\n// ) =>\n//   $me_atom2_prop<TargetValue>(\n//     [name_atom],\n//     (v, prev, name, key) => p && typeof p === 'object' && (p as $me_atom2_prop_bind_p_intf<SourceValue, TargetValue>).get ?\n//       (p as $me_atom2_prop_bind_p_intf<SourceValue, TargetValue>).get(v<SourceValue>(0)) :\n//       v<SourceValue>(0) as any as TargetValue,\n//     val => {\n//       const set = typeof p === 'boolean' ? p : p && p.set\n//       if (typeof set === 'function') {\n//         set($me_atom2.get<SourceValue>(name_atom), val)\n//       } else if (val != null) {\n//         a.update<SourceValue>(name_atom, v => val as any as SourceValue, set)\n//       }\n//     },\n//   )\n\n// TODO: remove $me_atom2_prop_select\n// export const $me_atom2_prop_select = <Value=number>(\n//   masters: string[],\n//   anim?: $me_atom2_prop_anim_intf<Value>\n// ) =>  (<$me_atom2_prop_def_compute_intf<Value>>{\n//   masters,\n//   fn_compute: (v: $me_atom2_master_value_provider_fn) => {\n//     const result = v<Value>(v<number>(0) + 1)\n//     return !anim ? result : $me_atom2_anim({ ...anim, to: result })\n//   }\n// })\n\n// export const $me_atom2_props_borrow = (prefix: string, props: string[]) =>\n//   props.reduce((result, prop) => {\n//     result[prop] = prefix + prop\n//     return result\n//   }, <$me_atom2_prop_intf>{})\n\nexport function $me_atom2_prop_same_def<Value=number>(\n  prop_def: $me_atom2_prop_def<Value>,\n  props: string[]\n) {\n  const result = <$me_atom2_prop_intf>{}\n  for (const prop of props) result[prop] = prop_def\n  return result\n}\n\nexport function $me_atom2_prop_same_fn_compute<Value=number>(\n  fn_compute: $me_atom2_compute_fn<Value>,\n  props: {[prop: string]: $me_atom2_prop_masters_type},\n  fn_apply_props?: {[prop: string]: $me_atom2_apply_fn<Value>},\n) {\n  const result = <$me_atom2_prop_intf>{}\n  for (const prop in props)\n    result[prop] = $me_atom2_prop(props[prop], fn_compute, fn_apply_props && fn_apply_props[prop])\n  return result\n}\n\nexport function $me_atom2_prop_cascade<Value=number>(prop_def: $me_atom2_prop_def<Value>, prop: string, cascade_def: string | any[]) {\n  const result = <$me_atom2_prop_intf>{}\n  cascade_helper(result, prop_def, prop, cascade_def)\n  return result\n}\n\nfunction cascade_helper<Value>(result: $me_atom2_prop_intf, prop_def: $me_atom2_prop_def<Value>, prop: string, cascade_def: string | any[]) {\n  result[prop] = prop_def\n  if (typeof cascade_def === 'string') {\n    result[cascade_def] = '.' + prop\n  } else if (Array.isArray(cascade_def)) {\n    const arr = cascade_def as any[]\n    for (let i = 0; i < arr.length; i++) {\n      const item = arr[i]\n      if (typeof item === 'string') {\n        result[item] = '.' + prop\n      } else if (Array.isArray(item)) {\n        const item_as_arr = item as any[]\n        if (!item_as_arr.length) $me_throw(`arr[${i}] is empty Array`, arr)\n        if (typeof item_as_arr[0] != 'string') $me_throw(`arr[${i}][0] is not string`, arr)\n        if (item_as_arr.length == 1) {\n          result[item_as_arr[0]] = '.' + prop\n        } else {\n          if (item_as_arr.length > 2) $me_throw(`arr[${i}] is too long Array: length (${item_as_arr.length}) > 2`, arr)\n          if (typeof item_as_arr[1] != 'string' && !Array.isArray(item_as_arr[1])) $me_throw(`arr[${i}][1] is nor string, neither Array, but ${item_as_arr[1]}`, arr)\n          cascade_helper<Value>(result, '.' + prop, item_as_arr[0] as string, item_as_arr[1] as string | any[])\n        }\n      }\n    }\n  } else $me_throw('cascade_def is nor string, neither Array', cascade_def)\n}\n\n// ============================================================================\n\nexport const $me_atom2_prop_store = <Value=number, Masters=[boolean, Value]>(p: {\n  default: () => Value,\n  valid: (val: any) => Value,\n  toJSON?: (val: Value) => any,\n  fromJSON?: (val: any) => Value,\n  is_equal?: (val_a: Value, val_b: Value) => boolean,\n  condition?: string[],\n}) => {\n  const atom = $me_atom2_prop<Value>(!p.condition ? [] : p.condition,\n    ({atom, masters, prev, len}) => {\n      let val = null as any\n      const name = atom.name()\n      if (len && !masters[0]) {\n        val = masters[1] || prev || null\n        sessionStorage.removeItem(name)\n      } else {\n        const s = sessionStorage.getItem(name)\n        if (s)\n          try {\n            val = !p.fromJSON ? JSON.parse(s) : p.fromJSON(JSON.parse(s))\n          } catch (e) {\n            console.error({name}, e)\n          }\n      }\n      if (len) console.log(masters, prev, val)\n      return val\n    },\n    ({val, atom}) => {\n      val = p.valid(val)\n      let need_remove = false\n      const dflt = p.default()\n      if (val == null) {\n        val = dflt\n        need_remove = true\n      } else if (p.is_equal ? p.is_equal(val, dflt) : $me_equal(val, dflt)) {\n        need_remove = true\n      }\n\n      const name = atom.name()\n      if ( need_remove ) {\n        sessionStorage.removeItem(name)\n      } else {\n        sessionStorage.setItem(name, JSON.stringify(!p.toJSON ? val : p.toJSON(val)))\n      }\n      return val\n    },\n  )\n  return atom\n}\n// export const $me_atom2_prop_store = <Value=number>(\n//   dflt: Value,\n//   is_valid: (val: any) => boolean,\n//   is_equal?: (val_a: Value, val_b: Value) => boolean,\n// ) => $me_atom2_prop<Value>([],\n//   ({atom}) => {\n//     let val = null as any\n//     const name = atom.name()\n//     const s = sessionStorage.getItem(name)\n//     if (s)\n//       try {\n//         val = JSON.parse(s)\n//       } catch (e) {\n//         console.error({name}, e)\n//       }\n//     return val\n//   },\n//   ({val, atom}) => {\n//     if (!is_valid(val)) val = dflt\n//     const name = atom.name()\n//     if ( is_equal ? is_equal(val, dflt) : $me_equal(val, dflt) ) {\n//       sessionStorage.removeItem(name)\n//     } else {\n//       sessionStorage.setItem(name, JSON.stringify(val))\n//     }\n//     return val\n//   }\n// )\n\n// {\n//   const result = <$me_atom2_prop_intf>{}\n//   cascade_helper(result, prop_def, prop, cascade_def)\n//   return result\n// }\n// TODO:\n// export function $me_atom2_props_def(p: {\n//   defs?: $me_atom2_def<any>[]\n//   source: $me_atom2_prop_intf,\n//   stack?: string[],\n//   prefix?: string,\n//   // atom_def_arg?: (def: $me_atom2_def<any>, prop: string, ) => $me_atom2_def<any>,\n//   pre?: (prop: string) => boolean,\n//   post?: (p: $me_atom2_props_def_post_p_intf) => any,\n//   active?: $me_atom2_active_type,\n// }) {\n//   if (!p.source) return\n//   const stack = (p.stack || $me_atom2_stack).slice()\n//   const name_prefix =\n//     (!stack.length ? '' : stack[stack.length - 1] + '.' ) +\n//     (p.prefix === void 0 ? '' : p.prefix + '.')\n//   const _defs = [] as {prop: string, def: $me_atom2_def<any>}[]\n//   for (let prop in p.source) {\n//     const pp = p.source[prop] as $me_atom2_prop_def_compute_apply_intf<Iterable<any>, any, any>\n//     if (!pp || !pp.is_keyed) continue\n//     const name_master = pp.masters[0]\n//   // if (!name_master) $me_throw('', p.source[prop])\n//     if (name_master.startsWith('.')) continue\n//     if (!$me_atom2._store.has(name_master)) continue\n//     const atom = $me_atom2._store.get(name_master)\n//     const keys = atom.value()\n//     if (keys == null) continue\n//     for (const key of keys)\n//       prop_key_def(p.source, prop, '[' + key + ']', key, pp)\n//   }\n//   for (let prop in p.source) {\n//     if (p.pre && !p.pre((p.prefix === void 0 ? '' : p.prefix + '.') + prop)) continue\n//     if (!p.source[prop]) continue\n//     const def = $me_atom2_prop_def_prepare<any, any>(p.source[prop], {\n//       name: name_prefix + prop,\n//       active: p.active,\n//       stack,\n//     })\n//     _defs.push({prop, def})\n//     if (p.defs) p.defs.push(def)\n//     if (p.post) p.post({prop, def_atom: def, def_prop: p.source[prop]})\n//   }\n//   return _defs\n//   // if (p.atom_def_arg)\n//   //   for (const {prop, def} of _defs)\n//   //     $me_atom2.def(p.atom_def_arg({...def}, prop))\n// }\n\n// export interface $me_atom2_props_def_post_p_intf {\n//   prop: string,\n//   def_atom: $me_atom2_def_compute_apply_intf<any>,\n//   def_prop: $me_atom2_prop_def<any>\n// }\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// <<<<<<< Updated upstream\n// // ============================================================================\n\n// export interface $me_atom2_control_cnf_intf\n//   extends $me_atom2_ec_cnf_intf\n//   {\n//     clean?: $me_atom2_control_clean_fn,\n//     render?: $me_atom2_control_render_fn,\n//     // render_post?: $me_atom2_control_render_fn,\n//   }\n\n// export type $me_atom2_control_render_fn =\n//   (p: $me_atom2_control_render_p_intf ) => void\n\n// export type $me_atom2_control_clean_fn =\n//   (p: $me_atom2_control_clean_p_intf ) => boolean\n\n// export interface $me_atom2_control_intf {\n//   [tail: string]: $me_atom2_prop_def<$me_atom2_control_cnf_intf>,\n// }\n\n// export interface $me_atom2_control_p_intf\n//   extends $me_atom2_ec_p_base_intf\n//   {\n//     cnf: $me_atom2_control_cnf_intf,\n//     level?: number,\n//   }\n\n// export enum $me_atom2_control_render_state_enum { cleaned, rendered }\n\n// export class $me_atom2_control extends $me_atom2_ec {\n//   // static prop_default: $me_atom2_prop_intf\n\n//   static pixelRatio() {\n//     return ($me_atom2_entity.root()._entities.prop['#pixelRatio'] as $me_atom2).value()\n//   }\n\n//   // ===================================\n\n//   static to_def = Array<$me_atom2_control_p_intf>()\n//   static _to_render = new Set<$me_atom2_path>()\n//   static _to_clean = new Set<$me_atom2_path>()\n\n//   // ===================================\n\n//   readonly level: number\n//   render_state: $me_atom2_control_render_state_enum\n//   constructor (p: $me_atom2_control_p_intf) {\n//     super({\n//       ...p,\n//       ent: $me_atom2_entity_enum.control,\n//     })\n//     this._mk_controls(this.level = p.level || 1)\n//     this._mk_props('<'.repeat(this.level))\n//   }\n//   protected _wait_for_child_did_helper() {\n//     const parent = this.parent(true) as $me_atom2_control\n//     if (parent) parent._wait_for_child_did(this.name())\n//     // if (parent) parent._add_child_to_reorder(this.path)\n//   }\n//   destroy() {\n//     if (this.level > 1) {\n//       $me_atom2_control._to_render.add(this.parent(true).path)\n//       $me_atom2_async()\n//     } else {\n//       $me_atom2_control.clean([this])\n//     }\n//     super.destroy()\n//   }\n//   static prop_non_render_default = <$me_atom2_prop_intf>{\n//   }\n//   private _mk_props(s_level: string) {\n//     const {defaults, defaults_relative} = this._prepare(\n//       'prop_default',\n//       $me_atom2_entity_enum.control,\n//       $me_atom2_control.prop_default || {}\n//     )\n//     const prop_render = this.props([\n//       this.cnf_items<$me_atom2_prop_def>('prop'),\n//       defaults,\n//       defaults_relative,\n//       {\n//         '#hidden': () => false,\n//         '#zIndex': '<.#zIndex',\n//         // '#isHover': () => false,\n//       },\n//       {\n//         '#_isReady': () => false,\n//         '#isReady': $me_atom2_prop<boolean>(['<.#isReady', '.#_isReady'],\n//           $me_atom2_prop_compute_fn_and(),\n//           ({val}) => {\n//             if (val) $me_atom2_ec._to_init.push(this.path)\n//           },\n//         ),\n//         // '#_cursor': $me_atom2_prop<string>(['.#isHover', '.#cursor'],\n//         //   ({masters: [isHover, cursor]}) => !isHover ? 'default' : cursor,\n//         //   ({atom, val}) => {\n//         //     $me_atom2_ec_body_cursor({origin: atom.path, val: val})\n//         //   },\n//         // ),\n//         '#visible': $me_atom2_prop<boolean>(\n//           ['.#hidden', '<.#visible'],\n//           ({masters: [hidden, visible]}) => !hidden && visible,\n//           ({val}) => {\n//             if (val) {\n//               $me_atom2_control._to_render.add(this.path)\n//             } else\n//             // if (val) return\n//             if (this.level > 1) {\n//               $me_atom2_control._to_render.add(this.parent(true).path)\n//             } else {\n//               $me_atom2_control._to_clean.add(this.path)\n//             }\n//             $me_atom2_async()\n//           }\n//         ),\n//         '#ctxSize': s_level + '.#ctxSize',\n//         '#ctx': s_level + '.#ctx',\n//         '#left': $me_atom2_prop<number, [$me_align, number, number, number, number]>(\n//           ['.#alignHor', '<.#width', '.#width', '.#ofsHor'].concat(s_level.length < 2 ? [] : ['<.#left']),\n//           ({masters: [alignHor, width_parent, width, ofsHor, left_parent]}) => {\n//             left_parent = left_parent || 0\n//             const result =\n//               alignHor === $me_align.left ? left_parent + ofsHor :\n//               alignHor === $me_align.right ? left_parent + width_parent - ofsHor :\n//               left_parent + (width_parent - width) / 2 + ofsHor\n//             return result\n//           }\n//         ),\n//         '#top': $me_atom2_prop<number, [$me_align, number, number, number, number]>(\n//           ['.#alignVer', '<.#height', '.#height', '.#ofsVer'].concat(s_level.length < 2 ? [] : ['<.#top']),\n//           ({masters: [alignVer, height_parent, height, ofsVer, top_parent]}) => {\n//             top_parent = top_parent || 0\n//             const result =\n//               alignVer === $me_align.top ? top_parent + ofsVer :\n//               alignVer === $me_align.bottom ? top_parent + height_parent - ofsVer :\n//               top_parent + (height_parent - height) / 2 + ofsVer\n//               return result\n//           }\n//         ),\n//       },\n//     ], {\n//       def: ({tail, prop_def, prop_defined, p, idx, len}) => {\n//         if (tail == '#cursor') {\n//           console.error(`${this.name()}: prop \"#cursor\" must be defined in \"prop_non_render\" section`)\n//           return null\n//         }\n//       },\n//       dup: ({tail, prop_defined, idx, len}) => {\n//         if (idx === len - 1)\n//           $me_throw(`${this.name()}: .${tail} reserved for internal use` + (tail !== '#visible' ? '' : ', use .#hidden instead'))\n//       }\n//     })\n//   {\n//     const {defaults, defaults_relative} = this._prepare(\n//       'prop_non_render_default',\n//       $me_atom2_entity_enum.control,\n//       $me_atom2_control.prop_non_render_default || {}\n//     )\n//     // console.log(defaults, defaults_relative)\n//     const prop_non_render = this.props([\n//       this.cnf_items<$me_atom2_prop_def>('prop_non_render'),\n//       defaults,\n//       defaults_relative,\n//       {\n//         '#isHover': () => false,\n//       },\n//       {\n//         '#_cursor': $me_atom2_prop<string>(['.#isHover', '.#cursor'],\n//           ({masters: [isHover, cursor]}) => !isHover ? null : cursor,\n//           ({atom, val}) => {\n//             $me_atom2_ec_body_cursor({origin: atom.path, val: val})\n//           },\n//         ),\n//       },\n//     ], {\n//       def: ({tail, prop_def, prop_defined, p, idx, len}) => {\n//         if (idx === len - 2 && tail == '#isHover') {\n//           if (prop_defined['#cursor'] === void 0) return null\n//         } else if (idx === len - 1 && tail == '#_cursor') {\n//           if (prop_defined['#cursor'] === void 0) return null\n//         }\n//       },\n//       dup: ({tail, prop_defined, idx, len}) => {\n//         if (idx === len - 1)\n//           $me_throw(`${this.name()}: .${tail} reserved for internal use` + (tail !== '#visible' ? '' : ', use .#hidden instead'))\n//       }\n//     })\n//   }\n\n//     for (const prop of ['#width', '#height', '#alignHor', '#alignVer', '#ofsHor', '#ofsVer'])\n//       if (prop_render[prop] === void 0)\n//         $me_throw(`${this.name()}: requires .${prop} to be defined`)\n\n//     this.props({\n//       '#render': $me_atom2_prop<any>(\n//         (Object as any).keys(prop_render).map((s: string) => '.' + s),//TODO: concat('.isFocused'),\n//         ({masters}) => !(this.active() && a('.#visible') && a('.#isReady')) ? null : masters,\n//         ({val, prev, atom}) => {\n//           if (!val) return\n//           // console.warn('to_render', this.path.toString(), atom.masters, val, prev)\n//           $me_atom2_control._to_render.add(this.path)\n//           $me_atom2_async()\n//         },\n//       ),\n//       // non_render\n//       '#offsetRect': () => $me_rect(),\n//       '#clientRect': $me_atom2_prop<$me_rect_intf>(\n//         [s_level + '.#clientRect', '.#offsetRect'],\n//         ({masters: [clientRect, offsetRect]}) => {\n//           return <$me_rect_intf>{\n//             left: clientRect.left + offsetRect.left,\n//             top: clientRect.top + offsetRect.top,\n//             right: clientRect.left + offsetRect.right,\n//             bottom: clientRect.top + offsetRect.bottom,\n//           }\n//         },\n//         prop_render['#isHover'] === void 0 ? null :\n//         ({val, atom}) => {\n//           if ($me_atom2_event_mousemove_last && !$me_atom2_event_mousemove_to_process) {\n//             $me_atom2_event_mousemove_to_process = $me_atom2_event_mousemove_last\n//             $me_atom2_async()\n//           }\n//         }\n//       ),\n//     })\n//   }\n//   // ===========================================\n\n//   static font_prepare(ctx: CanvasRenderingContext2D, pixelRatio: number, prefix = '') {\n//     const ctxFontSize = Math.round($me_atom2_control.font_size(pixelRatio, prefix))\n//     ctx.font = $me_atom2_control._fontWeight(prefix) + ' ' + ctxFontSize + 'px ' + $me_atom2_control._fontFamily(prefix)\n//     ctx.textAlign = 'left'\n//     ctx.textBaseline = 'bottom'\n//     return ctxFontSize\n//   }\n\n//   static font_size(pixelRatio: number, prefix = '') {\n//     const prop = a.curr.by_path_s($me_atom2_control._fontProp('fontSize', prefix)) as $me_atom2<number>\n//     if (typeof prop === 'string') $me_throw(prop)\n//     const result = prop.value() * pixelRatio\n//     return result\n//   }\n\n//   private static _fontProp(prop: string, prefix: string) {\n//     const result = '.' + (!prefix ? prop : prefix + prop.slice(0, 1).toUpperCase() + prop.slice(1))\n//     return result\n//   }\n\n//   private static _fontFamily(prefix = '') {\n//     const prop = a.curr.by_path_s($me_atom2_control._fontProp('fontFamily', prefix)) as $me_atom2<string>\n//     return !prefix || typeof prop !== 'string' ? prop.value() : a('.fontFamily')\n//   }\n\n//   private static _fontWeight(prefix = '') {\n//     const prop = a.curr.by_path_s($me_atom2_control._fontProp('fontWeight', prefix)) as $me_atom2<string>\n//     return !prefix || typeof prop !== 'string' ? prop.value() : a('.fontWeight')\n//   }\n\n//   // ===========================================\n\n//   static clean(controls: $me_atom2_control[], force = false ) {\n//     let count = 0\n//     // console.log('clean', controls.map(control => control.name()))\n//     for (let control of controls) {\n//       if (control.render_state !== $me_atom2_control_render_state_enum.rendered) continue\n//       count++\n\n//       const ctxRect = control._ctxRect()\n//       const p = <$me_atom2_control_clean_p_intf>{\n//         ctx: (control._entities.prop['#ctx'] as $me_atom2<CanvasRenderingContext2D>).value(),\n//         ctxRect,\n//       }\n//       if (p.ctx) {\n//         const prev = a.curr\n//         a.curr = control\n//         // console.warn('%cclean', 'background: red; color: white', control.name())\n//         if (!control._clean_helper(p, control.cnf as $me_atom2_control_cnf_intf))\n//           p.ctx.clearRect(\n//             p.ctxRect.left,\n//             p.ctxRect.top,\n//             p.ctxRect.right - p.ctxRect.left + 1, // +1 due to sierp/control/\n//             p.ctxRect.bottom - p.ctxRect.top + 1, // +1 due to sierp/control/\n//           )\n//         a.curr = prev\n//       }\n//       control.render_state = $me_atom2_control_render_state_enum.cleaned\n\n//       let controls: $me_atom2_control[]\n//       if ($me_atom2_control._fill_controls_cache.has(control)) {\n//         controls = $me_atom2_control._fill_controls_cache.get(control)\n//       } else {\n//         controls = []\n//         const entities_control = control._entities.control\n//         $me_atom2_control._fill_controls(controls, control._entities.control)\n//         $me_atom2_control._fill_controls_cache.set(control, controls)\n//       }\n//       if (controls.length)\n//         $me_atom2_control.clean($me_atom2_control.zIndex_sort(controls), force)\n//     }\n//     return count\n//   }\n//   private _ctxRect() {\n//     const prop = this._entities.prop\n//     const prop_offsetRect = prop['#offsetRect'] as $me_atom2<$me_rect_intf>\n//     const offsetRect = prop_offsetRect.value()\n//     const pixelRatio = $me_atom2_control.pixelRatio()\n//     return <$me_rect_intf>{\n//       left: offsetRect.left * pixelRatio,\n//       top: offsetRect.top * pixelRatio,\n//       right: offsetRect.right * pixelRatio,\n//       bottom: offsetRect.bottom * pixelRatio,\n//     }\n//   }\n//   private _clean_helper(\n//     p: $me_atom2_control_clean_p_intf,\n//     cnf: $me_atom2_control_cnf_intf,\n//   ): boolean {\n//     let result = false\n//     if (cnf) {\n//       if (cnf.clean) result = cnf.clean(p)\n//       // result = this._clean_helper(p, this.base(cnf.base)) || result\n//       result = this._clean_helper(p, cnf.base) || result\n//     }\n//     return result\n//   }\n\n//   static fill_controls_cache_clear() {\n//     $me_atom2_control._fill_controls_cache.clear()\n//   }\n//   private static _fill_controls_cache = new Map<$me_atom2_control, $me_atom2_control[]>()\n//   private static _fill_controls(\n//     controls: $me_atom2_control[],\n//     entities_of_type: {[entity_name: string]: $me_atom2_entity}\n//   ) {\n//     for (const tail in entities_of_type) {\n//       const entity = entities_of_type[tail]\n//       if (!entity._entities.key) {\n//         controls.push(entity as $me_atom2_control)\n//       } else {\n//         $me_atom2_control._fill_controls(controls, entity._entities.key)\n//       }\n//     }\n//   }\n\n//   // ===========================================\n\n//   static render(controls: $me_atom2_control[], pixelRatio?: number) {\n//     if (pixelRatio === void 0)\n//       pixelRatio = $me_atom2_control.pixelRatio()\n//     let count = 0\n//     // console.log('render', controls.map(control => control.name()))\n//     for (let control of controls) {\n//       if (control.render_state === $me_atom2_control_render_state_enum.rendered) {\n//         // console.error('render skip for ' + control.name())\n//         continue\n//       }\n//       count++\n\n//       const prop = control._entities.prop\n//       const prop_offsetRect = prop['#offsetRect'] as $me_atom2<$me_rect_intf>\n//       const prop_width = prop['#width'] as $me_atom2\n//       const prop_heght = prop['#height'] as $me_atom2\n//       const prop_left = prop['#left'] as $me_atom2\n//       const prop_top = prop['#top'] as $me_atom2\n\n//       const ctxWidth = Math.round(prop_width.value() * pixelRatio)\n//       const ctxHeight = Math.round(prop_heght.value() * pixelRatio)\n//       const left = Math.round(prop_left.value() * pixelRatio)\n//       const top = Math.round(prop_top.value() * pixelRatio)\n//       const right = left + ctxWidth\n//       const bottom = top + ctxHeight\n\n//       const ctxRect = <$me_rect_intf>{left, top, right, bottom}\n\n//       prop_offsetRect.value(<$me_rect_intf>{\n//         left: left / pixelRatio,\n//         top: top / pixelRatio,\n//         right: right / pixelRatio,\n//         bottom: bottom / pixelRatio,\n//       })\n//       const p = <$me_atom2_control_render_p_intf>{\n//         self: control,\n//         ctx: (control._entities.prop['#ctx'] as $me_atom2<CanvasRenderingContext2D>).value(),\n//         ctxSize: (control._entities.prop['#ctxSize'] as $me_atom2<$me_size_intf>).value(),\n//         pixelRatio,\n//         ctxRect,\n//         ctxWidth,\n//         ctxHeight,\n//       }\n//       {\n//         const prev = a.curr\n//         a.curr = control\n//         control._render_helper(p, control.cnf)\n//         // console.warn('%crender', 'background: green; color: white', control.name())\n//         if (typeof a.curr.by_path_s('.#border') !== 'string') {\n//           p.ctx.strokeStyle = a<string>('.#border')\n//           p.ctx.strokeRect(p.ctxRect.left, p.ctxRect.top, p.ctxRect.right - p.ctxRect.left, p.ctxRect.bottom - p.ctxRect.top)\n//         }\n//         a.curr = prev\n//       }\n\n//       let controls: $me_atom2_control[]\n//       if ($me_atom2_control._fill_controls_cache.has(control)) {\n//         controls = $me_atom2_control._fill_controls_cache.get(control)\n//       } else {\n//         controls = []\n//         const entities_control = control._entities.control\n//         $me_atom2_control._fill_controls(controls, control._entities.control)\n//         $me_atom2_control._fill_controls_cache.set(control, controls)\n//       }\n//       if (controls.length)\n//         $me_atom2_control.render(\n//           $me_atom2_control.zIndex_sort(controls),\n//           pixelRatio,\n//         )\n\n//       // {\n//       //   const prev = a.curr\n//       //   a.curr = control\n//       //   control_render_post_helper(p, control.cnf, control.bases)\n//       //   a.curr = prev\n//       // }\n\n//       control.render_state = $me_atom2_control_render_state_enum.rendered\n//     }\n//     return count\n//   }\n\n//   private _render_helper(p: $me_atom2_control_render_p_intf, cnf: $me_atom2_control_cnf_intf) {\n//     if (!cnf) return\n//     // this._render_helper(p, this.base(cnf.base))\n//     this._render_helper(p, cnf.base)\n//     if (cnf.render) cnf.render(p)\n//   }\n\n//   // ===========================================\n\n//   static zIndex_sort(ss: Set<$me_atom2_path> | Array<$me_atom2_control>, to_render = false) {\n//     return (\n//       Array.isArray(ss) ? ss :\n//       [...ss].map(path => $me_atom2_entity.root().by_path(path) as $me_atom2_control)\n//     )\n//     .filter(control => control && control.active &&\n//       (() => {\n//         if (!control._entities.prop)\n//           $me_throw(control.name());\n//         return true\n//       })() &&\n//       (!to_render || (control._entities.prop['#visible'] as $me_atom2<boolean>).value()))\n//     // .filter(name_control => $me_atom_entities.has(name_control))\n//     // .sort((sa: string, sb: string) => {\n//     //   const sav = $me_atom.get(sa + '.zIndex').value()\n//     //   const sbv = $me_atom.get(sb + '.zIndex').value()\n//     //   return to_render ? sav - sbv : sbv - sav\n//     // })\n//     // .map(name_control => $me_atom_entity_get(name_control))\n//   }\n// }\n\n// // ============================================================================\n\n// export interface $me_atom2_control_clean_p_intf {\n//   ctx: CanvasRenderingContext2D,\n//   ctxRect: $me_rect_intf,\n// }\n\n// export interface $me_atom2_control_render_p_intf {\n//   self: $me_atom2_control,\n//   ctx: CanvasRenderingContext2D,\n//   pixelRatio: number,\n//   ctxSize: $me_size_intf,\n//   ctxRect: $me_rect_intf,\n//   ctxWidth: number,\n//   ctxHeight: number,\n// }\n// =======\n// // ============================================================================\n\n// export interface $me_atom2_control_cnf_intf\n//   extends $me_atom2_ec_cnf_intf\n//   {\n//     clean?: $me_atom2_control_clean_fn,\n//     render?: $me_atom2_control_render_fn,\n//     // render_post?: $me_atom2_control_render_fn,\n//   }\n\n// export type $me_atom2_control_render_fn =\n//   (p: $me_atom2_control_render_p_intf ) => void\n\n// export type $me_atom2_control_clean_fn =\n//   (p: $me_atom2_control_clean_p_intf ) => boolean\n\n// export interface $me_atom2_control_intf {\n//   [tail: string]: $me_atom2_prop_def<$me_atom2_control_cnf_intf>,\n// }\n\n// export interface $me_atom2_control_p_intf\n//   extends $me_atom2_ec_p_base_intf\n//   {\n//     cnf: $me_atom2_control_cnf_intf,\n//     level?: number,\n//   }\n\n// export enum $me_atom2_control_render_state_enum { cleaned, rendered }\n\n// export class $me_atom2_control extends $me_atom2_ec {\n//   // static prop_default: $me_atom2_prop_intf\n\n//   static pixelRatio() {\n//     return ($me_atom2_entity.root()._entities.prop['#pixelRatio'] as $me_atom2).value()\n//   }\n\n//   // ===================================\n\n//   static to_def = Array<$me_atom2_control_p_intf>()\n//   static _to_render = new Set<$me_atom2_path>()\n//   static _to_clean = new Set<$me_atom2_path>()\n\n//   // ===================================\n\n//   readonly level: number\n//   render_state: $me_atom2_control_render_state_enum\n//   constructor (p: $me_atom2_control_p_intf) {\n//     super({\n//       ...p,\n//       ent: $me_atom2_entity_enum.control,\n//     })\n//     this._mk_controls(this.level = p.level || 1)\n//     this._mk_props('<'.repeat(this.level))\n//   }\n//   protected _wait_for_child_did_helper() {\n//     const parent = this.parent(true) as $me_atom2_control\n//     if (parent) parent._wait_for_child_did(this.name())\n//     // if (parent) parent._add_child_to_reorder(this.path)\n//   }\n//   destroy() {\n//     if (this.level > 1) {\n//       $me_atom2_control._to_render.add(this.parent(true).path)\n//       $me_atom2_async()\n//     } else {\n//       $me_atom2_control.clean([this])\n//     }\n//     super.destroy()\n//   }\n//   static prop_non_render_default = <$me_atom2_prop_intf>{\n//   }\n//   private _mk_props(s_level: string) {\n//     const {defaults, defaults_relative} = this._prepare(\n//       'prop_default',\n//       $me_atom2_entity_enum.control,\n//       $me_atom2_control.prop_default || {}\n//     )\n//     const prop_render = this.props([\n//       this.cnf_items<$me_atom2_prop_def>('prop'),\n//       defaults,\n//       defaults_relative,\n//       {\n//         '#hidden': () => false,\n//         '#zIndex': '<.#zIndex',\n//         // '#isHover': () => false,\n//       },\n//       {\n//         '#_isReady': () => false,\n//         '#isReady': $me_atom2_prop<boolean>(['<.#isReady', '.#_isReady'],\n//           $me_atom2_prop_compute_fn_and(),\n//           ({val}) => {\n//             if (val) $me_atom2_ec._to_init.push(this.path)\n//           },\n//         ),\n//         // '#_cursor': $me_atom2_prop<string>(['.#isHover', '.#cursor'],\n//         //   ({masters: [isHover, cursor]}) => !isHover ? 'default' : cursor,\n//         //   ({atom, val}) => {\n//         //     $me_atom2_ec_body_cursor({origin: atom.path, val: val})\n//         //   },\n//         // ),\n//         '#visible': $me_atom2_prop<boolean>(\n//           ['.#hidden', '<.#visible'],\n//           ({masters: [hidden, visible]}) => !hidden && visible,\n//           ({val}) => {\n//             if (val) {\n//               $me_atom2_control._to_render.add(this.path)\n//             } else\n//             // if (val) return\n//             if (this.level > 1) {\n//               $me_atom2_control._to_render.add(this.parent(true).path)\n//             } else {\n//               $me_atom2_control._to_clean.add(this.path)\n//             }\n//             $me_atom2_async()\n//           }\n//         ),\n//         '#ctxSize': s_level + '.#ctxSize',\n//         '#ctx': s_level + '.#ctx',\n//         '#left': $me_atom2_prop<number, [$me_align, number, number, number, number]>(\n//           ['.#alignHor', '<.#width', '.#width', '.#ofsHor'].concat(s_level.length < 2 ? [] : ['<.#left']),\n//           ({masters: [alignHor, width_parent, width, ofsHor, left_parent]}) => {\n//             left_parent = left_parent || 0\n//             const result =\n//               alignHor === $me_align.left ? left_parent + ofsHor :\n//               alignHor === $me_align.right ? left_parent + width_parent - ofsHor :\n//               left_parent + (width_parent - width) / 2 + ofsHor\n//             return result\n//           }\n//         ),\n//         '#top': $me_atom2_prop<number, [$me_align, number, number, number, number]>(\n//           ['.#alignVer', '<.#height', '.#height', '.#ofsVer'].concat(s_level.length < 2 ? [] : ['<.#top']),\n//           ({masters: [alignVer, height_parent, height, ofsVer, top_parent]}) => {\n//             top_parent = top_parent || 0\n//             const result =\n//               alignVer === $me_align.top ? top_parent + ofsVer :\n//               alignVer === $me_align.bottom ? top_parent + height_parent - ofsVer :\n//               top_parent + (height_parent - height) / 2 + ofsVer\n//               return result\n//           }\n//         ),\n//       },\n//     ], {\n//       // def: ({tail, prop_def, prop_defined, p, idx, len}) => {\n//       //   if (idx === len - 2 && tail == '#isHover') {\n//       //     if (prop_defined['#cursor'] === void 0) return null\n//       //   } else if (idx === len - 1 && tail == '#_cursor') {\n//       //     if (prop_defined['#cursor'] === void 0) return null\n//       //   }\n//       // },\n//       dup: ({tail, prop_defined, idx, len}) => {\n//         if (idx === len - 1)\n//           $me_throw(`${this.name()}: .${tail} reserved for internal use` + (tail !== '#visible' ? '' : ', use .#hidden instead'))\n//       }\n//     })\n//   {\n//     const {defaults, defaults_relative} = this._prepare(\n//       'prop_non_render_default',\n//       $me_atom2_entity_enum.control,\n//       $me_atom2_control.prop_non_render_default || {}\n//     )\n//     // console.log(defaults, defaults_relative)\n//     const prop_non_render = this.props([\n//       this.cnf_items<$me_atom2_prop_def>('prop_non_render'),\n//       defaults,\n//       defaults_relative,\n//       {\n//         '#isHover': () => false,\n//       },\n//       {\n//         '#_cursor': $me_atom2_prop<string>(['.#isHover', '.#cursor'],\n//           ({masters: [isHover, cursor]}) => !isHover ? null : cursor,\n//           ({atom, val}) => {\n//             $me_atom2_ec_body_cursor({origin: atom.path, val: val})\n//           },\n//         ),\n//       },\n//     ], {\n//       def: ({tail, prop_def, prop_defined, p, idx, len}) => {\n//         if (idx === len - 2 && tail == '#isHover') {\n//           if (prop_defined['#cursor'] === void 0) return null\n//         } else if (idx === len - 1 && tail == '#_cursor') {\n//           if (prop_defined['#cursor'] === void 0) return null\n//         }\n//       },\n//       dup: ({tail, prop_defined, idx, len}) => {\n//         if (idx === len - 1)\n//           $me_throw(`${this.name()}: .${tail} reserved for internal use` + (tail !== '#visible' ? '' : ', use .#hidden instead'))\n//       }\n//     })\n//   }\n\n//     for (const prop of ['#width', '#height', '#alignHor', '#alignVer', '#ofsHor', '#ofsVer'])\n//       if (prop_render[prop] === void 0)\n//         $me_throw(`${this.name()}: requires .${prop} to be defined`)\n\n//     this.props({\n//       '#render': $me_atom2_prop<any>(\n//         (Object as any).keys(prop_render).map((s: string) => '.' + s),//TODO: concat('.isFocused'),\n//         ({masters}) => !(this.active() && a('.#visible') && a('.#isReady')) ? null : masters,\n//         ({val, prev, atom}) => {\n//           if (!val) return\n//           // console.warn('to_render', this.path.toString(), atom.masters, val, prev)\n//           $me_atom2_control._to_render.add(this.path)\n//           $me_atom2_async()\n//         },\n//       ),\n//       // non_render\n//       '#offsetRect': () => $me_rect(),\n//       '#clientRect': $me_atom2_prop<$me_rect_intf>(\n//         [s_level + '.#clientRect', '.#offsetRect'],\n//         ({masters: [clientRect, offsetRect]}) => {\n//           return <$me_rect_intf>{\n//             left: clientRect.left + offsetRect.left,\n//             top: clientRect.top + offsetRect.top,\n//             right: clientRect.left + offsetRect.right,\n//             bottom: clientRect.top + offsetRect.bottom,\n//           }\n//         },\n//         prop_render['#isHover'] === void 0 ? null :\n//         ({val, atom}) => {\n//           if ($me_atom2_event_mousemove_last && !$me_atom2_event_mousemove_to_process) {\n//             $me_atom2_event_mousemove_to_process = $me_atom2_event_mousemove_last\n//             $me_atom2_async()\n//           }\n//         }\n//       ),\n//     })\n//   }\n//   // ===========================================\n\n//   static font_prepare(ctx: CanvasRenderingContext2D, pixelRatio: number, prefix = '') {\n//     const ctxFontSize = Math.round($me_atom2_control.font_size(pixelRatio, prefix))\n//     ctx.font = $me_atom2_control._fontWeight(prefix) + ' ' + ctxFontSize + 'px ' + $me_atom2_control._fontFamily(prefix)\n//     ctx.textAlign = 'left'\n//     ctx.textBaseline = 'bottom'\n//     return ctxFontSize\n//   }\n\n//   static font_size(pixelRatio: number, prefix = '') {\n//     const prop = a.curr.by_path_s($me_atom2_control._fontProp('fontSize', prefix)) as $me_atom2<number>\n//     if (typeof prop === 'string') $me_throw(prop)\n//     const result = prop.value() * pixelRatio\n//     return result\n//   }\n\n//   private static _fontProp(prop: string, prefix: string) {\n//     const result = '.' + (!prefix ? prop : prefix + prop.slice(0, 1).toUpperCase() + prop.slice(1))\n//     return result\n//   }\n\n//   private static _fontFamily(prefix = '') {\n//     const prop = a.curr.by_path_s($me_atom2_control._fontProp('fontFamily', prefix)) as $me_atom2<string>\n//     return !prefix || typeof prop !== 'string' ? prop.value() : a('.fontFamily')\n//   }\n\n//   private static _fontWeight(prefix = '') {\n//     const prop = a.curr.by_path_s($me_atom2_control._fontProp('fontWeight', prefix)) as $me_atom2<string>\n//     return !prefix || typeof prop !== 'string' ? prop.value() : a('.fontWeight')\n//   }\n\n//   // ===========================================\n\n//   static clean(controls: $me_atom2_control[], force = false ) {\n//     let count = 0\n//     // console.log('clean', controls.map(control => control.name()))\n//     for (let control of controls) {\n//       if (control.render_state !== $me_atom2_control_render_state_enum.rendered) continue\n//       count++\n\n//       const ctxRect = control._ctxRect()\n//       const p = <$me_atom2_control_clean_p_intf>{\n//         ctx: (control._entities.prop['#ctx'] as $me_atom2<CanvasRenderingContext2D>).value(),\n//         ctxRect,\n//       }\n//       if (p.ctx) {\n//         const prev = a.curr\n//         a.curr = control\n//         // console.warn('%cclean', 'background: red; color: white', control.name())\n//         if (!control._clean_helper(p, control.cnf as $me_atom2_control_cnf_intf))\n//           p.ctx.clearRect(\n//             p.ctxRect.left,\n//             p.ctxRect.top,\n//             p.ctxRect.right - p.ctxRect.left + 1, // +1 due to sierp/control/\n//             p.ctxRect.bottom - p.ctxRect.top + 1, // +1 due to sierp/control/\n//           )\n//         a.curr = prev\n//       }\n//       control.render_state = $me_atom2_control_render_state_enum.cleaned\n\n//       let controls: $me_atom2_control[]\n//       if ($me_atom2_control._fill_controls_cache.has(control)) {\n//         controls = $me_atom2_control._fill_controls_cache.get(control)\n//       } else {\n//         controls = []\n//         const entities_control = control._entities.control\n//         $me_atom2_control._fill_controls(controls, control._entities.control)\n//         $me_atom2_control._fill_controls_cache.set(control, controls)\n//       }\n//       if (controls.length)\n//         $me_atom2_control.clean($me_atom2_control.zIndex_sort(controls), force)\n//     }\n//     return count\n//   }\n//   private _ctxRect() {\n//     const prop = this._entities.prop\n//     const prop_offsetRect = prop['#offsetRect'] as $me_atom2<$me_rect_intf>\n//     const offsetRect = prop_offsetRect.value()\n//     const pixelRatio = $me_atom2_control.pixelRatio()\n//     return <$me_rect_intf>{\n//       left: offsetRect.left * pixelRatio,\n//       top: offsetRect.top * pixelRatio,\n//       right: offsetRect.right * pixelRatio,\n//       bottom: offsetRect.bottom * pixelRatio,\n//     }\n//   }\n//   private _clean_helper(\n//     p: $me_atom2_control_clean_p_intf,\n//     cnf: $me_atom2_control_cnf_intf,\n//   ): boolean {\n//     let result = false\n//     if (cnf) {\n//       if (cnf.clean) result = cnf.clean(p)\n//       // result = this._clean_helper(p, this.base(cnf.base)) || result\n//       result = this._clean_helper(p, cnf.base) || result\n//     }\n//     return result\n//   }\n\n//   static fill_controls_cache_clear() {\n//     $me_atom2_control._fill_controls_cache.clear()\n//   }\n//   private static _fill_controls_cache = new Map<$me_atom2_control, $me_atom2_control[]>()\n//   private static _fill_controls(\n//     controls: $me_atom2_control[],\n//     entities_of_type: {[entity_name: string]: $me_atom2_entity}\n//   ) {\n//     for (const tail in entities_of_type) {\n//       const entity = entities_of_type[tail]\n//       if (!entity._entities.key) {\n//         controls.push(entity as $me_atom2_control)\n//       } else {\n//         $me_atom2_control._fill_controls(controls, entity._entities.key)\n//       }\n//     }\n//   }\n\n//   // ===========================================\n\n//   static render(controls: $me_atom2_control[], pixelRatio?: number) {\n//     if (pixelRatio === void 0)\n//       pixelRatio = $me_atom2_control.pixelRatio()\n//     let count = 0\n//     // console.log('render', controls.map(control => control.name()))\n//     for (let control of controls) {\n//       if (control.render_state === $me_atom2_control_render_state_enum.rendered) {\n//         // console.error('render skip for ' + control.name())\n//         continue\n//       }\n//       count++\n\n//       const prop = control._entities.prop\n//       const prop_offsetRect = prop['#offsetRect'] as $me_atom2<$me_rect_intf>\n//       const prop_width = prop['#width'] as $me_atom2\n//       const prop_heght = prop['#height'] as $me_atom2\n//       const prop_left = prop['#left'] as $me_atom2\n//       const prop_top = prop['#top'] as $me_atom2\n\n//       const ctxWidth = Math.round(prop_width.value() * pixelRatio)\n//       const ctxHeight = Math.round(prop_heght.value() * pixelRatio)\n//       const left = Math.round(prop_left.value() * pixelRatio)\n//       const top = Math.round(prop_top.value() * pixelRatio)\n//       const right = left + ctxWidth\n//       const bottom = top + ctxHeight\n\n//       const ctxRect = <$me_rect_intf>{left, top, right, bottom}\n\n//       prop_offsetRect.value(<$me_rect_intf>{\n//         left: left / pixelRatio,\n//         top: top / pixelRatio,\n//         right: right / pixelRatio,\n//         bottom: bottom / pixelRatio,\n//       })\n//       const p = <$me_atom2_control_render_p_intf>{\n//         ctx: (control._entities.prop['#ctx'] as $me_atom2<CanvasRenderingContext2D>).value(),\n//         ctxSize: (control._entities.prop['#ctxSize'] as $me_atom2<$me_size_intf>).value(),\n//         pixelRatio,\n//         ctxRect,\n//         ctxWidth,\n//         ctxHeight,\n//       }\n//       {\n//         const prev = a.curr\n//         a.curr = control\n//         control._render_helper(p, control.cnf)\n//         // console.warn('%crender', 'background: green; color: white', control.name())\n//         if (typeof a.curr.by_path_s('.#border') !== 'string') {\n//           p.ctx.strokeStyle = a<string>('.#border')\n//           p.ctx.strokeRect(p.ctxRect.left, p.ctxRect.top, p.ctxRect.right - p.ctxRect.left, p.ctxRect.bottom - p.ctxRect.top)\n//         }\n//         a.curr = prev\n//       }\n\n//       let controls: $me_atom2_control[]\n//       if ($me_atom2_control._fill_controls_cache.has(control)) {\n//         controls = $me_atom2_control._fill_controls_cache.get(control)\n//       } else {\n//         controls = []\n//         const entities_control = control._entities.control\n//         $me_atom2_control._fill_controls(controls, control._entities.control)\n//         $me_atom2_control._fill_controls_cache.set(control, controls)\n//       }\n//       if (controls.length)\n//         $me_atom2_control.render(\n//           $me_atom2_control.zIndex_sort(controls),\n//           pixelRatio,\n//         )\n\n//       // {\n//       //   const prev = a.curr\n//       //   a.curr = control\n//       //   control_render_post_helper(p, control.cnf, control.bases)\n//       //   a.curr = prev\n//       // }\n\n//       control.render_state = $me_atom2_control_render_state_enum.rendered\n//     }\n//     return count\n//   }\n\n//   private _render_helper(p: $me_atom2_control_render_p_intf, cnf: $me_atom2_control_cnf_intf) {\n//     if (!cnf) return\n//     // this._render_helper(p, this.base(cnf.base))\n//     this._render_helper(p, cnf.base)\n//     if (cnf.render) cnf.render(p)\n//   }\n\n//   // ===========================================\n\n//   static zIndex_sort(ss: Set<$me_atom2_path> | Array<$me_atom2_control>, to_render = false) {\n//     return (\n//       Array.isArray(ss) ? ss :\n//       [...ss].map(path => $me_atom2_entity.root().by_path(path) as $me_atom2_control)\n//     )\n//     .filter(control => control && control.active &&\n//       (() => {\n//         if (!control._entities.prop)\n//           $me_throw(control.name());\n//         return true\n//       })() &&\n//       (!to_render || (control._entities.prop['#visible'] as $me_atom2<boolean>).value()))\n//     // .filter(name_control => $me_atom_entities.has(name_control))\n//     // .sort((sa: string, sb: string) => {\n//     //   const sav = $me_atom.get(sa + '.zIndex').value()\n//     //   const sbv = $me_atom.get(sb + '.zIndex').value()\n//     //   return to_render ? sav - sbv : sbv - sav\n//     // })\n//     // .map(name_control => $me_atom_entity_get(name_control))\n//   }\n// }\n\n// // ============================================================================\n\n// export interface $me_atom2_control_clean_p_intf {\n//   ctx: CanvasRenderingContext2D,\n//   ctxRect: $me_rect_intf,\n// }\n\n// export interface $me_atom2_control_render_p_intf {\n//   ctx: CanvasRenderingContext2D,\n//   pixelRatio: number,\n//   ctxSize: $me_size_intf,\n//   ctxRect: $me_rect_intf,\n//   ctxWidth: number,\n//   ctxHeight: number,\n// }\n// >>>>>>> Stashed changes\n\n// ============================================================================\n}","namespace $.$$ {\n// ============================================================================\n\nconst accel_scrollAccu_threshold = 30\n\nexport abstract class $me_atom2_wheel_synth_class {\n  mode: $me_atom2_wheel_synth_mode\n\n  scrollAccuX = 0\n  scrollAccuY = 0\n\n  lastDeltaX = 0\n  lastDeltaY = 0\n\n  accelX = 0\n  accelY = 0\n\n  timePrevX: number\n  timePrevY: number\n\n  accel_k: number\n  tPrev: number\n\n  cancel() {\n    this.mode = null\n  }\n\n  endHelper() {\n    if (this.mode != $me_atom2_wheel_synth_mode.move) {\n      this.cancel()\n    } else {\n      // this._end = event\n      this.accel_k = 1\n      this.mode = $me_atom2_wheel_synth_mode.end\n      $me_atom2_async()\n    }\n  }\n  // end(event: TouchEvent) {\n  //   if (this.mode != $me_atom2_wheel_synth_mode.move) {\n  //     this.cancel()\n  //   } else {\n  //     this._end = event\n  //     this.accel_k = 1\n  //     this.mode = $me_atom2_wheel_synth_mode.end\n  //     $me_atom2_async()\n  //   }\n  // }\n\n  raf(t: number) {\n    return (\n      this.mode == $me_atom2_wheel_synth_mode.move ||\n      this.mode == $me_atom2_wheel_synth_mode.init ||\n      false ?\n        this.rafMove(t) :\n      this.mode == $me_atom2_wheel_synth_mode.end ?\n        this.rafEnd(t) :\n        null\n    )\n  }\n\n  abstract rafMove(t: number): any\n  abstract rafEnd(t: number): any\n\n  rafMoveHeler(t: number) {\n    // commented for metro.ts\n    // if (Math.abs(this.scrollAccuY) > Math.abs(this.scrollAccuX)) {\n    //   this.scrollAccuX = 0\n    // } else {\n    //   this.scrollAccuY = 0\n    // }\n    const timeCurr = performance.now()\n    const accel_threshold = a('/.#wheelTouchAccelThreshold')\n    if (Math.abs(this.scrollAccuX) < accel_threshold) {\n      this.accelX = 0\n    } else if (\n      this.timePrevX != null &&\n      Math.abs(this.scrollAccuX) >= accel_scrollAccu_threshold &&\n      timeCurr != this.timePrevX &&\n      true\n    ) {\n      this.tPrev = t\n      this.accelX = this.scrollAccuX / (timeCurr - this.timePrevX)\n      this.timePrevX = timeCurr\n    }\n    if (Math.abs(this.scrollAccuY) < accel_threshold) {\n      this.accelY = 0\n    } else if (\n      this.timePrevY != null &&\n      Math.abs(this.scrollAccuY) >= accel_scrollAccu_threshold &&\n      timeCurr != this.timePrevY &&\n      true\n    ) {\n      this.tPrev = t\n      this.accelY = this.scrollAccuY / (timeCurr - this.timePrevY)\n      this.timePrevY = timeCurr\n    }\n    const result = {\n      mode: this.mode,\n      _deltaX: this.scrollAccuX,\n      _deltaY: this.scrollAccuY,\n    }\n    this.scrollAccuX = 0\n    this.scrollAccuY = 0\n    return result\n  }\n}\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\n\nexport class $me_atom2_wheel_touch_class extends $me_atom2_wheel_synth_class {\n  _start: TouchEvent\n  _end: TouchEvent\n  _last: TouchEvent\n\n  clientX0: number\n  clientY0: number\n\n  clientX1: number\n  clientY1: number\n\n  clientX2: number\n  clientY2: number\n\n  start(event: TouchEvent) {\n    this.mode = $me_atom2_wheel_synth_mode.justStarted\n    this._start = event\n    this._last = event\n\n    this.clientX0 = event.touches[0].clientX\n    this.clientY0 = event.touches[0].clientY\n    if (event.touches.length > 1) {\n      this.clientX1 = event.touches[1].clientX\n      this.clientY1 = event.touches[1].clientY\n      if (event.touches.length > 2) {\n        this.clientX2 = event.touches[2].clientX\n        this.clientY2 = event.touches[2].clientY\n      }\n    }\n\n    this.scrollAccuX = 0\n    this.lastDeltaX = 0\n    this.accelX = 0\n\n    this.scrollAccuY = 0\n    this.lastDeltaY = 0\n    this.accelY = 0\n\n    this.timePrevX = null\n    this.timePrevY = null\n  }\n\n  move(event: TouchEvent) {\n    this._last = event\n    this._end = event\n\n    const deltaX =\n      event.touches.length == 1 ?\n        this.clientX0 - event.touches[0].clientX :\n      event.touches.length == 2 ?\n        Math.sign(this.clientX0 - event.touches[0].clientX) *\n        Math.max(\n          Math.abs(this.clientX0 - event.touches[0].clientX),\n          Math.abs(this.clientX1 - event.touches[1].clientX),\n        ) :\n      event.touches.length == 3 ?\n        Math.max(\n          Math.abs(this.clientX0 - event.touches[0].clientX),\n          Math.abs(this.clientX1 - event.touches[1].clientX),\n          Math.abs(this.clientX2 - event.touches[2].clientX),\n        ) :\n        0\n\n    const deltaY =\n      event.touches.length == 1 ?\n        this.clientY0 - event.touches[0].clientY :\n      event.touches.length == 2 ?\n        Math.sign(this.clientY0 - event.touches[0].clientY) *\n        Math.max(\n          Math.abs(this.clientY0 - event.touches[0].clientY),\n          Math.abs(this.clientY1 - event.touches[1].clientY),\n        ) :\n      event.touches.length == 3 ?\n        Math.sign(this.clientY0 - event.touches[0].clientY) *\n        Math.max(\n          Math.abs(this.clientY0 - event.touches[0].clientY),\n          Math.abs(this.clientY1 - event.touches[1].clientY),\n          Math.abs(this.clientY2 - event.touches[2].clientY),\n        ) :\n        0\n\n    this.clientX0 = event.touches[0].clientX\n    this.clientY0 = event.touches[0].clientY\n    if (event.touches.length > 1) {\n      this.clientX1 = event.touches[1].clientX\n      this.clientY1 = event.touches[1].clientY\n      if (event.touches.length > 2) {\n        this.clientX2 = event.touches[2].clientX\n        this.clientY2 = event.touches[2].clientY\n      }\n    }\n\n    if (deltaX) {\n      if (Math.sign(this.lastDeltaX) != Math.sign(deltaX)) {\n        this.scrollAccuX = deltaX\n        this.timePrevX = performance.now()\n      } else {\n        if (this.timePrevX == null)\n          this.timePrevX = performance.now()\n        this.scrollAccuX += deltaX\n      }\n    }\n    if (deltaY) {\n      if (Math.sign(this.lastDeltaY) != Math.sign(deltaY)) {\n        this.scrollAccuY = deltaY\n        this.timePrevY = performance.now()\n      } else {\n        if (this.timePrevY == null)\n          this.timePrevY = performance.now()\n        this.scrollAccuY += deltaY\n      }\n    }\n\n    this.lastDeltaX = deltaX\n    this.lastDeltaY = deltaY\n\n    if (deltaX || deltaY) {\n      if (this.mode == $me_atom2_wheel_synth_mode.justStarted) {\n        this.mode = $me_atom2_wheel_synth_mode.init\n      }\n      $me_atom2_async()\n    }\n  }\n  end(event: TouchEvent) {\n    this._end = event\n    this.endHelper()\n    // if (this.mode != $me_atom2_wheel_synth_mode.move) {\n    //   this.cancel()\n    // } else {\n    //   this._end = event\n    //   this.accel_k = 1\n    //   this.mode = $me_atom2_wheel_synth_mode.end\n    //   $me_atom2_async()\n    // }\n  }\n  // raf(t: number) {\n  //   return (\n  //     this.mode == $me_atom2_wheel_synth_mode.move ||\n  //     this.mode == $me_atom2_wheel_synth_mode.init ||\n  //     false ?\n  //       this.rafMove(t) :\n  //     this.mode == $me_atom2_wheel_synth_mode.end ?\n  //       this.rafEnd(t) :\n  //       null\n  //   )\n  // }\n\n  rafMove(t: number) {\n    // commented for metro.ts\n    // if (Math.abs(this.scrollAccuY) > Math.abs(this.scrollAccuX)) {\n    //   this.scrollAccuX = 0\n    // } else {\n    //   this.scrollAccuY = 0\n    // }\n    // const timeCurr = performance.now()\n    // const accel_threshold = a('/.#wheelTouchAccelThreshold')\n    // if (Math.abs(this.scrollAccuX) < accel_threshold) {\n    //   this.accelX = 0\n    // } else if (\n    //   this.timePrevX != null &&\n    //   Math.abs(this.scrollAccuX) >= accel_scrollAccu_threshold &&\n    //   timeCurr != this.timePrevX &&\n    //   true\n    // ) {\n    //   this.tPrev = t\n    //   this.accelX = this.scrollAccuX / (timeCurr - this.timePrevX)\n    //   this.timePrevX = timeCurr\n    // }\n    // if (Math.abs(this.scrollAccuY) < accel_threshold) {\n    //   this.accelY = 0\n    // } else if (\n    //   this.timePrevY != null &&\n    //   Math.abs(this.scrollAccuY) >= accel_scrollAccu_threshold &&\n    //   timeCurr != this.timePrevY &&\n    //   true\n    // ) {\n    //   this.tPrev = t\n    //   this.accelY = this.scrollAccuY / (timeCurr - this.timePrevY)\n    //   this.timePrevY = timeCurr\n    // }\n    // const result = <$me_atom2_event_wheel_touch_intf>{\n    //   mode: this.mode,\n    //   start: this._start,\n    //   last: this._last,\n    //   end: this._end,\n    //   _deltaX: this.scrollAccuX,\n    //   _deltaY: this.scrollAccuY,\n    // }\n    // this.scrollAccuX = 0\n    // this.scrollAccuY = 0\n    // return result\n    return <$me_atom2_event_wheel_touch_intf>{\n      start: this._start,\n      last: this._last,\n      end: this._end,\n      ...this.rafMoveHeler(t),\n      // mode: this.mode,\n      // _deltaX: this.scrollAccuX,\n      // _deltaY: this.scrollAccuY,\n    }\n  }\n  rafEndHelper(t: number) {\n    const tDelta = t - this.tPrev\n    const scrollAccuX = this.accelX * tDelta\n    const scrollAccuY = this.accelY * tDelta\n    const result = <$me_atom2_event_wheel_touch_intf>{\n      mode: this.mode,\n      // start: this._start,\n      // last: this._last,\n      // end: this._end,\n      _deltaX: scrollAccuX,\n      _deltaY: scrollAccuY,\n    }\n    if (!(\n      Math.abs(scrollAccuX) >= 1 ||\n      Math.abs(scrollAccuY) >= 1\n    )) {\n      result.mode = this.mode = $me_atom2_wheel_synth_mode.fini\n    } else {\n      this.accelX = this.accelX * this.accel_k\n      this.accelY = this.accelY * this.accel_k\n      this.accel_k = this.accel_k * a('/.#wheelTouchAccelFactor')\n      this.tPrev = t\n      $me_atom2_async()\n    }\n    return result\n  }\n  rafEnd(t: number) {\n    return <$me_atom2_event_wheel_touch_intf>{\n      // mode: this.mode,\n      start: this._start,\n      last: this._last,\n      end: this._end,\n      ...this.rafEndHelper(t)\n      // _deltaX: scrollAccuX,\n      // _deltaY: scrollAccuY,\n    }\n    // const tDelta = t - this.tPrev\n    // const scrollAccuX = this.accelX * tDelta\n    // const scrollAccuY = this.accelY * tDelta\n    // const result = <$me_atom2_event_wheel_touch_intf>{\n    //   mode: this.mode,\n    //   start: this._start,\n    //   last: this._last,\n    //   end: this._end,\n    //   _deltaX: scrollAccuX,\n    //   _deltaY: scrollAccuY,\n    // }\n    // if (!(\n    //   Math.abs(scrollAccuX) >= 1 ||\n    //   Math.abs(scrollAccuY) >= 1\n    // )) {\n    //   result.mode = this.mode = $me_atom2_wheel_synth_mode.fini\n    // } else {\n    //   this.accelX = this.accelX * this.accel_k\n    //   this.accelY = this.accelY * this.accel_k\n    //   this.accel_k = this.accel_k * a('/.#wheelTouchAccelFactor')\n    //   this.tPrev = t\n    //   $me_atom2_async()\n    // }\n    // return result\n  }\n}\n\nexport let $me_atom2_wheel_touch: $me_atom2_wheel_touch_class\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\n// export enum $me_atom2_wheel_synth_mode { justStarted, init, move, end, fini }\n\nexport class $me_atom2_wheel_drag_class extends $me_atom2_wheel_synth_class {\n  // mode: $me_atom2_wheel_synth_mode\n  _start: MouseEvent\n  _end: MouseEvent\n  _last: MouseEvent\n\n  clientX: number\n  clientY: number\n\n  // scrollAccuX = 0\n  // scrollAccuY = 0\n\n  // lastDeltaX = 0\n  // lastDeltaY = 0\n\n  // accelX = 0\n  // accelY = 0\n\n  // timePrevX: number\n  // timePrevY: number\n\n  // accel_k: number\n\n  // tPrev: number\n\n  start(event: MouseEvent) {\n    this.mode = $me_atom2_wheel_synth_mode.justStarted\n    this._start = event\n    this._last = event\n\n    this.scrollAccuX = 0\n    this.clientX = event.clientX\n    this.lastDeltaX = 0\n    this.accelX = 0\n\n    this.scrollAccuY = 0\n    this.clientY = event.clientY\n    this.lastDeltaY = 0\n    this.accelY = 0\n\n    this.timePrevX = null\n    this.timePrevY = null\n  }\n  move(event: MouseEvent) {\n    this._last = event\n    this._end = event\n\n    const deltaX = this.clientX - event.clientX\n    if (deltaX)\n      if (Math.sign(this.lastDeltaX) != Math.sign(deltaX)) {\n        this.scrollAccuX = deltaX\n        this.timePrevX = performance.now()\n      } else {\n        if (this.timePrevX == null) this.timePrevX = performance.now()\n        this.scrollAccuX += deltaX\n      }\n    this.clientX = event.clientX\n    this.lastDeltaX = deltaX\n\n    const deltaY = this.clientY - event.clientY\n    if (deltaY)\n      if (Math.sign(this.lastDeltaY) != Math.sign(deltaY)) {\n        this.scrollAccuY = deltaY\n        this.timePrevY = performance.now()\n      } else {\n        if (this.timePrevY == null) this.timePrevY = performance.now()\n        this.scrollAccuY += deltaY\n      }\n    this.clientY = event.clientY\n    this.lastDeltaY = deltaY\n\n    // this.mode = $me_atom2_wheel_synth_mode.move\n    // $me_atom2_async()\n    if (deltaX || deltaY) {\n      if (this.mode == $me_atom2_wheel_synth_mode.justStarted) {\n        this.mode = $me_atom2_wheel_synth_mode.init\n      }\n      $me_atom2_async()\n    }\n  }\n  // cancel() {\n  //   this.mode = null\n  // }\n  end(event: MouseEvent) {\n    this._end = event\n    this.endHelper()\n    // if (this.mode != $me_atom2_wheel_synth_mode.move) {\n    //   this.cancel()\n    // } else {\n    //   this._end = event\n    //   this.accel_k = 1\n    //   this.mode = $me_atom2_wheel_synth_mode.end\n    //   $me_atom2_async()\n    // }\n  }\n  // raf(t: number) {\n  //   return (\n  //     this.mode == $me_atom2_wheel_synth_mode.move ||\n  //     this.mode == $me_atom2_wheel_synth_mode.init ||\n  //     false ?\n  //       this.rafMove(t) :\n  //     this.mode == $me_atom2_wheel_synth_mode.end ?\n  //       this.rafEnd(t) :\n  //       null\n  //     // this.mode == $me_atom2_wheel_synth_mode.move ? this.rafMove(t) :\n  //     // this.mode == $me_atom2_wheel_synth_mode.end ? this.rafEnd(t) :\n  //     // null\n  //   )\n  // }\n  rafMove(t: number) {\n    // commented for metro.ts\n    // if (Math.abs(this.scrollAccuY) > Math.abs(this.scrollAccuX)) {\n    //   this.scrollAccuX = 0\n    // } else {\n    //   this.scrollAccuY = 0\n    // }\n    const timeCurr = performance.now()\n    const accel_threshold = a('/.#wheelTouchAccelThreshold')\n    if (Math.abs(this.scrollAccuX) < accel_threshold) {\n      this.accelX = 0\n    } else if (this.timePrevX != null) {\n      this.tPrev = t\n      this.accelX = this.scrollAccuX / (timeCurr - this.timePrevX)\n      this.timePrevX = timeCurr\n    }\n    if (Math.abs(this.scrollAccuY) < accel_threshold) {\n      this.accelY = 0\n    } else if (this.timePrevY != null) {\n      this.tPrev = t\n      this.accelY = this.scrollAccuY / (timeCurr - this.timePrevY)\n      this.timePrevY = timeCurr\n    }\n    const result = <$me_atom2_event_wheel_drag_intf>{\n      mode: this.mode,\n      start: this._start,\n      last: this._last,\n      end: this._end,\n      _deltaX: this.scrollAccuX,\n      _deltaY: this.scrollAccuY,\n    }\n    this.scrollAccuX = 0\n    this.scrollAccuY = 0\n    return result\n  }\n  rafEnd(t: number) {\n    const tDelta = t - this.tPrev\n    const scrollAccuX = this.accelX * tDelta\n    const scrollAccuY = this.accelY * tDelta\n    const result = <$me_atom2_event_wheel_drag_intf>{\n      start: this._start,\n      last: this._last,\n      end: this._end,\n      _deltaX: scrollAccuX,\n      _deltaY: scrollAccuY,\n    }\n    if (!(\n      Math.abs(scrollAccuX) >= 1 ||\n      Math.abs(scrollAccuY) >= 1\n    )) {\n      result.mode = this.mode = $me_atom2_wheel_synth_mode.fini\n    } else {\n      this.accelX = this.accelX * this.accel_k\n      this.accelY = this.accelY * this.accel_k\n      this.accel_k = this.accel_k * a('/.#wheelTouchAccelFactor')\n      this.tPrev = t\n      $me_atom2_async()\n    }\n    return result\n  }\n}\nexport let $me_atom2_wheel_drag: $me_atom2_wheel_drag_class\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nexport interface $me_atom2_ec_cnf_intf {\n  type?: string,\n  skip_root_defaults?: boolean,\n  base?: $me_atom2_ec_cnf_intf,\n\n  prop?: $me_atom2_prop_intf,\n  prop_default?: $me_atom2_prop_intf,\n\n  control?: $me_atom2_control_intf,\n  event?: $me_atom2_event_intf,\n  dispatch?: (dispatch_name: string, dispatch_arg?: any) => boolean,\n\n  init?: (ec: $me_atom2_ec) => void,//$me_fn<void>,\n  fini?: (ec: $me_atom2_ec) => void,\n  // fini?: $me_fn<void>,\n}\n\nexport interface $me_atom2_ec_intf {\n  [tail: string]: $me_atom2_prop_def<$me_atom2_ec_cnf_intf>,\n}\n\nexport interface $me_atom2_ec_p_base_intf\n  extends $me_atom2_entity_class_p_base_intf\n  {\n    cnf: $me_atom2_ec_cnf_intf,\n    len_key?: number,\n    key?: string | string[],\n    keys?: string[],\n    key_enum?: string[] | string[][],\n  }\n\nexport interface $me_atom2_ec_p_intf\n  extends $me_atom2_ec_p_base_intf\n  {\n    ent: $me_atom2_entity_enum,\n  }\n\nexport class $me_atom2_ec extends $me_atom2_entity {\n  static prop_default = <$me_atom2_prop_intf>{\n    ...$me_atom2_prop_cascade(() => $me_align.left,\n      '#align', ['#alignHor', '#alignVer']\n    ),\n\n    '#ofsHor': () => 0,\n    '#ofsVer': () => 0,\n    '#width': '<.#width',\n    '#height': '<.#height',\n  }\n\n\n  get 'wait_for_child()'() {\n    if (!this._wait_for_child) return null\n    const result : {[name_entity: string]: any} = {}\n    for (const name_entity of this._wait_for_child) {\n      const entity = $me_atom2_entity.root().by_path_s(name_entity) as $me_atom2_ec\n      // console.log(entity)\n      result[name_entity] = typeof entity == 'string' ? entity : entity['wait_for_child()']\n    }\n    return result\n  }\n\n  // TODO: make two following private\n  readonly cnf: $me_atom2_ec_cnf_intf\n  // readonly bases: $me_atom2_ec_bases_type<$me_atom2_ec_cnf_intf>\n\n  static _to_init = Array<$me_atom2_path>()\n  private _init_did: boolean\n  constructor (p: $me_atom2_ec_p_intf) {\n    if (!p.key) {\n      super(p)\n    } else {\n      let {ent, tail, parent} = p\n      parent = parent.by_path(new $me_atom2_path({ent, tail}) )\n      || new $me_atom2_entity({ent, tail, parent})\n      const key = typeof p.key === 'string' ? [p.key as string] : p.key as string[]\n      const i_last = p.keys.length - 2\n      ent = $me_atom2_entity_enum.key\n      for (let i = 0; i <= i_last; i++) {\n        tail = key[i]\n        parent = parent.by_path(new $me_atom2_path({ent, tail}))\n        || new $me_atom2_entity({ent, tail, parent})\n      }\n      super({\n        ent: $me_atom2_entity_enum.key,\n        tail: key[i_last + 1],\n        parent,\n      })\n    }\n    this.cnf = p.cnf\n    // this.bases = new Map<$me_fn<$me_atom2_ec_cnf_intf>, $me_atom2_ec_cnf_intf>()\n  }\n  protected _wait_for_child_do(name: string) {\n    if (!this._wait_for_child) this._wait_for_child = new Set<string>()\n    this._wait_for_child.add(name)\n    // if (\n    //   name.startsWith('/@app@workspace@search@panelResult@grid@row') &&\n    //   name.length <= '/@app@workspace@search@panelResult@grid@row'.length + 4\n    // ) console.warn(`%c${name}`, 'background: green; color: white')\n  }\n  // protected\n  _wait_for_child_did(name: string = '') {\n    if (name && this._wait_for_child) {\n      // if (name.endsWith('@row')) console.warn(name)\n      // if (\n      //   name.startsWith('/@app@workspace@search@panelResult@grid@row') &&\n      //   name.length <= '/@app@workspace@search@panelResult@grid@row'.length + 4\n      // ) console.warn(`%c${name}`, 'background: red; color: white', this.name())\n      this._wait_for_child.delete(name)\n      if (!this._wait_for_child.size)\n        this._wait_for_child = null\n    }\n\n    if (!this._wait_for_child) {\n      // if (this.name() == '/@app@menu@ear') console.log('here')\n      this._wait_for_child_did_helper()\n\n      // this._isReady(true)\n      $me_atom2_ec.almost_ready.add(this)\n    }\n  }\n  static almost_ready = new Set<$me_atom2_ec>()\n  // protected\n  _isReady(val?: boolean) {\n    const prop_isReady = this._entities.prop['#_isReady'] as $me_atom2<boolean>\n    if (!prop_isReady) {\n      console.error(this.name() + ' has no .#_isReady, but expected')\n      $me_stop = true\n      $me_throw('here')\n      return\n      return false\n    }\n    return prop_isReady.value(val)\n  }\n  protected _wait_for_child_did_helper() {\n  }\n  // private\n  _wait_for_child: Set<string>\n\n  private _active_did: boolean\n  protected _on_active() {\n    if (!this._active_did) {\n      this._wait_for_child_did()\n      this._active_did = true\n    }\n    $me_atom2_event_handlers = null\n    if ($me_atom2_event_mousemove_last && !$me_atom2_event_mousemove_to_process) {\n      $me_atom2_event_mousemove_to_process = $me_atom2_event_mousemove_last\n      $me_atom2_async()\n    }\n  }\n  destroy() {\n    this.fini()\n    super.destroy()\n  }\n  init() {\n    if (this._init_did) return\n    const prev = a.curr\n    a.curr = this\n    this._cnf_init(this.cnf)\n    a.curr = prev\n    this._init_did = true\n  }\n  fini() {\n    if (!this._init_did) return\n    const prev = a.curr\n    a.curr = this\n    this._cnf_fini(this.cnf)\n    a.curr = prev\n  }\n  dispatch(dispatch_name: string, dispatch_arg?: any): boolean {\n    const prev = a.curr\n    a.curr = this\n    const result = this._cnf_dispatch(this.cnf, dispatch_name, dispatch_arg)\n    a.curr = prev\n    return result\n  }\n  private _cnf_dispatch(cnf: $me_atom2_ec_cnf_intf, dispatch_name: string, dispatch_arg?: any): boolean {\n    return !cnf ? false : (\n      cnf.dispatch && cnf.dispatch(dispatch_name, dispatch_arg) ||\n      this._cnf_dispatch(cnf.base, dispatch_name, dispatch_arg)\n    )\n  }\n  private _cnf_init(cnf: $me_atom2_ec_cnf_intf) {\n    if (!cnf) return\n    this._cnf_init(cnf.base)\n    if (cnf.init) cnf.init(this)\n  }\n  private _cnf_fini(cnf: $me_atom2_ec_cnf_intf) {\n    if (!cnf) return\n    if (cnf.fini) cnf.fini(this)\n    this._cnf_fini(cnf.base)\n  }\n  protected cnf_item<Type>(name: string) {\n    return this._cnf_item(name, this.cnf)\n  }\n  protected invalidateClientRect() {\n    const prop_clientRect = this._entities.prop['#clientRect'] as $me_atom2<$me_rect_intf>\n    if (!prop_clientRect) {\n      console.error(this.name() + ' has no _entities.#clientRect, but expected')\n      $me_stop = true\n      $me_throw('here')\n      return\n    }\n    if (prop_clientRect.state() === $me_atom2_state_enum.valid)\n      prop_clientRect.set_state($me_atom2_state_enum.need_check)\n      // prop_clientRect.set_state($me_atom2_state_enum.invalid)\n    for (const ec_kind of ['elem', 'control']) {\n      const entities_of_kind = this._entities[ec_kind]\n      if (!entities_of_kind) continue\n      for (const tail in entities_of_kind)\n        this.invalidateClientRectHelper(entities_of_kind[tail])\n    }\n  }\n  private invalidateClientRectHelper(entity: $me_atom2_entity) {\n    // console.warn(this.name())\n    if (!entity._entities) {\n      console.error(entity.name() + ' has now _entities.key, but expected')\n      $me_stop = true\n      $me_throw('here')\n      return\n    }\n    if (!entity._entities.key) {\n      (entity as $me_atom2_ec).invalidateClientRect()\n    } else {\n      for (const tail in entity._entities.key)\n        this.invalidateClientRectHelper(entity._entities.key[tail])\n    }\n  }\n  protected _mk_controls(level = 0) {\n    const prev = a.curr\n    a.curr = this\n\n    const cnf_control = this.cnf_items<$me_atom2_prop_compute_only_def<$me_atom2_control_cnf_intf>>('control')\n    for (const tail in cnf_control) {\n      const prop_def = cnf_control[tail]\n      const fn_apply: $me_atom2_apply_fn<$me_atom2_ec_cnf_intf> = ({prev, val, len_key, key, keys, key_enum}) => {\n        let path_abs = new $me_atom2_path({ent: $me_atom2_entity_enum.control, tail, path: this.path})\n        let path = new $me_atom2_path({ent: $me_atom2_entity_enum.control, tail})\n        if (key) {\n          const ent = $me_atom2_entity_enum.key\n          for (const tail of (typeof key === 'string' ? [key as string] : key as string[])) {\n            path = new $me_atom2_path({ent, tail, path})\n            path_abs = new $me_atom2_path({ent, tail, path: path_abs})\n          }\n        }\n        // if (prev && val && prev.type === val.type) return\n        if (prev && val && (prev === val || prev.type == val.type)) return\n        const control = this.by_path(path) as $me_atom2_control\n        if (control instanceof $me_atom2_control)\n          control.destroy()\n        if (val) {\n          $me_atom2_control.to_def.push({\n            cnf: val,\n            parent: this,\n            tail,\n            len_key,\n            key,\n            keys,\n            key_enum,\n            level: level + 1,\n          })\n          $me_atom2_async()\n        }\n        if (!this._isReady()) {\n          if (val) {\n            this._wait_for_child_do(path_abs.toString())\n          } else {\n            this._wait_for_child_did(path_abs.toString())\n          }\n          if (key)\n            this._wait_for_child_did(this.name() + '^' + tail)\n        }\n      }\n      $me_atom2.to_def.push($me_atom2_prop_def_prepare<$me_atom2_control_cnf_intf>(\n        prop_def,\n        {\n          parent: this,\n          tail: '^' + tail,\n          fn_apply,\n        }\n      ))\n      this._wait_for_child_do(this.name() + '^' + tail)\n      $me_atom2_async()\n    }\n\n    a.curr = prev\n    return cnf_control\n  }\n  private _cnf_item<Value>(\n    name: string,\n    cnf: $me_atom2_ec_cnf_intf\n  ): Value {\n    return (\n      !cnf ? null :\n      cnf[name] !== void 0 ? cnf[name] as Value :\n      // this._cnf_item<Value>(name, this.base(cnf.base))\n      this._cnf_item<Value>(name, cnf.base)\n    )\n  }\n  protected cnf_items<Type>(name: string) {\n    const result = <{ [k: string]: Type }>{}\n    this._cnf_items(name, this.cnf, result)\n    return result\n  }\n  private _cnf_items<Type>(\n    name: string,\n    cnf: $me_atom2_ec_cnf_intf,\n    result: { [k: string]: Type }\n  ) {\n    // if (this.name() === '/@app@game@shelf_canvas^checker[white][0]^circle_outer') console.log(cnf)\n    if (!cnf) return\n    if (cnf[name])\n      for (const k in (cnf[name] as { [k: string]: Type }))\n        if (result[k] === void 0 && cnf[name][k] != null)\n          result[k] = cnf[name][k]\n    // this._cnf_items<Type>(name, this.base(cnf.base), result)\n    this._cnf_items<Type>(name, cnf.base, result)\n  }\n  // =======================================\n  protected _prepare(\n    name: string,\n    ent: $me_atom2_entity_enum.control | $me_atom2_entity_enum.elem,\n    dflt: $me_atom2_prop_intf,\n    cnf?: $me_atom2_ec_cnf_intf,\n    level?: number,\n    skip_root_defaults?: boolean,\n  ): $me_atom2_ec_prepare_ret_intf {\n    if (level === void 0) {\n      cnf = this.cnf\n      level = 0\n    }\n    if (cnf) {\n      if (level) {\n        // if (!cnf.type) $me_throw(`${this.name()}: .base must have .type`)\n      } else {\n        // if (cnf.type) $me_throw('terminal control can not have .type, .type allowed only inside .base')\n        if (cnf[name]) $me_throw(`terminal control can not have .${name}`)\n      }\n      skip_root_defaults = skip_root_defaults || cnf.skip_root_defaults\n    }\n    const result =\n      level ?\n        this._prepare_helper(name, ent, dflt, cnf, level, skip_root_defaults) :\n        this._prepare(\n          name,\n          ent,\n          dflt,\n          cnf.base,\n          level + 1,\n          skip_root_defaults || cnf && cnf.base && cnf.base.skip_root_defaults,\n        )\n    if (\n      cnf && cnf.skip_root_defaults === false &&\n      cnf.base && cnf.base.skip_root_defaults === true\n    ) {\n      const {defaults, defaults_relative} = this._prepare_helper(name, ent, {}, null, 0, false)\n      for (const prop in defaults)\n        if (!result.defaults[prop])\n          result.defaults[prop] = defaults[prop]\n      for (const prop in defaults_relative)\n        if (!result.defaults_relative[prop])\n          result.defaults_relative[prop] = defaults_relative[prop]\n      // console.warn(result, cnf)\n    }\n    return result\n  }\n  static _cnf_cache = new Map<$me_atom2_ec_cnf_intf, string>()\n  private _prepare_helper(\n    name: string,\n    ent: $me_atom2_entity_enum.control | $me_atom2_entity_enum.elem,\n    dflt: $me_atom2_prop_intf,\n    cnf: $me_atom2_ec_cnf_intf,\n    level: number,\n    skip_root_defaults: boolean,\n  ) {\n    // const type = !cnf ? '$me' : cnf.type\n    let type: string\n    if (!cnf) {\n      type = '$me'\n      if (skip_root_defaults) {\n        return <$me_atom2_ec_prepare_ret_intf>{\n          defaults: { },\n          defaults_relative: { },\n        }\n      }\n    } else {\n      if (!$me_atom2_ec._cnf_cache.has(cnf)) {\n        const name = cnf.type || ($me_atom2_ec._cnf_cache.size + '')\n        $me_atom2_ec._cnf_cache.set(cnf, name)\n      }\n      type = $me_atom2_ec._cnf_cache.get(cnf)\n    }\n    const cacheKey = $me_atom2_path_ent2prefix[ent] + type + ':' + name\n    if (!$me_atom2_ec._prepare_cache[cacheKey]) {\n\n      const result = cnf ?\n        this._prepare(\n          name,\n          ent,\n          dflt,\n          cnf.base,\n          level + 1,\n          skip_root_defaults || cnf && cnf.base && cnf.base.skip_root_defaults,\n        ) :\n        <$me_atom2_ec_prepare_ret_intf>{\n          defaults: {},\n          defaults_relative: {},\n        }\n\n      const props = !cnf ? dflt : cnf[name] ? cnf[name] : <$me_atom2_prop_intf>{}\n      const prop_default = <$me_atom2_prop_intf>{}\n      const prop_default_relative = <$me_atom2_prop_intf>{}\n      for (const prop in props) {\n        const prop_def = props[prop]\n        if (\n          typeof prop_def === 'string' && !(prop_def as string).startsWith('/') ||\n          prop_def && Array.isArray(prop_def.masters) && prop_def.masters.filter((s: string) => !s.startsWith('/')).length\n        ) {\n          prop_default_relative[prop] = prop_def\n        } else {\n          prop_default[prop] = prop_def\n        }\n      }\n      {\n        const src = result.defaults\n        for (const prop in result.defaults)\n          if (!prop_default[prop] && !prop_default_relative[prop])\n            prop_default[prop] = src[prop]\n      }\n      {\n        const src = result.defaults_relative\n        for (const prop in src)\n          if (!prop_default[prop] && !prop_default_relative[prop])\n            prop_default_relative[prop] = src[prop]\n      }\n      {\n        const result = <$me_atom2_ec_prepare_ret_intf>{\n          defaults: {},\n          defaults_relative: prop_default_relative,\n        }\n        const parent = new $me_atom2<$me_atom2_ec_prepare_ret_intf>({\n          tail: cacheKey,\n          fn_compute: () => result,\n        })\n        for (const tail in prop_default) {\n          const atom = new $me_atom2(\n            $me_atom2_prop_def_prepare(prop_default[tail], {tail, parent})\n          )\n          result.defaults[tail] = atom.name()\n        }\n        $me_atom2_ec._prepare_cache[cacheKey] = result\n      }\n    }\n    const result = $me_atom2_ec._prepare_cache[cacheKey]\n    return <$me_atom2_ec_prepare_ret_intf>{\n      defaults: { ...result.defaults },\n      defaults_relative: { ...result.defaults_relative },\n    }\n  }\n  static _prepare_cache = <{[type_name: string]: $me_atom2_ec_prepare_ret_intf}>{}\n}\n\n// ============================================================================\n\nexport type $me_atom2_ec_bases_type<Value> = Map<$me_fn<Value>, Value>\n\nexport interface $me_atom2_ec_prepare_ret_intf {\n  defaults: $me_atom2_prop_intf,\n  defaults_relative: $me_atom2_prop_intf,\n}\n\n// ==========================================================================\n\nexport const $me_atom2_ec_body_cursor = $me_atom2_async_multi_origin<string, $me_atom2_path>({\n  // default: 'default',\n  name: 'cursor',\n  default: null,\n  raf_order: 100,\n  flush: (cursor: string) => {\n    if (cursor == null) cursor = 'default'\n    if (document.body.style.cursor != cursor)\n      document.body.style.cursor = cursor\n  },\n})// ============================================================================\n\n// ============================================================================\n\nexport interface $me_atom2_control_cnf_intf\n  extends $me_atom2_ec_cnf_intf\n  {\n    clean?: $me_atom2_control_clean_fn,\n    render?: $me_atom2_control_render_fn,\n    // render_post?: $me_atom2_control_render_fn,\n  }\n\nexport type $me_atom2_control_render_fn =\n  (p: $me_atom2_control_render_p_intf ) => void\n\nexport type $me_atom2_control_clean_fn =\n  (p: $me_atom2_control_clean_p_intf ) => boolean\n\nexport interface $me_atom2_control_intf {\n  [tail: string]: $me_atom2_prop_def<$me_atom2_control_cnf_intf>,\n}\n\nexport interface $me_atom2_control_p_intf\n  extends $me_atom2_ec_p_base_intf\n  {\n    cnf: $me_atom2_control_cnf_intf,\n    level?: number,\n  }\n\nexport enum $me_atom2_control_render_state_enum { cleaned, rendered }\n\nexport class $me_atom2_control extends $me_atom2_ec {\n  // static prop_default: $me_atom2_prop_intf\n\n  static pixelRatio() {\n    return ($me_atom2_entity.root()._entities.prop['#pixelRatio'] as $me_atom2).value()\n  }\n\n  // ===================================\n\n  static to_def = Array<$me_atom2_control_p_intf>()\n  static _to_render = new Set<$me_atom2_path>()\n  static _to_clean = new Set<$me_atom2_path>()\n\n  // ===================================\n\n  readonly level: number\n  render_state: $me_atom2_control_render_state_enum\n  constructor (p: $me_atom2_control_p_intf) {\n    super({\n      ...p,\n      ent: $me_atom2_entity_enum.control,\n    })\n    this._mk_controls(this.level = p.level || 1)\n    this._mk_props('<'.repeat(this.level))\n  }\n  protected _wait_for_child_did_helper() {\n    const parent = this.parent(true) as $me_atom2_control\n    if (parent) parent._wait_for_child_did(this.name())\n    // if (parent) parent._add_child_to_reorder(this.path)\n  }\n  destroy() {\n    if (this.level > 1) {\n      $me_atom2_control._to_render.add(this.parent(true).path)\n      $me_atom2_async()\n    } else {\n      $me_atom2_control.clean([this])\n    }\n    super.destroy()\n  }\n  static prop_non_render_default = <$me_atom2_prop_intf>{\n  }\n  private _mk_props(s_level: string) {\n    const {defaults, defaults_relative} = this._prepare(\n      'prop_default',\n      $me_atom2_entity_enum.control,\n      // $me_atom2_control.prop_default || {}\n      // (this.cnf as any).node && (this.cnf as any).node.ns && (this.cnf as any).node.tag != 'svg' ? {} : (\n        $me_atom2_control.prop_default || {}\n        // )\n      // $me_atom2_control.prop_default || {}\n    )\n    const prop_render = this.props([\n      this.cnf_items<$me_atom2_prop_def>('prop'),\n      defaults,\n      defaults_relative,\n      {\n        '#hidden': () => false,\n        '#zIndex': '<.#zIndex',\n        // '#isHover': () => false,\n      },\n      {\n        '#_isReady': () => false,\n        '#isReady': $me_atom2_prop<boolean>(['<.#isReady', '.#_isReady'],\n          $me_atom2_prop_compute_fn_and(),\n          ({val}) => {\n            if (val) $me_atom2_ec._to_init.push(this.path)\n          },\n        ),\n        // '#_cursor': $me_atom2_prop<string>(['.#isHover', '.#cursor'],\n        //   ({masters: [isHover, cursor]}) => !isHover ? 'default' : cursor,\n        //   ({atom, val}) => {\n        //     $me_atom2_ec_body_cursor({origin: atom.path, val: val})\n        //   },\n        // ),\n        '#visible': $me_atom2_prop<boolean>(\n          ['.#hidden', '<.#visible'],\n          ({masters: [hidden, visible]}) => !hidden && visible,\n          ({val}) => {\n            if (val) {\n              $me_atom2_control._to_render.add(this.path)\n            } else\n            // if (val) return\n            if (this.level > 1) {\n              $me_atom2_control._to_render.add(this.parent(true).path)\n            } else {\n              $me_atom2_control._to_clean.add(this.path)\n            }\n            $me_atom2_async()\n          }\n        ),\n        '#ctxSize': s_level + '.#ctxSize',\n        '#ctx': s_level + '.#ctx',\n        '#left': $me_atom2_prop<number, [$me_align, number, number, number, number]>(\n          ['.#alignHor', '<.#width', '.#width', '.#ofsHor'].concat(s_level.length < 2 ? [] : ['<.#left']),\n          ({masters: [alignHor, width_parent, width, ofsHor, left_parent]}) => {\n            left_parent = left_parent || 0\n            const result =\n              alignHor === $me_align.left ? left_parent + ofsHor :\n              alignHor === $me_align.right ? left_parent + width_parent - width - ofsHor :\n              left_parent + (width_parent - width) / 2 + ofsHor\n            return result\n          }\n        ),\n        '#top': $me_atom2_prop<number, [$me_align, number, number, number, number]>(\n          ['.#alignVer', '<.#height', '.#height', '.#ofsVer'].concat(s_level.length < 2 ? [] : ['<.#top']),\n          ({masters: [alignVer, height_parent, height, ofsVer, top_parent]}) => {\n            top_parent = top_parent || 0\n            const result =\n              alignVer === $me_align.top ? top_parent + ofsVer :\n              alignVer === $me_align.bottom ? top_parent + height_parent - ofsVer :\n              top_parent + (height_parent - height) / 2 + ofsVer\n              return result\n          }\n        ),\n      },\n    ], {\n      def: ({tail, prop_def, prop_defined, p, idx, len}) => {\n        if (tail == '#cursor') {\n          console.error(`${this.name()}: prop \"#cursor\" must be defined in \"prop_non_render\" section`)\n          return null\n        }\n      },\n      dup: ({tail, prop_defined, idx, len}) => {\n        if (idx === len - 1)\n          $me_throw(`${this.name()}: .${tail} reserved for internal use` + (tail !== '#visible' ? '' : ', use .#hidden instead'))\n      }\n    })\n  {\n    const {defaults, defaults_relative} = this._prepare(\n      'prop_non_render_default',\n      $me_atom2_entity_enum.control,\n      $me_atom2_control.prop_non_render_default || {}\n    )\n    // console.log(defaults, defaults_relative)\n    const prop_non_render = this.props([\n      this.cnf_items<$me_atom2_prop_def>('prop_non_render'),\n      defaults,\n      defaults_relative,\n      {\n        '#isHover': () => false,\n      },\n      {\n        '#_cursor': $me_atom2_prop<string>(['.#isHover', '.#cursor'],\n          ({masters: [isHover, cursor]}) => !isHover ? null : cursor,\n          ({atom, val}) => {\n            $me_atom2_ec_body_cursor({origin: atom.path, val: val})\n          },\n        ),\n      },\n    ], {\n      def: ({tail, prop_def, prop_defined, p, idx, len}) => {\n        if (idx === len - 2 && tail == '#isHover') {\n          if (prop_defined['#cursor'] === void 0) return null\n        } else if (idx === len - 1 && tail == '#_cursor') {\n          if (prop_defined['#cursor'] === void 0) return null\n        }\n      },\n      dup: ({tail, prop_defined, idx, len}) => {\n        if (idx === len - 1)\n          $me_throw(`${this.name()}: .${tail} reserved for internal use` + (tail !== '#visible' ? '' : ', use .#hidden instead'))\n      }\n    })\n  }\n\n    for (const prop of ['#width', '#height', '#alignHor', '#alignVer', '#ofsHor', '#ofsVer'])\n      if (prop_render[prop] === void 0)\n        $me_throw(`${this.name()}: requires .${prop} to be defined`)\n\n    this.props({\n      '#render': $me_atom2_prop<any>(\n        (Object as any).keys(prop_render).map((s: string) => '.' + s),//TODO: concat('.isFocused'),\n        ({masters}) => !(this.active() && a('.#visible') && a('.#isReady')) ? null : masters,\n        ({val, prev, atom}) => {\n          if (!val) return\n          // console.warn('to_render', this.path.toString(), atom.masters, val, prev)\n          $me_atom2_control._to_render.add(this.path)\n          $me_atom2_async()\n        },\n      ),\n      // non_render\n      '#offsetRect': () => $me_rect(),\n      '#clientRect': $me_atom2_prop<$me_rect_intf>(\n        [s_level + '.#clientRect', '.#offsetRect'],\n        ({masters: [clientRect, offsetRect]}) => {\n          return <$me_rect_intf>{\n            left: clientRect.left + offsetRect.left,\n            top: clientRect.top + offsetRect.top,\n            right: clientRect.left + offsetRect.right,\n            bottom: clientRect.top + offsetRect.bottom,\n          }\n        },\n        prop_render['#isHover'] === void 0 ? null :\n        ({val, atom}) => {\n          if ($me_atom2_event_mousemove_last && !$me_atom2_event_mousemove_to_process) {\n            $me_atom2_event_mousemove_to_process = $me_atom2_event_mousemove_last\n            $me_atom2_async()\n          }\n        }\n      ),\n    })\n  }\n  // ===========================================\n\n  static font_prepare(ctx: CanvasRenderingContext2D, pixelRatio: number, prefix = '') {\n    const ctxFontSize = Math.round($me_atom2_control.font_size(pixelRatio, prefix))\n    ctx.font = $me_atom2_control._fontWeight(prefix) + ' ' + ctxFontSize + 'px ' + $me_atom2_control._fontFamily(prefix)\n    ctx.textAlign = 'left'\n    ctx.textBaseline = 'bottom'\n    return ctxFontSize\n  }\n\n  static font_size(pixelRatio: number, prefix = '') {\n    const prop = a.curr.by_path_s($me_atom2_control._fontProp('fontSize', prefix)) as $me_atom2<number>\n    if (typeof prop === 'string') $me_throw(prop)\n    const result = prop.value() * pixelRatio\n    return result\n  }\n\n  private static _fontProp(prop: string, prefix: string) {\n    const result = '.' + (!prefix ? prop : prefix + prop.slice(0, 1).toUpperCase() + prop.slice(1))\n    return result\n  }\n\n  private static _fontFamily(prefix = '') {\n    const prop = a.curr.by_path_s($me_atom2_control._fontProp('fontFamily', prefix)) as $me_atom2<string>\n    return !prefix || typeof prop !== 'string' ? prop.value() : a('.fontFamily')\n  }\n\n  private static _fontWeight(prefix = '') {\n    const prop = a.curr.by_path_s($me_atom2_control._fontProp('fontWeight', prefix)) as $me_atom2<string>\n    return !prefix || typeof prop !== 'string' ? prop.value() : a('.fontWeight')\n  }\n\n  // ===========================================\n\n  static clean(controls: $me_atom2_control[], force = false ) {\n    let count = 0\n    // console.log('clean', controls.map(control => control.name()))\n    for (let control of controls) {\n      if (control.render_state !== $me_atom2_control_render_state_enum.rendered) continue\n      count++\n\n      const ctxRect = control._ctxRect()\n      const p = <$me_atom2_control_clean_p_intf>{\n        ctx: (control._entities.prop['#ctx'] as $me_atom2<CanvasRenderingContext2D>).value(),\n        ctxRect,\n      }\n      if (p.ctx) {\n        const prev = a.curr\n        a.curr = control\n        // console.warn('%cclean', 'background: red; color: white', control.name())\n        if (!control._clean_helper(p, control.cnf as $me_atom2_control_cnf_intf))\n          p.ctx.clearRect(\n            p.ctxRect.left,\n            p.ctxRect.top,\n            p.ctxRect.right - p.ctxRect.left + 1, // +1 due to sierp/control/\n            p.ctxRect.bottom - p.ctxRect.top + 1, // +1 due to sierp/control/\n          )\n        a.curr = prev\n      }\n      control.render_state = $me_atom2_control_render_state_enum.cleaned\n\n      let controls: $me_atom2_control[]\n      if ($me_atom2_control._fill_controls_cache.has(control)) {\n        controls = $me_atom2_control._fill_controls_cache.get(control)\n      } else {\n        controls = []\n        const entities_control = control._entities.control\n        $me_atom2_control._fill_controls(controls, control._entities.control)\n        $me_atom2_control._fill_controls_cache.set(control, controls)\n      }\n      if (controls.length)\n        $me_atom2_control.clean($me_atom2_control.zIndex_sort(controls), force)\n    }\n    return count\n  }\n  private _ctxRect() {\n    const prop = this._entities.prop\n    const prop_offsetRect = prop['#offsetRect'] as $me_atom2<$me_rect_intf>\n    const offsetRect = prop_offsetRect.value()\n    const pixelRatio = $me_atom2_control.pixelRatio()\n    return <$me_rect_intf>{\n      left: offsetRect.left * pixelRatio,\n      top: offsetRect.top * pixelRatio,\n      right: offsetRect.right * pixelRatio,\n      bottom: offsetRect.bottom * pixelRatio,\n    }\n  }\n  private _clean_helper(\n    p: $me_atom2_control_clean_p_intf,\n    cnf: $me_atom2_control_cnf_intf,\n  ): boolean {\n    let result = false\n    if (cnf) {\n      if (cnf.clean) result = cnf.clean(p)\n      // result = this._clean_helper(p, this.base(cnf.base)) || result\n      result = this._clean_helper(p, cnf.base) || result\n    }\n    return result\n  }\n\n  static fill_controls_cache_clear() {\n    $me_atom2_control._fill_controls_cache.clear()\n  }\n  private static _fill_controls_cache = new Map<$me_atom2_control, $me_atom2_control[]>()\n  private static _fill_controls(\n    controls: $me_atom2_control[],\n    entities_of_type: {[entity_name: string]: $me_atom2_entity}\n  ) {\n    for (const tail in entities_of_type) {\n      const entity = entities_of_type[tail]\n      if (!entity._entities.key) {\n        controls.push(entity as $me_atom2_control)\n      } else {\n        $me_atom2_control._fill_controls(controls, entity._entities.key)\n      }\n    }\n  }\n\n  // ===========================================\n\n  static render(controls: $me_atom2_control[], pixelRatio?: number) {\n    if (pixelRatio === void 0)\n      pixelRatio = $me_atom2_control.pixelRatio()\n    let count = 0\n    // console.log('render', controls.map(control => control.name()))\n    for (let control of controls) {\n      if (control.render_state === $me_atom2_control_render_state_enum.rendered) {\n        // console.error('render skip for ' + control.name())\n        continue\n      }\n      count++\n\n      const prop = control._entities.prop\n      const prop_offsetRect = prop['#offsetRect'] as $me_atom2<$me_rect_intf>\n      const prop_width = prop['#width'] as $me_atom2\n      const prop_heght = prop['#height'] as $me_atom2\n      const prop_left = prop['#left'] as $me_atom2\n      const prop_top = prop['#top'] as $me_atom2\n\n      const ctxWidth = Math.round(prop_width.value() * pixelRatio)\n      const ctxHeight = Math.round(prop_heght.value() * pixelRatio)\n      const left = Math.round(prop_left.value() * pixelRatio)\n      const top = Math.round(prop_top.value() * pixelRatio)\n      const right = left + ctxWidth\n      const bottom = top + ctxHeight\n\n      const ctxRect = <$me_rect_intf>{left, top, right, bottom}\n\n      prop_offsetRect.value(<$me_rect_intf>{\n        left: left / pixelRatio,\n        top: top / pixelRatio,\n        right: right / pixelRatio,\n        bottom: bottom / pixelRatio,\n      })\n      const p = <$me_atom2_control_render_p_intf>{\n        self: control,\n        ctx: (control._entities.prop['#ctx'] as $me_atom2<CanvasRenderingContext2D>).value(),\n        ctxSize: (control._entities.prop['#ctxSize'] as $me_atom2<$me_size_intf>).value(),\n        pixelRatio,\n        ctxRect,\n        ctxWidth,\n        ctxHeight,\n      }\n      {\n        const prev = a.curr\n        a.curr = control\n        control._render_helper(p, control.cnf)\n        // console.warn('%crender', 'background: green; color: white', control.name())\n        if (typeof a.curr.by_path_s('.#border') !== 'string') {\n          p.ctx.strokeStyle = a<string>('.#border')\n          p.ctx.strokeRect(p.ctxRect.left, p.ctxRect.top, p.ctxRect.right - p.ctxRect.left, p.ctxRect.bottom - p.ctxRect.top)\n        }\n        a.curr = prev\n      }\n\n      let controls: $me_atom2_control[]\n      if ($me_atom2_control._fill_controls_cache.has(control)) {\n        controls = $me_atom2_control._fill_controls_cache.get(control)\n      } else {\n        controls = []\n        const entities_control = control._entities.control\n        $me_atom2_control._fill_controls(controls, control._entities.control)\n        $me_atom2_control._fill_controls_cache.set(control, controls)\n      }\n      if (controls.length)\n        $me_atom2_control.render(\n          $me_atom2_control.zIndex_sort(controls),\n          pixelRatio,\n        )\n\n      // {\n      //   const prev = a.curr\n      //   a.curr = control\n      //   control_render_post_helper(p, control.cnf, control.bases)\n      //   a.curr = prev\n      // }\n\n      control.render_state = $me_atom2_control_render_state_enum.rendered\n    }\n    return count\n  }\n\n  private _render_helper(p: $me_atom2_control_render_p_intf, cnf: $me_atom2_control_cnf_intf) {\n    if (!cnf) return\n    // this._render_helper(p, this.base(cnf.base))\n    this._render_helper(p, cnf.base)\n    if (cnf.render) cnf.render(p)\n  }\n\n  // ===========================================\n\n  static zIndex_sort(ss: Set<$me_atom2_path> | Array<$me_atom2_control>, to_render = false) {\n    return (\n      Array.isArray(ss) ? ss :\n      [...ss].map(path => $me_atom2_entity.root().by_path(path) as $me_atom2_control)\n    )\n    .filter(control => control && control.active &&\n      (() => {\n        if (!control._entities.prop)\n          $me_throw(control.name());\n        return true\n      })() &&\n      (!to_render || (control._entities.prop['#visible'] as $me_atom2<boolean>).value()))\n    // .filter(name_control => $me_atom_entities.has(name_control))\n    // .sort((sa: string, sb: string) => {\n    //   const sav = $me_atom.get(sa + '.zIndex').value()\n    //   const sbv = $me_atom.get(sb + '.zIndex').value()\n    //   return to_render ? sav - sbv : sbv - sav\n    // })\n    // .map(name_control => $me_atom_entity_get(name_control))\n  }\n}\n\n// ============================================================================\n\nexport interface $me_atom2_control_clean_p_intf {\n  ctx: CanvasRenderingContext2D,\n  ctxRect: $me_rect_intf,\n}\n\nexport interface $me_atom2_control_render_p_intf {\n  self: $me_atom2_control,\n  ctx: CanvasRenderingContext2D,\n  pixelRatio: number,\n  ctxSize: $me_size_intf,\n  ctxRect: $me_rect_intf,\n  ctxWidth: number,\n  ctxHeight: number,\n}\n\n// ============================================================================\n}","namespace $.$$ {\n// ============================================================================\n\nexport interface $me_atom2_elem_cnf_intf\n  extends $me_atom2_ec_cnf_intf\n  {\n    node?: $me_atom2_elem_node_type,\n    style?: $me_atom2_prop_intf,\n    style_default?: $me_atom2_prop_intf,\n    dom?: $me_atom2_prop_intf,\n    dom_default?: $me_atom2_prop_intf,\n    attr?: $me_atom2_prop_intf,\n    attr_default?: $me_atom2_prop_intf,\n    elem?: $me_atom2_elem_intf,\n  }\n\nexport type $me_atom2_elem_node_type =\n  string | HTMLElement | $me_atom2_tag_ns_intf\n\nexport interface $me_atom2_tag_ns_intf {\n  tag: string,\n  ns: string,\n}\nexport interface $me_atom2_elem_intf {\n  [tail: string]: $me_atom2_prop_def<$me_atom2_elem_cnf_intf>,\n}\n\nexport interface $me_atom2_elem_p_intf\n  extends $me_atom2_ec_p_base_intf\n  {\n    cnf: $me_atom2_elem_cnf_intf,\n  }\n\nexport class $me_atom2_elem extends $me_atom2_ec {\n  static to_def = Array<$me_atom2_elem_p_intf>()\n  static style_default = <$me_atom2_prop_intf>{\n    position: () => 'absolute',\n  }\n  static attr_default: $me_atom2_prop_intf\n  static dom_default: $me_atom2_prop_intf\n\n  readonly node: HTMLElement\n  constructor (p: $me_atom2_elem_p_intf) {\n    super({\n      ...p,\n      ent: $me_atom2_entity_enum.elem,\n    })\n    const cnf_control = this._mk_controls()\n    const has_control = !!Object.keys(cnf_control).length\n\n    this.node = this._mk_node(has_control)\n\n    const cnf_elem = this._mk_elems()\n    const has_parent = !!p.parent\n    this._mk_props(\n      has_control,\n      !!cnf_elem,\n      has_parent,\n    )\n    this._mk_sad(has_parent)\n  }\n  private elem_parent(): $me_atom2_elem {\n    const parent = this._descendant(0, true) as $me_atom2_elem\n    return parent && parent.path.ent !== $me_atom2_entity_enum.root ? parent : null\n  }\n  protected _wait_for_child_did_helper() {\n    const parent = this.elem_parent()\n    if (parent) parent._add_child_to_reorder(this.path)\n  }\n  destroy() {\n    if (this.node) {\n      if (this.node == document.body) {\n        this.node.id = ''\n      } else {\n        const parent = this.node.parentElement\n        if (parent) {\n          if (!$me_atom2_elem._to_remove.has(parent))\n            $me_atom2_elem._to_remove.set(parent, new Set<Element>())\n          $me_atom2_elem._to_remove.get(parent).add(this.node)\n        }\n      }\n    }\n    super.destroy()\n  }\n  static _to_remove = new Map<Element, Set<Element>>()\n  static remove_children() {\n    let count = 0\n    for (const [parent, children] of $me_atom2_elem._to_remove)\n      for (const child of children) {\n        parent.removeChild(child)\n        count++\n      }\n    $me_atom2_elem._to_remove.clear()\n    return count\n  }\n  private _mk_node(has_control: boolean) {\n    const prev = a.curr\n    a.curr = this\n\n    const cnf_node = this.cnf_item('node') || (has_control ? 'canvas' : 'div')\n    const result =\n      cnf_node instanceof HTMLElement ?\n        cnf_node as HTMLElement :\n      typeof cnf_node == 'string' ?\n        document.createElement(cnf_node as string)  as HTMLElement :\n        document.createElementNS(\n          (cnf_node as $me_atom2_tag_ns_intf).ns,\n          (cnf_node as $me_atom2_tag_ns_intf).tag\n        ) as HTMLElement\n    if (has_control && result.tagName != 'CANVAS')\n      $me_throw(`${this.name()}: cnf.node (${cnf_node}) must be 'canvas' whilst using cnf.control` )\n    result.id = this.name()\n\n    a.curr = prev\n    return result\n  }\n  private _mk_elems() {\n    const prev = a.curr\n    a.curr = this\n\n    const cnf_elem = this.cnf_items<$me_atom2_prop_compute_only_def<$me_atom2_elem_cnf_intf>>('elem')\n    for (const tail in cnf_elem) {\n      const prop_def = cnf_elem[tail]\n      if (!prop_def) continue\n      const fn_apply: $me_atom2_apply_fn<$me_atom2_elem_cnf_intf> = ({prev, val, len_key, key, keys, key_enum, atom}) => {\n        let path_abs = new $me_atom2_path({ent: $me_atom2_entity_enum.elem, tail, path: this.path})\n        let path = new $me_atom2_path({ent: $me_atom2_entity_enum.elem, tail})\n        if (key) {\n          const ent = $me_atom2_entity_enum.key\n          for (const tail of (typeof key === 'string' ? [key as string] : key as string[])) {\n            path = new $me_atom2_path({ent, tail, path})\n            path_abs = new $me_atom2_path({ent, tail, path: path_abs})\n          }\n        }\n        if (prev && val && (prev === val || prev.type == val.type)) return\n        const elem = this.by_path(path) as $me_atom2_elem\n        if (elem instanceof $me_atom2_elem)\n          elem.destroy()\n        if (val) {\n          $me_atom2_elem.to_def.push({\n            cnf: val,\n            parent: this,\n            tail,\n            len_key,\n            key,\n            keys,\n            key_enum,\n          })\n          $me_atom2_async()\n        }\n        if (!this._isReady()) {\n          if (val) {\n            this._wait_for_child_do(path_abs.toString())\n          } else {\n            this._wait_for_child_did(path_abs.toString())\n          }\n          if (key)\n            this._wait_for_child_did(this.name() + '@' + tail)\n        }\n      }\n      const fn_key_idx_changed: $me_atom2_key_idx_changed_fn = pp => {\n        let path = new $me_atom2_path({ent: $me_atom2_entity_enum.elem, tail, path: this.path})\n        for (const tail of pp.key) {\n          path = new $me_atom2_path({ent: $me_atom2_entity_enum.key, tail, path})\n        }\n        const elem = $me_atom2_elem.by_path(path)\n        if (elem)\n          this._add_child_to_reorder(elem.path)\n        if ($me_debug) console.log(elem.path.toString())\n      }\n      $me_atom2.to_def.push($me_atom2_prop_def_prepare<$me_atom2_elem_cnf_intf>(\n        prop_def,\n        {\n          parent: this,\n          tail: '@' + tail,\n          fn_apply,\n          fn_key_idx_changed,\n        }\n      ))\n      this._wait_for_child_do(this.name() + '@' + tail)\n      $me_atom2_async()\n    }\n\n    a.curr = prev\n    return cnf_elem\n  }\n\n  fn_compute_order() {\n    const cnf_elem = (this.parent() as $me_atom2_elem).cnf_items<$me_atom2_prop_compute_only_def<$me_atom2_elem_cnf_intf>>('elem')\n    return Object.keys(cnf_elem)\n  }\n  fn_apply_order(p: $me_atom2_apply_fn_p_intf<string[]>) {\n    if (!p.val || p.prev && $me_equal(p.val, p.prev)) return\n    const elem = this.parent() as $me_atom2_elem\n    for (const child of elem.node.children)\n      elem._add_child_to_reorder($me_atom2_path.fromString(child.id) as $me_atom2_path)\n  }\n  fn_compute_visible(p: $me_atom2_compute_fn_p_intf<boolean, [boolean, boolean]>) {\n    const [hidden, visible] = p.masters\n    return !hidden && (!(this.parent() as $me_atom2_elem).elem_parent() || visible)\n  }\n  fn_compute_ctxSize(p: $me_atom2_compute_fn_p_intf<ctxSize_intf, [number, number, number]>) {\n    const [pixelRatio, width, height] = p.masters\n    return <ctxSize_intf>{\n      pixelRatio,\n      width: pixelRatio * width,\n      height: pixelRatio * height,\n    }\n  }\n  fn_apply_ctxSize(p: $me_atom2_apply_fn_p_intf<ctxSize_intf>) {\n    if (p.val)\n      (this.parent() as $me_atom2_elem).dom({\n        width: p.val.width,\n        height: p.val.height\n      })\n  }\n  fn_compute_left(p: $me_atom2_compute_fn_p_intf<number, [$me_align, number, number, number]>) {\n    const [alignHor, width_parent, width, ofsHor] = p.masters\n    const result =\n      alignHor === $me_align.left ? ofsHor :\n      alignHor === $me_align.right ? width_parent - width - ofsHor :\n      Math.floor((width_parent - width) / 2) + ofsHor\n    return result\n  }\n  fn_apply_left(p: $me_atom2_apply_fn_p_intf) {\n    if (p.val != null)\n      (p.atom.parent() as $me_atom2_elem).style({left: p.val})\n  }\n  fn_compute_clientRect(p: $me_atom2_compute_fn_p_intf<$me_rect_intf>) {\n    const elem = p.atom.parent() as $me_atom2_elem\n    const {left, top, right, bottom} = elem.node.getBoundingClientRect()\n    const result = <$me_rect_intf>{left, top, right, bottom}\n    return result\n  }\n  fn_apply_clientRect(p: $me_atom2_apply_fn_p_intf<$me_rect_intf>) {\n    const elem = (this.parent() as $me_atom2_elem)\n    if (p.val == null) return\n    if (elem.node.style.width == 'auto') {\n      const atom_prop = elem._entities.prop['#width'] as $me_atom2\n      elem.skipStyle = true\n      atom_prop.value(Math.round(p.val.right - p.val.left))\n      elem.skipStyle = false\n    }\n    if (elem.node.style.height == 'auto') {\n      const atom_prop = elem._entities.prop['#height'] as $me_atom2\n      elem.skipStyle = true\n      atom_prop.value(Math.round(p.val.bottom - p.val.top))\n      elem.skipStyle = false\n    }\n    if ($me_atom2_event_mousemove_last && !$me_atom2_event_mousemove_to_process) {\n      $me_atom2_event_mousemove_to_process = $me_atom2_event_mousemove_last\n      $me_atom2_async()\n    }\n  }\n  private skipStyle = false\n  fn_apply_top(p: $me_atom2_apply_fn_p_intf) {\n    if (p.val != null)\n      (this.parent() as $me_atom2_elem).style({top: p.val})\n  }\n  fn_apply_width(p: $me_atom2_apply_fn_p_intf) {\n    (this.parent() as $me_atom2_elem).style({width: p.val == null ? 'auto' : p.val})\n  }\n  fn_apply_height(p: $me_atom2_apply_fn_p_intf) {\n    (this.parent() as $me_atom2_elem).style({height: p.val == null ? 'auto' : p.val})\n  }\n  fn_apply_zIndex(p: $me_atom2_apply_fn_p_intf) {\n    if (p.prev != null)\n      $me_atom2_event_handlers = null\n  }\n  fn_compute_style_visible(p: $me_atom2_compute_fn_p_intf<string, [boolean]>) {\n    const [visible] = p.masters\n    return visible ? 'visible' : 'hidden'\n  }\n  fn_compute_style(p: $me_atom2_compute_fn_p_intf<$me_atom2_prop_intf>) {\n    return (p.atom.parent() as $me_atom2_elem).cnf_items<$me_atom2_prop_def>('style')\n  }\n  fn_compute_attr(p: $me_atom2_compute_fn_p_intf<$me_atom2_prop_intf>) {\n    return (p.atom.parent() as $me_atom2_elem).cnf_items<$me_atom2_prop_def>('attr')\n  }\n  fn_compute_dom(p: $me_atom2_compute_fn_p_intf<$me_atom2_prop_intf>) {\n    return (p.atom.parent() as $me_atom2_elem).cnf_items<$me_atom2_prop_def>('dom')\n  }\n  static _fn_apply_cache = <{\n    [src: string]: {\n      [prop: string]: $me_atom2_apply_fn<string>,\n    }\n  }>{}\n  static fn_apply(src: string, tail: string) {\n    if (!$me_atom2_elem._fn_apply_cache[src])\n      $me_atom2_elem._fn_apply_cache[src] = {}\n    if (!$me_atom2_elem._fn_apply_cache[src][tail])\n      $me_atom2_elem._fn_apply_cache[src][tail] = function(p: $me_atom2_apply_fn_p_intf<string>) {\n        (p.atom._descendant(1) as $me_atom2_elem)[src]({ [tail]: p.val })\n      }\n    return $me_atom2_elem._fn_apply_cache[src][tail]\n  }\n  private _mk_props(\n    has_control: boolean,\n    has_elem: boolean,\n    has_parent: boolean,\n  ) {\n    const prev = a.curr\n    a.curr = this\n\n    const {defaults, defaults_relative} = this._prepare(\n      'prop_default',\n      $me_atom2_entity_enum.elem,\n      $me_atom2_elem.prop_default || {}\n    )\n    const prop_defined = this.props([\n      this.cnf_items<$me_atom2_prop_def>('prop'),\n      defaults,\n      defaults_relative,\n      {\n        '#hidden': $me_atom2.fn_compute_false,\n        '#zIndex': has_parent ? '<.#zIndex' : $me_atom2.fn_compute_zero,\n        ...(!has_elem ? {} : {\n          '#order': this.fn_compute_order,\n        }),\n        '#isHover': () => false,\n      },\n      {\n        '#_isReady': () => false,\n        '#isReady': $me_atom2_prop<boolean>(['<.#isReady', '.#_isReady'],\n          $me_atom2_prop_compute_fn_and(),\n          ({val}) => {\n            if (val) $me_atom2_ec._to_init.push(this.path)\n          },\n        ),\n        '#_cursor': $me_atom2_prop<string>(['.#isHover', '.#cursor'],\n          // ({masters: [isHover, cursor]}) => !isHover ? 'default' : cursor,\n          ({masters: [isHover, cursor]}) => !isHover ? null : cursor,\n          ({atom, val}) => {\n            $me_atom2_ec_body_cursor({origin: atom.path, val: val})\n          },\n        ),\n        '#visible': $me_atom2_prop<boolean>(\n          // TODO: instead use '#_hidden': ['<.#hidden', '.#hidden'], $me_atom2_prop_compute_fn_and, and optimization for \"and\"\n          ['.#hidden'].concat(!has_parent ? [] : ['<.#visible']),\n          this.fn_compute_visible\n        ),\n        '#clientRect': $me_atom2_prop<$me_rect_intf>(['.#isReady'],\n          this.fn_compute_clientRect,\n          this.fn_apply_clientRect,\n        ),\n        ...(!has_control ? {} : {\n          '#ctx': () => (this.node as HTMLCanvasElement).getContext('2d'),\n          '#ctxSize': $me_atom2_prop<ctxSize_intf, [number, number, number]>(\n            ['/.#pixelRatio', '.#width', '.#height'],\n            this.fn_compute_ctxSize,\n            this.fn_apply_ctxSize,\n          ),\n        }),\n        '#left': $me_atom2_prop<number, [$me_align, number, number, number]>(\n          ['.#alignHor', '<.#width', '.#width', '.#ofsHor'],\n          this.fn_compute_left,\n          this.fn_apply_left,\n        ),\n        '#top': $me_atom2_prop<number, [$me_align, number, number, number]>(\n          ['.#alignVer',\n          '<.#height', '.#height', '.#ofsVer'],\n          this.fn_compute_left,\n          this.fn_apply_top,\n        ),\n      },\n    ], {\n      def: ({tail, prop_def, prop_defined, p, idx, len}) => {\n        if (\n          this.cnf.skip_root_defaults && (\n            tail.startsWith('#') && !(\n              tail == '#_isReady' ||\n              tail == '#isReady' ||\n              tail == '#clientRect' ||\n              tail == '#order' ||\n              false\n          )\n        ))\n          return null\n\n        if (tail == '#order') {\n          p.fn_apply = this.fn_apply_order\n          return $me_atom2_prop_def_prepare<string[]>(prop_def, p)\n        } else if (tail == '#width') {\n          p.fn_apply = this.fn_apply_width\n          return $me_atom2_prop_def_prepare(prop_def, p)\n        } else if (tail == '#height') {\n          p.fn_apply = this.fn_apply_height\n          return $me_atom2_prop_def_prepare(prop_def, p)\n        } else if (tail == '#zIndex') {\n          p.fn_apply = this.fn_apply_zIndex\n          return $me_atom2_prop_def_prepare(prop_def, p)\n        } else if (idx === len - 2 && tail == '#isHover') {\n          if (prop_defined['#cursor'] === void 0) return null\n        } else if (idx === len - 1 && tail == '#_cursor') {\n          // console.log(this.name())\n          if (prop_defined['#cursor'] === void 0) return null\n        // } else if (idx === len - 1 && tail == '#clientRect') {\n        //   p.fn_apply =\n        //     prop_defined['#isHover'] === void 0 ? null :\n        //     this.fn_apply_clientRect\n        //   return $me_atom2_prop_def_prepare<string[]>(prop_def, p)\n        }\n      },\n      dup: ({tail, prop_defined, idx, len}) => {\n        if (idx === len - 1)\n          $me_throw(`${this.name()}: .${tail} reserved for internal use` + (tail !== '#visible' ? '' : ', use .#hidden instead'))\n      }\n    })\n    if (!this.cnf.skip_root_defaults)\n      for (const prop of ['#width', '#height', '#alignHor', '#alignVer', '#ofsHor', '#ofsVer'])\n        if (prop_defined[prop] === void 0)\n          $me_throw(`${this.name()}: requires .${prop} to be defined`)\n\n    a.curr = prev\n  }\n  private _mk_sad(has_parent: boolean) {\n    const prev = a.curr\n    a.curr = this\n\n    for (const src of ['style', 'attr', 'dom']) {\n      $me_atom2.to_def.push(<$me_atom2_def_compute_apply_intf<$me_atom2_prop_intf>>{\n        tail: src,\n        parent: this,\n        masters: null,\n        fn_compute: src === 'style' ? this.fn_compute_style : src === 'attr' ? this.fn_compute_attr : this.fn_compute_dom,\n        fn_apply: src === 'style' ? this.fn_apply_style : src === 'attr' ? this.fn_apply_attr : this.fn_apply_dom,\n      })\n      this.wait($me_atom2_entity_enum.prop, src)\n    }\n    a.curr = prev\n  }\n  private fn_apply_style(p: $me_atom2_apply_fn_p_intf<$me_atom2_prop_intf>) {\n    (this.parent() as $me_atom2_elem).sad_apply('style', p)\n  }\n  private fn_apply_attr(p: $me_atom2_apply_fn_p_intf<$me_atom2_prop_intf>) {\n    (this.parent() as $me_atom2_elem).sad_apply('attr', p)\n  }\n  private fn_apply_dom(p: $me_atom2_apply_fn_p_intf<$me_atom2_prop_intf>) {\n    (this.parent() as $me_atom2_elem).sad_apply('dom', p)\n  }\n  private sad_apply(src: 'style' | 'attr' | 'dom', p: $me_atom2_apply_fn_p_intf<$me_atom2_prop_intf>) {\n    const parent = p.atom\n    const val = p.val as $me_atom2_prop_intf\n    const prop_defined = <{[tail: string]: number}>{}\n    if (src === 'style') {\n      const tail = 'visibility'\n      $me_atom2.to_def.push(<$me_atom2_def<string>>{\n        tail,\n        parent,\n        masters: ['.#visible'],\n        fn_apply: $me_atom2_elem.fn_apply(src, tail\n          // , this\n          )\n      })\n    }\n\n    // TODO: use following instead of down\n    // const prop_defined = atom.props(val, {\n    //   def: ({tail, prop_def, p}) =>\n    //     $me_atom2_prop_def_prepare<any>(prop_def, {...p,\n    //       fn_apply: ({val}) => {\n    //         this[src]({ [tail]: val })\n    //       }\n    //     })\n    // })\n\n    let idx_curr = 0\n\n    const {defaults, defaults_relative} = this._prepare(\n      src + '_default',\n      $me_atom2_entity_enum.elem,\n      $me_atom2_elem[src + '_default'] || {}\n    )\n    for (const props of [val, defaults, defaults_relative]) {\n      if (src === 'style') {\n        const reserved = {\n          visibility: '.#hidden',\n          left: '.#alignHor + .#ofsHor',\n          top: '.#alignVer + .#ofsVer',\n          width: '.#width',\n          height: '.#height',\n        }\n        for (const tail in reserved)\n          if (props[tail])\n            $me_throw(`${this.name()}: .style.${tail} is reserved for internal use, use ${reserved[tail]} instead`)\n      }\n      for (const tail in props)\n        if (props[tail])\n          if (src === 'style' && tail === 'visibility') {\n            $me_throw(`${this.name()}: .style.visibility is reserved for internal use, use .#hidden instead`)\n          } else if (prop_defined[tail] === void 0) {\n            $me_atom2.to_def.push($me_atom2_prop_def_prepare(\n              props[tail],\n              {\n                tail,\n                parent,\n                fn_apply: $me_atom2_elem.fn_apply(src, tail),\n              }\n            ))\n            parent.wait($me_atom2_entity_enum.prop, tail)\n            if (src === 'style') prop_defined[tail] = idx_curr\n          }\n      idx_curr++\n    }\n  }\n\n  private style(p: {[prop: string]: string | number}, immediatly = false) {\n    this._lazy_prop_set('s', p, immediatly)\n  }\n  private dom(p: {[prop: string]: any}, immediatly = false) {\n    this._lazy_prop_set('d', p, immediatly)\n  }\n  private attr(p: {[prop: string]: any}, immediatly = false) {\n    this._lazy_prop_set('a', p, immediatly)\n  }\n  private static _lazy_prop_clientRect_cache: {[s: string]: boolean}\n  private static _lazy_prop_clientRect(t: string, prop: string) {\n    if (!$me_atom2_elem._lazy_prop_clientRect_cache) {\n      $me_atom2_elem._lazy_prop_clientRect_cache = {}\n      for (const prop of ['width', 'height', 'left', 'top', 'transform', 'position', 'fontSize'])\n        $me_atom2_elem._lazy_prop_clientRect_cache['s' + prop] = true\n    }\n    return !!$me_atom2_elem._lazy_prop_clientRect_cache[t + prop]\n  }\n  private _lazy_prop_set(t: lazy_prop_kind_type, props: {[prop: string]: any}, immediatly = false) {\n    if (this.skipStyle) return\n    if (immediatly) {\n      for (const prop in props)\n        $me_atom2_elem._lazy_prop_apply_helper(this.node, t, prop, props[prop])\n    } else {\n      for (let prop in props) {\n        if (t == 's' && prop == 'zoom')\n          $me_throw(`${this.name()}: using .style.zoom is prohibited due to https://stackoverflow.com/questions/44277435/css-zoom-property-not-working-with-boundingclientrectangle`)\n        this._lazy_prop_set_helper(\n          $me_atom2_elem._lazy_prop_clientRect(t, prop) ?\n            $me_atom2_elem._lazy_prop_to_apply_clientRect :\n            $me_atom2_elem._lazy_prop_to_apply,\n          t, prop, props[prop]\n        )\n      }\n      $me_atom2_async()\n    }\n  }\n  private _lazy_prop_set_helper(\n    lazy_prop_to_apply: Map<$me_atom2_path, lazy_prop_intf>,\n    t: lazy_prop_kind_type,\n    prop: string,\n    val: any,\n  ) {\n    if (!lazy_prop_to_apply.has(this.path))\n      lazy_prop_to_apply.set(this.path, new Map<string, any>())\n    const o = lazy_prop_to_apply.get(this.path)\n    o[t + prop] = val\n  }\n  static lazy_prop_apply_did() {\n    const result =\n      !$me_atom2_elem._lazy_prop_to_apply.size &&\n      !$me_atom2_elem._lazy_prop_to_apply_clientRect\n    return result\n  }\n  private static _lazy_prop_to_apply = new Map<$me_atom2_path, lazy_prop_intf>()\n  private static _lazy_prop_to_apply_clientRect = new Map<$me_atom2_path, lazy_prop_intf>()\n  static lazy_prop_apply_all() {\n    let count = 0\n    // if (!$me_atom2.static_active()) return count\n    count += $me_atom2_elem._lazy_prop_apply($me_atom2_elem._lazy_prop_to_apply)\n    count += $me_atom2_elem._lazy_prop_apply($me_atom2_elem._lazy_prop_to_apply_clientRect)\n    return count\n  }\n  private static _lazy_prop_apply(lazy_prop_to_apply: Map<$me_atom2_path, lazy_prop_intf>) {\n    let count = 0\n    // const tails = {} as any\n    if (lazy_prop_to_apply.size) {\n      for (const [path, elem_props] of lazy_prop_to_apply) {\n        const elem = $me_atom2_elem.by_path<$me_atom2_elem>(path)\n        if (elem) {\n          const node = elem.node\n    // if (node.id.startsWith('/@app@workspace@search@panelResult@grid@row[')) console.log(node.id, elem_props)\n    // if (node.id == '/@app@workspace@search@panelResult@grid@row[17]') {\n    //   console.warn(elem_props)\n    //   // debugger\n    // }\n\n          // console.log(elem_props)\n          // let skipLeftTop = false\n          // let saveLeftTop = false\n          // if (\n          //   elem_props['sleft'] !== void 0 ||\n          //   elem_props['stop'] !== void 0 ||\n          //   elem_props['sposition'] !== void 0\n          // ) {\n          //   const elem = $me_atom2_entity.root().by_path_s(node.id) as $me_atom2_elem\n\n          //   const prop = elem._entities.prop\n          //   let position: string\n          //   let left: number\n          //   let top: number\n\n          //   const style_entities = (prop.style as $me_atom2)._entities\n          //   if (style_entities) {\n          //     const style_prop = style_entities.prop\n          //     if (prop) {\n          //       const prop_position = style_prop.position\n          //       if (prop_position) position = (prop_position as $me_atom2<string>).value()\n          //       const prop_left = prop['#left']\n          //       if (prop_left) left = (prop_left as $me_atom2).value()\n          //       const prop_top = prop['#top']\n          //       if (prop_top) top = (prop_top as $me_atom2).value()\n          //     }\n          //   }\n          //   // if (position == 'absolute') console.warn(elem.name(), position, left, top)\n\n          //   if (position == 'absolute' && left != null && top != null) {\n          //     $me_atom2_elem._lazy_prop_apply_helper(node, 's', 'position', position)\n          //     $me_atom2_elem._lazy_prop_apply_helper(node, 's', 'top', '')\n          //     $me_atom2_elem._lazy_prop_apply_helper(node, 's', 'left', '')\n          //     $me_atom2_elem._lazy_prop_apply_helper(node, 's', 'transform', `translate(${left}px, ${top}px)`)\n          //     delete elem_props['sleft']\n          //     delete elem_props['stop']\n          //     delete elem_props['sposition']\n          //     // const left = (prop['#left'] as $me_atom2).value()\n          //     // const top = (prop['#top'] as $me_atom2).value()\n          //     // node.style.left = '0px'\n          //     // node.style.top = '0px'\n          //     // if (left || top) {\n          //     //   node.style.transform = `translate(${left}px, ${top}px)`\n          //     //   count++\n          //     // }\n          //     // skipLeftTop = true\n          //   // } else if (!position) {\n          //   //   skipLeftTop = true\n          //   //   saveLeftTop = true\n          //   //   // if (node.id == '/@app@workspace@search@panelResult@grid@row[0]@content@cells') console.warn(node.id, position, elem._entities)\n          //   // } else {\n          //   //   console.log(elem.name(), position)\n          //   }\n          // }\n          // console.log(elem.name(), elem_props)\n\n          for (const prop in elem_props) {\n            // if (skipLeftTop && (prop == 'sleft' || prop == 'stop')) continue\n            $me_atom2_elem._lazy_prop_apply_helper(\n              node,\n              prop.slice(0, 1) as lazy_prop_kind_type,\n              prop.slice(1),\n              elem_props[prop],\n            )\n            count++\n            // if (saveLeftTop) delete elem_props[prop]\n          }\n          if (\n            (lazy_prop_to_apply === $me_atom2_elem._lazy_prop_to_apply_clientRect) ||\n            (elem.node.style.width == 'auto' || elem.node.style.height == 'auto') && (\n              elem_props['sfontSize'] !== void 0 ||\n              elem_props['dinnerText'] !== void 0\n            )\n          ) {\n            // if (elem.name() == '/@app@workspace@search@new@panel[Продажа]@table[Москва]@row[Квартиры]') console.log({...elem_props})\n            elem.invalidateClientRect()\n          }\n          // if (!saveLeftTop)\n          lazy_prop_to_apply.delete(path)\n        }\n      }\n      // console.warn([...lazy_prop_to_apply].map(([path, val]) => [path.toString(), {...val}]))\n      // console.log(lazy_prop_to_apply)\n      // lazy_prop_to_apply.clear()\n    }\n    // if (count) console.warn(tails)\n    return count\n  }\n  private static _lazy_prop_apply_helper(node: HTMLElement, t: lazy_prop_kind_type, prop: string, val: any) {\n    // if (node.id.startsWith('/@app@workspace@search@panelResult@grid@row[')) console.log(node.id, t, prop, val)\n    if (t == 'd') {\n      node[prop] = val\n    } else if (t == 'a') {\n      node.setAttribute(prop, val)\n    } else {\n      if (Number.isFinite(val)) {\n        if (prop === 'opacity' || prop === 'fontWeight') { val += '' }\n        else if ($me_atom2_elem._lazy_prop_style_px(prop)) { val += 'px'}\n      } else if (typeof val === 'boolean') {\n        if (prop === 'visibility') { val = val ? 'visible' : 'hidden' }\n      }\n      if (typeof val != 'string') $me_throw(`prop: ${prop}, val: ${val}`, {prop, val, node})\n      node.style[prop] = val\n    }\n  }\n  private static _lazy_prop_style_px_cache: {[prop: string]: boolean}\n  private static _lazy_prop_style_px(prop: string) {\n    if (!$me_atom2_elem._lazy_prop_style_px_cache) {\n      $me_atom2_elem._lazy_prop_style_px_cache = {}\n      const pxStyleProps = ['width', 'height', 'fontSize', 'lineHeight', 'maxWidth', 'borderRadius', 'borderWidth']\n      const sides = ['left', 'top', 'right', 'bottom']\n      pxStyleProps.push(...sides)\n      pxStyleProps.push('margin')\n      pxStyleProps.push('padding')\n      sides.forEach(side => {\n        side = side.charAt(0).toUpperCase() + side.slice(1)\n        pxStyleProps.push('margin' + side)\n        pxStyleProps.push('padding' + side)\n      })\n      for (let i of pxStyleProps) $me_atom2_elem._lazy_prop_style_px_cache[i] = true\n    }\n    return !!$me_atom2_elem._lazy_prop_style_px_cache[prop]\n  }\n  // static children_to_add = <{\n  //   [id: string]: Set<$me_atom2_path>\n  // }>{}\n  static children_to_add = new Map<$me_atom2_path, Set<$me_atom2_path>>()\n  private _add_child_to_reorder(path_child: $me_atom2_path) {\n    const id = this.node.id\n    if (!$me_atom2_elem.children_to_add.has(this.path))\n      $me_atom2_elem.children_to_add.set(this.path, new Set<$me_atom2_path>())\n    $me_atom2_elem.children_to_add.get(this.path).add(path_child)\n    // const item = (\n    //   $me_atom2_elem.children_to_add[id] ||\n    //   ($me_atom2_elem.children_to_add[id] = new Set<$me_atom2_path>())\n    // )\n    // item.add(path_child)\n    // console.warn(path_elem.toString())\n    $me_atom2_async()\n  }\n  static reorder_children() {\n    let count = 0\n    // if (Object.keys($me_atom2_elem.children_to_add).length) console.warn(Object.keys($me_atom2_elem.children_to_add))\n    for (const [path_parent, paths] of $me_atom2_elem.children_to_add) {\n            // console.warn(id_parent)\n      // const node_parent = document.getElementById(id_parent)\n      const parent = $me_atom2_entity.root().by_path(path_parent) as $me_atom2_elem\n      if (!(parent instanceof $me_atom2_elem)) continue\n      const node_parent = parent.node\n      if (node_parent) {\n        // const paths = $me_atom2_elem.children_to_add[id_parent]\n        const sb = <{[path_s: string]: boolean}>{}\n        for (const path of paths)\n          sb[path.toString()] = true\n        for (const child of [...node_parent.children])\n          if (sb[child.id]) {\n            node_parent.removeChild(child)\n            count++\n          }\n        const order = (parent._entities.prop['#order'] as $me_atom2<string[]>).value()\n        const key_enum_store = <key_enum_store>{}\n        for (const path of paths) {\n          const elem = $me_atom2_elem.by_path<$me_atom2_elem>(path)\n          if (elem) {\n            elem._add_as_child(node_parent, order, key_enum_store)\n            count++\n            if (!parent._isReady())\n              parent._wait_for_child_did(elem.name())\n          }\n        }\n      }\n      $me_atom2_elem.children_to_add.delete(path_parent)\n    }\n    return count\n  }\n  private _add_as_child(\n    node_parent: HTMLElement,\n    order: string[],\n    key_enum_store: key_enum_store,\n  ) {\n    const node_child = this.node\n    const id = node_child.id\n    const name_elem = $me_atom2_elem._elem_name(id)\n    const name_strip = $me_atom2_elem._parse(name_elem)[0]\n    const idx_curr = $me_atom2_elem._indexOf(order, name_elem, name_strip, key_enum_store, id)\n    if (idx_curr < 0 || idx_curr >= order.length || node_parent.children.length === 0) {\n      node_parent.appendChild(node_child)\n    } else {\n      const children = node_parent.children\n      let node_after: Element// = children[children.length - 1]\n      let i_min = 0\n      let i_max = children.length - 1\n      let i_mid: number\n      let child: Element\n      let idx: number\n      {\n        child = children[i_min]\n        idx = $me_atom2_elem._indexOf(order, $me_atom2_elem._elem_name(child.id), name_strip, key_enum_store, id)\n        if (idx > idx_curr) {\n          node_after = child\n        } else {\n          if (i_max != i_min) {\n            child = children[i_max]\n            idx = $me_atom2_elem._indexOf(order, $me_atom2_elem._elem_name(child.id), name_strip, key_enum_store, id)\n          }\n          if (idx > idx_curr) {\n            node_after = child\n            while (i_max - i_min >= 2) {\n              const i_mid = Math.floor((i_max + i_min) / 2)\n              child = children[i_mid]\n              idx = $me_atom2_elem._indexOf(order, $me_atom2_elem._elem_name(child.id), name_strip, key_enum_store, id)\n              if (idx < idx_curr) {\n                i_min = i_mid\n              } else {\n                i_max = i_mid\n                node_after = child\n              }\n            }\n          }\n        }\n      }\n      if (null == node_after) {\n        node_parent.appendChild(node_child)\n      } else {\n        node_parent.insertBefore(node_child, node_after)\n      }\n    }\n  }\n  private static _indexOf(\n    order: string[],\n    s: string,\n    name_strip: string,\n    key_enum_store: key_enum_store,\n    id: string,\n  ) {\n    let result = order.indexOf(s)\n    if (result < 0) {\n      result = order.length\n      if (s.indexOf('[') > 0) {\n        const len = order.length\n        const parsed_s = $me_atom2_elem._parse(s)\n        const matches = <{[i: string]: number[]}>{}\n        LOOP: for (let i = 0; i < len; i++) {\n          const parsed_so = $me_atom2_elem._parse(order[i])\n          if (parsed_s[0] != parsed_so[0]) continue\n          const j_max = Math.min(parsed_s.length, parsed_so.length) - 1\n          matches[i] = []\n          for (let j = 1; j <= j_max; j++) {\n            if (parsed_s[j] == parsed_so[j]) {\n              matches[i].push(j)\n            } else if (parsed_so[j]) {\n              delete matches[i]\n              continue LOOP\n            }\n          }\n        }\n        const best = Object.keys(matches)\n          .map((i: string) => ({idx_curr: +i, matches: matches[i]}))\n          .sort((ia: any, ib: any) => ib.matches.length - ia.matches.length)\n          .reduce((result, item, idx_curr) => {\n            if (!idx_curr) {\n              result = item\n            } else if (result.matches.length === item.matches.length) {\n              const len = result.matches.length\n              for (let i = 0; i < len; i++) {\n                if (result[i] <= item[i]) continue\n                result = item\n                break\n              }\n            }\n            return result\n          }, null)\n        if (best) {\n          result = best.idx_curr\n          const parsed_so = $me_atom2_elem._parse(order[best.idx_curr])\n          if (name_strip == parsed_so[0]) {\n            const key_enum = $me_atom2_elem._get_key_enum(key_enum_store, name_strip, id)\n            if (key_enum) {\n              const len = key_enum.length\n              let ord = 0, n = 1\n              for (let i = 0; i < len; i++)\n                if (best.matches.indexOf(i + 1) < 0) {\n                  ord = ord * key_enum[i].length + key_enum[i].indexOf(parsed_s[i + 1])\n                  n = n * key_enum[i].length\n                }\n              result += ord / n\n            }\n          }\n        }\n      }\n    }\n    return result\n  }\n  private static _get_key_enum(key_enum_store: key_enum_store, name_strip: string, id: string) {\n    let result = key_enum_store[name_strip]\n    if (result === void 0) {\n      let path = $me_atom2_path.fromString(id) as $me_atom2_path\n      while (path.ent === $me_atom2_entity_enum.key) path = path.path\n      const elem_parent = $me_atom2_entity.by_path<$me_atom2_elem>(path.path)\n      const atom = elem_parent.by_path(new $me_atom2_path({ent: $me_atom2_entity_enum.prop, tail: '@' + path.tail})) as $me_atom2\n      result = key_enum_store[name_strip] = atom.key_enum()\n    }\n    return result\n  }\n  private static _parse(s: string) {\n    let pos_s = s.length - 1\n    let i\n    let result: string[] = []\n    while ((i = s.lastIndexOf('[', pos_s)) > 0) {\n      result.unshift(s.slice(i + 1, pos_s))\n      pos_s = i - 1\n    }\n    result.unshift(s.slice(0, pos_s + 1))\n    return result\n  }\n  private static _elem_name(elem_id: string) {\n    return elem_id.slice(elem_id.lastIndexOf('@') + 1)\n  }\n}\n\ninterface key_enum_store {\n  [name_strip: string]: string[][],\n}\n\ntype lazy_prop_kind_type = 's' | 'a' | 'd'\n\ninterface lazy_prop_intf {\n  [p: string]: any\n}\n\ninterface ctxSize_intf {\n  pixelRatio: number,\n  width: number,\n  height: number,\n}\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nconst event_names = [\n  'touchstart',\n  'touchmove',\n  'touchend',\n\n  'mousedown',\n  'mousemove',\n  'mouseup',\n\n  'pinchInit',\n  'pinch',\n  'pinchFini',\n\n  'wheel',\n\n  'wheelTouchInit',\n  'wheelTouch',\n  'wheelTouchFini',\n\n  'wheelDragInit',\n  'wheelDrag',\n  'wheelDragFini',\n\n  'click',\n  'tap',\n  'clickOrTap',\n  'clickOrTapOutside',\n  'clickOutside',\n  'tapOutside',\n  // NOTE: without 'keydown/keyup', they have special processing\n]\n\nexport interface $me_atom2_event_intf {\n  mousedown?: $me_atom2_event_def<MouseEvent>,\n  mousemove?: $me_atom2_event_def<MouseEvent>,\n  mouseup?: $me_atom2_event_def<MouseEvent>,\n\n  pinchInit?: $me_atom2_event_def<$me_atom2_event_pinch_intf>,\n  pinch?: $me_atom2_event_def<$me_atom2_event_pinch_intf>,\n  pinchFini?: $me_atom2_event_def<$me_atom2_event_pinch_intf>,\n\n  wheel?: $me_atom2_event_def<$me_atom2_event_wheel_intf>,\n\n  wheelTouchInit?: $me_atom2_event_def<$me_atom2_event_wheel_touch_intf>,\n  wheelTouch?: $me_atom2_event_def<$me_atom2_event_wheel_touch_intf>,\n  wheelTouchFini?: $me_atom2_event_def<$me_atom2_event_wheel_touch_intf>,\n\n  wheelDragInit?: $me_atom2_event_def<$me_atom2_event_wheel_drag_intf>,\n  wheelDrag?: $me_atom2_event_def<$me_atom2_event_wheel_drag_intf>,\n  wheelDragFini?: $me_atom2_event_def<$me_atom2_event_wheel_drag_intf>,\n\n  touchstart?: $me_atom2_event_def<TouchEvent>,\n  touchmove?: $me_atom2_event_def<TouchEvent>,\n  touchend?: $me_atom2_event_def<TouchEvent>,\n\n  click?: $me_atom2_event_def<$me_atom2_event_click_intf>,\n  clickOutside?: $me_atom2_event_def<$me_atom2_event_click_intf>,\n\n  tap?: $me_atom2_event_def<$me_atom2_event_tap_intf>,\n  tapOutside?: $me_atom2_event_def<$me_atom2_event_tap_intf>,\n  clickOrTap?: $me_atom2_event_def<$me_atom2_event_clickOrTap_intf>,\n\n  clickOrTapOutside?: $me_atom2_event_def<$me_atom2_event_clickOrTap_intf>,\n  keydown?: $me_atom2_event_keyboard_fn,\n  keyup?: $me_atom2_event_keyboard_fn,\n}\n\nexport type $me_atom2_event_def<Event> =\n  $me_atom2_event_fn<Event> | $me_atom2_event_def_intf<Event>\n\nexport interface $me_atom2_event_def_intf<Event> {\n  fn: $me_atom2_event_fn<Event>,\n  zIndex?: $me_atom2_prop_compute_only_def,\n}\n\nexport type $me_atom2_event_keyboard_fn =\n  (p: $me_atom2_event_keyboard_p_intf) => boolean\n\nexport type $me_atom2_event_fn<Event> =\n  (p: $me_atom2_event_p_intf<Event>) => boolean\n\n  export interface $me_atom2_event_click_intf {\n  start: MouseEvent,\n  end: MouseEvent,\n}\n\nexport interface $me_atom2_event_tap_intf {\n  start: TouchEvent,\n  end: TouchEvent,\n}\n\nexport interface $me_atom2_event_clickOrTap_intf {\n  start: MouseEvent | TouchEvent,\n  end: MouseEvent | TouchEvent,\n}\n\nexport interface $me_atom2_event_p_intf<Event> {\n  event: Event,\n  isInRect: (clientX: number, clientY: number) => boolean,\n  distToRect: (clientX: number, clientY: number) => number,\n}\n\nexport interface $me_atom2_event_keyboard_p_intf {\n  event: KeyboardEvent\n}\n\ninterface wheel_intf {\n  _deltaX?: number\n  _deltaY?: number\n}\nexport interface $me_atom2_event_wheel_intf extends\n  WheelEvent,\n  wheel_intf\n  {}\n\nexport interface $me_atom2_event_wheel_touch_intf extends wheel_intf {\n  mode: $me_atom2_wheel_synth_mode,\n  start: TouchEvent,\n  last: TouchEvent,\n  end: TouchEvent,\n}\n\nexport interface $me_atom2_event_wheel_drag_intf extends wheel_intf {\n  mode: $me_atom2_wheel_synth_mode,\n  start: MouseEvent,\n  last: MouseEvent,\n  end: MouseEvent,\n}\n\nexport interface $me_atom2_event_pinch_intf {\n  start: TouchEvent,\n  end: TouchEvent,\n  distInitial: number,\n  distCurrent: number,\n  scale: number,\n  center: $me_point_intf,\n}\n\n// ============================================================================\n\nexport enum $me_atom2_wheel_synth_mode { justStarted, init, move, end, fini }\n\n// ============================================================================\n\nexport const $me_atom2_event_wheel_y_is = (event: {_deltaX?: number, _deltaY?: number}) =>\n  Math.abs(event._deltaX) < Math.abs(event._deltaY)\n\nexport const $me_atom2_event_wheel_x_is = (event: {_deltaX?: number, _deltaY?: number}) =>\n  Math.abs(event._deltaX) > Math.abs(event._deltaY)\n\n// ============================================================================\n\nexport let $me_atom2_event_mousemove_to_process: MouseEvent\nexport let $me_atom2_event_mousemove_last: MouseEvent\nexport let $me_atom2_event_wheel_to_process: $me_atom2_event_wheel_intf\n// export let $me_atom2_event_wheel_touch_to_process: $me_atom2_event_wheel_touch_intf\nexport let $me_atom2_event_handlers : Map<string, $me_atom2_event_handlers_queue_type>\nexport interface $me_atom2_event_tap_target_intf {\n  ec: $me_atom2_ec,\n  dist: number,\n  event: TouchEvent,\n}\n\nlet click : Set<$me_atom2_path>\nlet startClick: MouseEvent\nexport let $me_atom2_event_tap: Map<$me_atom2_path, number>\nlet startTap: TouchEvent\nlet hoverCurr: Set<$me_atom2_path>\nlet hoverPrev: Set<$me_atom2_path>\n\nfunction _event_add<Event>(ec: $me_atom2_ec, name_event: string, events?: $me_atom2_event_intf) {\n  let name_atom: string, fn: $me_atom2_event_fn<any>\n  if (events) {\n    const event_def = events[name_event]\n    fn = typeof event_def === 'function' ?\n      (event_def as $me_atom2_event_fn<any>) :\n      (event_def as $me_atom2_event_def_intf<any>).fn\n  }\n  let s: string\n  if (!ec._entities) $me_throw(ec.name(), ec.active())\n  if (!ec._entities.prop) $me_throw(ec.name(), ec.active(), ec._entities)\n  if (!ec._entities.prop['#zIndex']) $me_throw(ec.name(), ec.active(), ec._entities.prop)\n  const zIndex = (ec._entities.prop['#zIndex'] as $me_atom2).value()\n  if (name_event === 'hover') {\n    _do_event_add<MouseEvent>(ec, 'mousemove', zIndex, {name: 'hover'})\n  } else if (name_event === 'tap' || name_event === 'clickOrTap' && isTouch()) {\n    _do_event_add<TouchEvent>(ec, 'touchstart', zIndex, {name: 'tapBegin'})\n    _do_event_add<TouchEvent>(ec, 'touchmove', zIndex, {name: 'tapTrack'})\n    _do_event_add<TouchEvent>(ec, 'touchend', zIndex, {name: 'tapDid', fn})\n  } else if (name_event === 'tapOutside' || name_event === 'clickOrTapOutside' && isTouch()) {\n    _do_event_add<TouchEvent>(ec, 'touchstart', zIndex, {name: 'tapOutside', fn})\n    // _do_event_add<TouchEvent>(ec, 'touchmove', zIndex, {name: 'tapOutsideTrack'})\n    // _do_event_add<TouchEvent>(ec, 'touchend', zIndex, {name: 'tapOutsideDid', fn})\n  } else if (name_event === 'click' || name_event === 'clickOrTap' && !isTouch()) {\n    _do_event_add<MouseEvent>(ec, 'mousedown', zIndex, {name: 'clickBegin'})\n    _do_event_add<MouseEvent>(ec, 'mouseup', zIndex, {name: 'clickDid', fn})\n  } else if (name_event === 'clickOutside' || name_event === 'clickOrTapOutside') {\n    _do_event_add<MouseEvent>(ec, 'mousedown', zIndex, {name: 'clickOutside', fn})\n    // _do_event_add<MouseEvent>(ec, 'mouseup', zIndex, {name: 'clickOutsideDid', fn})\n    // $me_throw('TODO')\n    // _do_event_add<MouseEvent>(ec, 'mousedown', zIndex, p =>\n    //   !p.isInRect(p.event.clientX, p.event.clientY) && fn(p)\n    // )\n  } else\n    _do_event_add<any>(ec, name_event, zIndex, fn)\n}\n\nfunction _do_event_add<Event>(\n  ec: $me_atom2_ec,\n  name_event: string,\n  zIndex: number,\n  fn: $me_atom2_event_fn<Event> | special_event_handler\n) {\n  if (!$me_atom2_event_handlers.has(name_event))\n    $me_atom2_event_handlers.set(name_event, [] as $me_atom2_event_handlers_queue_type)\n  const queue = $me_atom2_event_handlers.get(name_event)\n  let i = 0\n  while (i < queue.length && queue[i].zIndex > zIndex) i++\n  if (i == queue.length || queue[i].zIndex != zIndex)\n    queue.splice(i, 0, {\n      zIndex,\n      handlers: new Map<$me_atom2_path, $me_atom2_event_fn<any>[]>(),\n    })\n  const handlers = queue[i].handlers\n  if (!handlers.has(ec.path)) handlers.set(ec.path, [] as $me_atom2_event_fn<any>[])\n  handlers.get(ec.path).push(fn)\n}\n\nfunction _events_add_helper(\n  ec: $me_atom2_ec,\n  cnf: $me_atom2_ec_cnf_intf,\n) {\n  if (!cnf) return\n  if (cnf.event)\n    for (const name_event of event_names)\n      if (cnf.event[name_event]) _event_add(ec, name_event, cnf.event)\n  if (cnf.base)\n    _events_add_helper(ec, cnf.base)\n}\n\nfunction _events_add(ec: $me_atom2_ec) {\n  if (\n    ec._entities &&\n    ec._entities.prop &&\n    ec._entities.prop['#isHover']\n    && !(ec._entities.prop['#isHover'] as $me_atom2).masters\n  ) _event_add(ec, 'hover')\n\n  _events_add_helper(ec, ec.cnf)\n}\n\nfunction _events_add_recursive(entity: $me_atom2_entity) {\n  const entities = entity._entities\n  if (entities) {\n    for (const ent of [$me_atom2_entity_enum.key, $me_atom2_entity_enum.elem, $me_atom2_entity_enum.control]) {\n      const entities_of_type = entities[$me_atom2_entity_enum[ent]]\n      if (!entities_of_type) continue\n      for (const tail in entities_of_type) {\n        const ec = entities_of_type[tail] as $me_atom2_ec\n        if (!ec.active()) continue\n        _events_add(ec)\n        _events_add_recursive(ec)\n      }\n    }\n  }\n}\n\nexport function $me_atom2_event_process(name_event: string, event: any) {\n  if (!event) return\n  if (!$me_atom2_event_handlers) {\n    $me_atom2_event_handlers = new Map()\n    _events_add_recursive($me_atom2_entity.root())\n    // console.log($me_atom2_event_handlers)\n  }\n  if (!$me_atom2_event_handlers.has(name_event)) return\n  const queue = $me_atom2_event_handlers.get(name_event)\n  let done_event = false\n  let ec_proceed: $me_atom2_ec\n  QUEUE: for (const item of queue) {\n    for (const [path, fn_array] of item.handlers) {\n      const ec = $me_atom2_entity.root().by_path<$me_atom2_ec>(path)\n      if (!ec) continue\n      if (!(ec._entities.prop['#visible'] as $me_atom2<boolean>).value()) continue\n\n      const clientRect = (ec._entities.prop['#clientRect'] as $me_atom2<$me_rect_intf>).value()\n      if (!clientRect) continue\n\n      const isInRect = (clientX: number, clientY: number) =>\n        $me_point_in_rect(clientX, clientY, clientRect)\n      const distToRect = (clientX: number, clientY: number) =>\n        $me_dist_to_rect(clientX, clientY, clientRect)\n\n      let done_ec = false\n      let done_ec_special = false\n\n      const prev = a.curr\n      a.curr = ec\n      let clickTolerance: number\n      let touchTolerance: number\n      let tapTolerance: number\n      for (const item of fn_array)\n        if (typeof item == 'function') {\n          const fn = item as $me_atom2_event_fn<any>\n          if (done_ec = fn({event, isInRect, distToRect}))\n            break\n        } else {\n          const name = (item as special_event_handler).name\n          if (name == 'hover') {\n            if (isInRect(event.clientX, event.clientY)) {\n              (ec._entities.prop['#isHover'] as $me_atom2<boolean>).value(true)\n              if (!hoverCurr) hoverCurr = new Set<$me_atom2_path>()\n              hoverCurr.add(path)\n              done_ec_special = true\n            }\n          } else if (name == 'clickOutside') {\n            done_ec_special =\n              !isInRect(event.clientX, event.clientY) &&\n              (item as special_event_handler).fn(\n                <$me_atom2_event_p_intf<MouseEvent>>{\n                  isInRect,\n                  distToRect,\n                  event,\n                }\n              )\n          } else if (name == 'clickBegin') {\n            if (isInRect(event.clientX, event.clientY)) {\n              // if (!click) click = new Map<$me_atom2_path, MouseEvent>()\n              if (!click) click = new Set<$me_atom2_path>()\n              click.add(path)\n              startClick = event\n              done_ec_special = true\n            }\n          } else if (name == 'clickDid') {\n            if (click && click.has(path)) {\n              // const start = click.get(path)\n              if (clickTolerance === void 0)\n                clickTolerance = a('/.#clickTolerance')\n              done_ec_special =\n                Math.abs(startClick.clientX - event.clientX) <= clickTolerance &&\n                Math.abs(startClick.clientY - event.clientY) <= clickTolerance &&\n                (item as special_event_handler).fn(\n                  <$me_atom2_event_p_intf<$me_atom2_event_click_intf>>{\n                    isInRect,\n                    distToRect,\n                    event: {start: startClick, end: event}\n                  }\n                )\n            }\n          } else if (name == 'tapOutside') {\n            if (touchTolerance === void 0)\n              touchTolerance = a('/.#touchTolerance')\n            const dist = distToRect(event.touches[0].clientX, event.touches[0].clientY)\n            done_ec_special =\n              (dist > touchTolerance) &&\n              (item as special_event_handler).fn(\n                <$me_atom2_event_p_intf<TouchEvent>>{\n                  isInRect,\n                  distToRect,\n                  event,\n                }\n              )\n          } else if (name == 'tapBegin') {\n            if (touchTolerance === void 0)\n              touchTolerance = a('/.#touchTolerance')\n            const dist = distToRect(event.touches[0].clientX, event.touches[0].clientY)\n            if (dist <= touchTolerance) {\n              if (!$me_atom2_event_tap) {\n                $me_atom2_event_tap = new Map<$me_atom2_path, number>()\n              } else {\n                const dist_eta = dist\n                for (const [path, dist] of $me_atom2_event_tap)\n                  if (dist > dist_eta) $me_atom2_event_tap.delete(path)\n              }\n              $me_atom2_event_tap.set(ec.path, dist)\n              startTap = event\n              done_ec_special = true\n            }\n          } else if (name == 'tapTrack') {\n            if ($me_atom2_event_tap && $me_atom2_event_tap.size) {\n              const event_curr = event\n              if (tapTolerance == void 0)\n                tapTolerance = a('/.#tapTolerance')\n              if (\n                Math.abs(event.touches[0].clientX - startTap.touches[0].clientX) > tapTolerance ||\n                Math.abs(event.touches[0].clientY - startTap.touches[0].clientY) > tapTolerance\n              ) $me_atom2_event_tap.clear()\n            }\n          } else if (name == 'tapDid') {\n            if ($me_atom2_event_tap && $me_atom2_event_tap.has(path)) {\n              const fn = (item as special_event_handler).fn\n              if (fn(<$me_atom2_event_p_intf<$me_atom2_event_tap_intf>>{\n                isInRect,\n                distToRect,\n                event: {start: startTap, end: event},\n              })) {\n                const app = a.get('/@app') as $me_atom2_ec\n                app.dispatch('tapEffect', {ec, event: startTap})\n                done_ec_special = true\n              }\n            }\n          } else $me_throw(name)\n        }\n      a.curr = prev\n      // if (name_event == 'mousedown' && (done_ec || done_ec_special)) console.warn(ec.name())\n\n      done_event = done_event || done_ec || done_ec_special\n      if (done_event) {\n        ec_proceed = ec\n        break QUEUE\n      }\n    }\n    // if (done_event) break\n  }\n  if (name_event == 'mousemove') {\n    if (hoverCurr) {\n      if (hoverPrev && hoverPrev.size) {\n        for (const path of hoverPrev) {\n          if (hoverCurr.has(path)) continue\n          const ec = $me_atom2_entity.root().by_path(path) as $me_atom2_ec\n          if (!(ec instanceof $me_atom2_ec)) continue\n          (ec._entities.prop['#isHover'] as $me_atom2<boolean>).value(false)\n        }\n        hoverPrev.clear()\n      }\n      if (!hoverPrev) hoverPrev = new Set<$me_atom2_path>()\n      for (const path of hoverCurr)\n        hoverPrev.add(path)\n      hoverCurr.clear()\n    }\n  } else if (name_event == 'mouseup') {\n    click && click.clear()\n  } else if (name_event == 'touchend') {\n    $me_atom2_event_tap && $me_atom2_event_tap.clear()\n  }\n  if (\n    event.preventDefault &&\n    (ec_proceed instanceof $me_atom2_elem) &&\n    (ec_proceed as $me_atom2_elem).node.tagName != 'INPUT'\n  ) {\n    event.preventDefault()\n  // } else {\n  //   console.warn(event, ec_proceed)\n  }\n}\n\nexport function $me_atom2_event_keyboard_process(name_event: string, event: KeyboardEvent) {\n  // TODO:\n  // const name_control = $me_atom2_control_focused()\n  // if (!name_control) return\n  // let done = false\n  // for (\n  //   let i = name_control.length;\n  //   i > 0 && !done;\n  //   i = name_control.lastIndexOf('/', i - 1)\n  // ) {\n  //   const name_entity = name_control.slice(0, i)\n  //   const entity = $me_atom2_entity_get(name_entity)\n  //   // $me_atom2_with(entity[$me_atom2_stack_symbol], () => {\n  //   $me_atom2_with(entity.stack, () => {\n  //     done = _process_keyboard_event_helper(name_event, event, entity.cnf, entity.bases)\n  //   })\n  // }\n  // if (done) event.preventDefault()\n}\n\n// function _process_keyboard_event_helper(name_event: string, event: KeyboardEvent, cnf: $me_atom2_ec_cnf_intf, bases: $me_atom2_ec_bases_type<$me_atom2_ec_cnf_intf>) : boolean {\n//   if (!cnf) return\n//   if (cnf.event && cnf.event[name_event])\n//     if (cnf.event[name_event]({event})) return true\n//   return !!_process_keyboard_event_helper(name_event, event, $me_atom2_ec_base<$me_atom2_ec_cnf_intf>(cnf.base, bases), bases)\n// }\n\n// ==========================================================================\n\ntype special_event_handler = {\n  name: string,\n  fn?: $me_atom2_event_fn<any>,\n}\ntype event_handlers_type = Map<$me_atom2_path, ($me_atom2_event_fn<any> | special_event_handler)[]>\n\nexport type $me_atom2_event_handlers_queue_type = {\n  zIndex: number,\n  handlers: event_handlers_type,\n}[]\n\n// ==========================================================================\n\n// function init() {\n//   $me_atom2_entity.root().props({\n//     '#isTouch': $me_atom2_prop<boolean>([],\n//       () => 'ontouchstart' in window,\n//       ({val, prev}) => {\n//         if (prev != null && prev != val) {\n//           if (prev) {\n//             document.body.removeEventListener('touchstart', touchstart)\n//             document.body.removeEventListener('touchend', touchend)\n//           } else {\n//             document.body.removeEventListener('mousedown', mousedown)\n//             document.body.removeEventListener('mouseup', mouseup)\n//             document.body.removeEventListener('mousemove', mousemove)\n//             // document.body.removeEventListener('wheel', wheel, {passive: false})\n//             document.body.removeEventListener('wheel', wheel)\n//             document.body.removeEventListener('keydown', keydown)\n//             document.body.removeEventListener('keyup', keyup)\n//           }\n//         }\n//         if (prev !== val) {\n//           if (val) {\n//             document.body.addEventListener('touchstart', touchstart)\n//             document.body.addEventListener('touchend', touchend)\n//           } else {\n//             document.body.addEventListener('mousedown', mousedown)\n//             document.body.addEventListener('mouseup', mouseup)\n//             document.body.addEventListener('mousemove', mousemove)\n//             document.body.addEventListener('wheel', wheel, {passive: false})\n//             document.body.addEventListener('keydown', keydown)\n//             document.body.addEventListener('keyup', keyup)\n//           }\n//         }\n//       }\n//     ),\n//   })\n//   // if ('ontouchstart' in window) {\n//   //   document.body.addEventListener('touchstart', touchstart)\n//   //   document.body.addEventListener('touchend', touchend)\n//   // } else {\n//   //   document.body.addEventListener('mousedown', mousedown)\n//   //   document.body.addEventListener('mouseup', mouseup)\n//   //   document.body.addEventListener('mousemove', mousemove)\n//   //   document.body.addEventListener('wheel', wheel, {passive: false})\n//   //   document.body.addEventListener('keydown', keydown)\n//   //   document.body.addEventListener('keyup', keyup)\n//   // }\n// }\n\n// init()\n\nconst isTouch = () => ($me_atom2_entity.root()._entities.prop['#isTouch'] as $me_atom2).value()\n\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nexport type $me_atom2_def<Value=number, Masters=any[]> =\n  // atom_def_intf |\n  $me_atom2_def_apply_intf<Value> |\n  $me_atom2_def_compute_intf<Value, Masters> |\n  $me_atom2_def_compute_apply_intf<Value, Masters>\n\ninterface atom_def_intf\n  extends $me_atom2_entity_class_p_base_intf\n  {\n    keys?: string[],\n    is_key?: boolean,\n    fn_key_idx_changed?: $me_atom2_key_idx_changed_fn,\n    descendant_level?: number,\n  }\n\nexport interface $me_atom2_def_apply_intf<Value=number>\n  extends atom_def_intf\n  {\n    fn_apply?: $me_atom2_apply_fn<Value>,\n  }\n\nexport interface $me_atom2_def_compute_intf<Value=number, Masters=any[]>\n  extends atom_def_intf\n  {\n    masters: $me_atom2_def_masters_type,\n    fn_compute?: $me_atom2_compute_fn<Value, Masters>,\n  }\n\nexport interface $me_atom2_def_compute_apply_intf<Value=number, Masters=any[]>\n  extends\n    $me_atom2_def_apply_intf<Value>,\n    $me_atom2_def_compute_intf<Value, Masters>\n  {}\n\n// ============================================================================\n\nexport class $me_atom2<Value=number, Masters=any> extends $me_atom2_entity {\n  private readonly fn_compute?: $me_atom2_compute_fn<Value, Masters>\n  private readonly fn_apply?: $me_atom2_apply_fn<Value>\n  readonly masters: $me_atom2_masters_type\n\n  private _state: $me_atom2_state_type\n  private _value: Value\n  // private _value_last_applied: Value\n  private _slaves: Map<$me_atom2, string>\n  private readonly _descendant_level: number\n  private readonly _fn_key_idx_changed: $me_atom2_key_idx_changed_fn\n  private _key_provider_cache: $me_atom2_keys_intf\n  private _key_gen: $me_atom2<string[]>\n  private _masters_store: {\n    [name: string]: $me_atom2<any> | string,\n  }\n\n  state() { return this._state }\n  get 'fn_compute()'() {\n    return this._compute()\n  }\n  get 'fn_apply()'() {\n    return this._state === $me_atom2_state_enum.valid ? this._apply(this._value, true) : new Error(`this._state is ${this._state}`)\n  }\n  get 'update()'() {\n    return this.update()\n  }\n  get 'masters()'() {\n    const masters = this._masters()\n    if (!masters.length) return null\n    const result: {[name: string]: any} = {}\n    for (const name_master of masters)\n      result[name_master] = this.by_path_s(name_master)\n    return result\n    // return this._masters().map(name_atom => this.by_path_s(name_atom))\n  }\n  get 'slaves()'() {\n    if (!this._slaves) return null\n    const result: {[name: string]: any} = {}\n    for (const [atom_slave] of this._slaves)\n      result[atom_slave.name()] = atom_slave\n    return result\n  }\n  get 'state()'(): any {\n    return this.get_state_helper(this._state)\n  }\n  private get_state_helper(state: $me_atom2_state_type): any {\n    if (state instanceof Error) return state\n    if (typeof state === 'number') return $me_atom2_state_enum[state]\n    if (state instanceof Set) {\n      const state_complex = state as $me_atom2_state_complex\n      const result : {[name: string]: any} = {}\n      for (const s of state_complex) {\n        const ret = this.by_path_s(s)\n        const key = typeof ret == 'string' ? ret as string : (ret as $me_atom2).name()\n        const val = typeof ret == 'string' ?  'waiting_for' : (ret as $me_atom2)['state()']\n        result[key] = val\n        // result[key] = val === null ? 'waiting_for' : this.get_state_helper(val)\n      }\n      return result\n    }\n  }\n\n  constructor(p: $me_atom2_def<Value>) {\n    super({\n      ...p,\n      ent: p.is_key ?\n        $me_atom2_entity_enum.key :\n        $me_atom2_entity_enum.prop,\n    })\n    this._descendant_level = p.descendant_level || 0\n    this._fn_key_idx_changed = p.fn_key_idx_changed\n\n    if (p.keys && p.keys.length) {\n      const self = this\n      const pp = p as $me_atom2_def_compute_intf<Value, Masters>\n      this.fn_compute = pp.fn_compute\n      const atom = new $me_atom2<string[]>({\n        descendant_level: 1,\n        tail: '#keys',\n        parent: self,\n        masters: p.keys.slice(0, 1),\n        fn_compute: ({masters: [key]}) => key,\n        fn_apply: ({val, prev, atom}) => {\n          // if (atom.name() == 'ec.ts:100 /@app@workspace@search@panelResult@grid.@row') console.error(this.name())\n          let ss_curr: Set<string>\n          let ss_prev: Set<string>\n          // console.log(atom.name(), val, prev)\n          if (prev) {\n            ss_curr = new Set<string>(val)\n            for (const tail of prev)\n              if (!ss_curr.has(tail)) {\n                const atom = this._entities && this._entities.key && this._entities.key[tail] as $me_atom2\n                if (atom) {\n                  atom.value(null)\n                  atom.destroy()\n                }\n              }\n          }\n          if (val) {\n            ss_prev = new Set<string>(prev)\n            // console.warn(ss_prev)\n            for (const tail of val)\n              if (!ss_prev.has(tail))\n                new $me_atom2<Value>({\n                  ...p,\n                  descendant_level: 1,\n                  tail,\n                  is_key: true,\n                  keys: p.keys.slice(1),\n                  parent: self,\n                })\n          }\n          if (val && !val.length && this.path.tail.startsWith('@')) {\n            const ec = this.parent() as $me_atom2_ec\n            if (ec instanceof $me_atom2_ec) {\n              ec._wait_for_child_did(ec.name() + this.path.tail)\n            // console.log(`%c${atom.name()}`, 'background: magenta; color: white', ec.name(), ec.name() + this.path.tail, ec, val, ec._wait_for_child)\n            } else {\n              console.error(ec)\n            }\n            // console.log(`%c${atom.name()}`, 'background: magenta; color: white', this.parent().name(), this.name(), ec, val)\n          }\n          if (prev && val) {\n            for (const tail of ss_curr) {\n              if (ss_prev.has(tail)) {\n                const idx_prev = prev.indexOf(tail)\n                const idx_curr = val.indexOf(tail)\n                if (idx_prev != idx_curr) {\n                  // const atom = this.by_path(new $me_atom2_path({ent, tail})) as $me_atom2\n                  // console.warn('TODO: replace .by_path() to _entities', atom)\n                  const atom = this._entities && this._entities.key && this._entities.key[tail] as $me_atom2\n                  if (atom) atom._key_idx_changed({\n                    key: [tail],\n                    change: {idx_curr, idx_prev, i_key: 0}\n                  })\n                }\n              }\n            }\n          }\n        }\n      })\n      this._key_gen = atom\n    } else {\n\n      this.fn_apply = (p as $me_atom2_def_apply_intf<Value>).fn_apply\n\n      const pp = p as $me_atom2_def_compute_intf<Value, Masters>\n      this.fn_compute = pp.fn_compute\n\n      if (pp.masters && (!Array.isArray(pp.masters) || pp.masters.length)) {\n        if (Array.isArray(pp.masters)) {\n          this.masters = pp.masters as string[]\n        } else {\n          const atom = new $me_atom2<string[]>({\n            descendant_level: 1,\n            tail: '#masters',\n            parent: this,\n            masters: (pp.masters as $me_atom2_masters_prop_intf).masters,\n            fn_compute: (p) => {\n              const masters = (pp.masters as $me_atom2_masters_prop_intf).fn_compute(p) as string[]\n              if (!Array.isArray(masters))\n                $me_throw(`atom '${atom.name()}'.fn_compute() expected to return string[] instead of`, masters)\n              return masters\n            },\n            fn_apply: ({val, prev}) => {\n              if ($me_equal(val, prev)) return\n              if (Array.isArray(prev))\n                this.unregister_as_slave(prev)\n              this._masters_store = null\n            },\n          })\n          atom.add_slave(this, '#masters')\n          this.masters = atom\n        }\n      }\n    }\n    this.set_state($me_atom2_state_enum.invalid)\n\n    const name = this.name()\n    const sp = $me_atom2._waiting_for_atom_def[name]\n    if (!sp) return\n    for (const [path, master] of sp) {\n      const atom = $me_atom2_entity.root().by_path(path) as $me_atom2\n      if (typeof atom !== 'string') this.add_slave(atom, master)\n    }\n    delete $me_atom2._waiting_for_atom_def[name]\n  }\n  destroy() {\n    if (this._slaves)\n      for (let [atom_slave] of this._slaves) {\n        this.rm_slave(atom_slave)\n      }\n    this.unregister_as_slave(this._masters())\n    super.destroy()\n  }\n\n  by_path_s<Entity=$me_atom2<any>>(s: string, keys?: $me_atom2_keys_intf) {\n    // const descendant = this._descendant(this._descendant_level) as $me_atom2_entity\n    const descendant = this._descendant(this._descendant_level) as $me_atom2_entity\n    if (typeof descendant === 'string') $me_throw(descendant as string)\n    return descendant.by_path_s(s, keys || this._key_provider()) as any as Entity\n  }\n  private no_wait_for_master(name_master: string) {\n    if (!(this._state instanceof Set)) return\n    const state_complex = this._state as $me_atom2_state_complex\n    state_complex.delete(name_master)\n    if (state_complex.size) return\n    this.set_state($me_atom2_state_enum.invalid)\n  }\n  private add_slave(atom_slave: $me_atom2<any>, name_master: string) {\n    if (!this._slaves) this._slaves = new Map<$me_atom2, string>()\n    this._slaves.set(atom_slave, name_master)\n    atom_slave.no_wait_for_master(name_master)\n    const store = atom_slave._masters_store || (atom_slave._masters_store = {})\n    store[name_master] = this\n    atom_slave.set_state_slave(name_master,\n      this._state instanceof Set ? this._state :\n      // this._state === $me_atom2_state_enum.valid || this._state == $me_atom2_state_enum.need_check ? $me_atom2_state_enum.need_check\n      $me_atom2_state_enum.invalid\n    )\n  }\n  rm_slave(atom_slave: $me_atom2<any>) {\n    if (this._slaves && this._slaves.has(atom_slave)) {\n      const name_master = this._slaves.get(atom_slave)\n      atom_slave.set_state_slave(name_master, $me_atom2_state_enum.invalid)\n      if (atom_slave._masters_store) delete atom_slave._masters_store[name_master]\n      this._slaves.delete(atom_slave)\n      if (!this._slaves.size) this._slaves = null\n    }\n  }\n  unregister_as_slave(masters: string[]) {\n    if (Array.isArray(masters))\n      for (const name_master of masters) {\n        // console.log(masters, this.name())\n        const atom_master = this.by_path_s(name_master) as $me_atom2\n        if (typeof atom_master !== 'string') {\n          atom_master.rm_slave(this)\n        } else {\n          const ms = $me_atom2._waiting_for_atom_def\n          let s = atom_master as string\n          const ss = ms[s]\n          if (!ss) continue\n          ss.delete(this.path)\n          if (!ss.size) delete ms[s]\n          this.no_wait_for_master(name_master)\n        }\n      }\n  }\n  value(val?: Value | $me_atom2_anim_class<Value>, force = false) {\n    if (val === void 0 && this._state === $me_atom2_state_enum.valid) return this._value\n    // if (\n    //   !this.active() //|| $me_atom2._cyclic_dependency\n    // ) return null\n    this.update(val, force)\n    return (\n      // $me_atom2._cyclic_dependency ||\n      this._state !== $me_atom2_state_enum.valid ?\n        null :\n        this._value\n    ) as Value\n  }\n  static is_valid_value(val: any) {\n    return !(val == null || Number.isNaN(val))\n  }\n  static _update_atoms = {\n    compute: new Map<$me_atom2_path, boolean>(),\n    apply: new Map<$me_atom2_path, boolean>(),\n  }\n  private update(val?: Value | $me_atom2_anim_class<Value>, force = false) {\n  // const start = performance.now()\n  // try {\n    if (\n      // !this.active() ||\n      // $me_atom2._cyclic_dependency ||\n      val === void 0 && !(\n        this._state === $me_atom2_state_enum.invalid ||\n        this._state === $me_atom2_state_enum.need_check\n      )\n    ) return\n\n    const true_set = val !== void 0\n    if (val === void 0) {\n      const start = performance.now()\n      const compute_result = this._compute()\n      $me_atom2.compute_timing += performance.now() - start\n      $me_atom2.compute_count++\n      if (!compute_result) return\n      const {ret, state} = compute_result\n      if (state !== void 0) {\n        this.set_state(state)\n        return\n      }\n      val = ret\n    }\n\n    let just_set_anim = false\n    let next_value = null as Value\n    let anim_to_fini: $me_atom2_anim_intf<Value>\n    if (!(val instanceof $me_atom2_anim_class)) {\n      next_value = val as Value\n    } else {\n      const anim = (val as $me_atom2_anim_class<Value>)._anim\n      if ($me_atom2.is_valid_value(anim.to)) {\n        if (!$me_atom2.is_valid_value(anim.from)) {\n          const value = typeof this._state == 'number' ? this._value : null\n          anim.from = $me_atom2.is_valid_value(value) ? value : anim.to\n        }\n        if (just_set_anim = (anim.delay > 0 || !$me_equal(anim.from, anim.to))) {\n          $me_atom2.anim_to_play.set(\n            this.path,\n            <$me_atom2_anim_to_play_intf<Value>>{...anim, value: anim.from}\n          )\n          $me_atom2.anim_active<Value>(anim, true)\n          $me_atom2_async()\n        }\n        next_value = anim.delay > 0 ? void 0 : anim.from\n        if (!just_set_anim)\n          anim_to_fini = anim\n      }\n    }\n    if (next_value === void 0) return\n\n    if (!just_set_anim) $me_atom2.anim_stop(this.path)\n    this.set_value(next_value, true_set, force)\n    if (anim_to_fini) $me_atom2.anim_fini(anim_to_fini, this.path)\n  // } finally {\n  //   $me_atom2.update_timing += performance.now() - start\n  //   $me_atom2.update_count++\n  // }\n  }\n  set_value(next_value: Value, true_set = true, force = false) {\n    const prev_value = this._value\n    if (\n      !true_set && !force &&\n      $me_equal(next_value, prev_value)\n    ) {\n      if (this._state === $me_atom2_state_enum.need_check) {\n        this._state = $me_atom2_state_enum.valid\n        $me_atom2.did_not_apply = true\n        return\n      } else {\n        // console.warn(this.name(), this._state, next_value)\n        this._state = $me_atom2_state_enum.valid\n        $me_atom2.did_not_apply = true\n        return\n      }\n    }\n\n    // if (this.name() == '/@app@game@board_canvas^board^cell[h][3].#render')\n      // console.log(this.name(), this._state, $me_equal(next_value, prev_value), this.masters, next_value, prev_value)\n    next_value = this._apply(next_value, force)\n\n    if (true_set) this._masters_store = null\n    const state =\n      $me_atom2.is_valid_value(this._value = next_value) ? $me_atom2_state_enum.valid :\n      true_set && (this.fn_compute || this.masters) ? $me_atom2_state_enum.invalid :\n      `${this.name()} got ${next_value}`\n    // if (this.name() == '/@app@workspace@search@panelResult@shown.#clientRect') console.log(this.name(), state, this._state)\n    if (\n      state !== this._state ||\n      this._state === $me_atom2_state_enum.valid && (force || !$me_equal(prev_value, next_value))\n    )\n      this.set_state(state, $me_atom2_state_enum.need_check)\n  }\n  private _compute() : compute_result_intf<Value> {\n    return this.update_helper('compute',\n      () => {\n        let master_values : any[]\n        const fn_compute = this.fn_compute\n        let masters: string[]\n\n        if (this.masters) {\n          let ma: $me_atom2<string[]>\n          masters = Array.isArray(this.masters) ? this.masters : (ma = this.masters as $me_atom2<string[]>).value()\n          let state: $me_atom2_state_complex\n          if (ma && ma._state !== $me_atom2_state_enum.valid) {\n            state = new Set<string>()\n            state.add(this.name() + '.#masters')\n            return <compute_result_intf<Value>>{state}\n          }\n\n          let store = this._masters_store\n          if (!store) {\n            for (const name_master of masters) {\n              const atom_master = this.by_path_s(name_master, this._key_provider()) as $me_atom2\n              if (atom_master instanceof $me_atom2) {\n                atom_master.add_slave(this, name_master)\n              } else {\n                const name_atom_waiting_for = atom_master as string\n                const ms = $me_atom2._waiting_for_atom_def\n                const ss = ms[name_atom_waiting_for] || (ms[name_atom_waiting_for] = new Map<$me_atom2_path, string>())\n                ss.set(this.path, name_master)\n                if (!state) state =\n                  this._state instanceof Set ?\n                  this._state as $me_atom2_state_complex :\n                  new Set<string>()\n                state.add(name_master)\n              }\n            }\n            if (state) {\n              return <compute_result_intf<Value>>{state}\n            }\n            store = this._masters_store\n          }\n          master_values = []\n          let not_ready = false\n          for (const name_master of masters) {\n            const atom_master = store[name_master] as $me_atom2\n            if (!atom_master) {\n              if (!state) state = new Set<string>()\n              state.add(name_master)\n              continue\n            }\n            let value = atom_master.value()\n            master_values.push(value)\n            if (atom_master._state !== $me_atom2_state_enum.valid) {\n              if (!state) state = new Set<string>()\n              state.add(name_master)\n            }\n          }\n          if (state) {\n            return <compute_result_intf<Value>>{state}\n          }\n          if (!fn_compute) {\n            return {\n              ret: (master_values.length == 1 ? master_values[0] : master_values) as any as Value\n            }\n          }\n        }\n        if (!fn_compute) {\n          return {ret: void 0}\n        }\n        const result = <compute_result_intf<Value>>{}\n        const key_provider_ret = this._key_provider() || {}\n        try {\n          const start = performance.now()\n          result.ret = fn_compute.call(this, {\n            atom: this as $me_atom2<Value>,\n            prev: this._value,\n\n            len: !master_values ? 0 : master_values.length,\n            masters: master_values as any as Masters,\n            ...key_provider_ret,\n          })\n          if (result.ret === void 0) console.error(this.name(), 'compute returned void 0')\n          $me_atom2.pure_compute_timing += performance.now() - start\n          $me_atom2.pure_compute_count++\n        } catch (e) {\n          console.error(e)\n          result.state = e\n        }\n        return result\n      },\n    )\n  }\n  private _apply(next_value: Value, force = false) {\n    const fn_apply = this.fn_apply\n    if (fn_apply && (force || !$me_equal(next_value, this._value))) {\n      const prev = this._value\n      this._value = next_value\n      this.update_helper('apply',\n        () => {\n          const keys = this._key_provider() || {}\n          const ret = fn_apply.call(this, {\n            atom: this,\n            prev,\n            val: next_value,\n            ...keys,\n          }) as any as Value\n          if (ret !== void 0) next_value = ret\n          return null\n        },\n      )\n    }\n    return next_value\n  }\n  private update_helper(update_kind: 'apply' | 'compute', fn: $me_fn<compute_result_intf<Value>>): compute_result_intf<Value> {\n    const ss = $me_atom2._update_atoms[update_kind]\n    if (ss.has(this.path)) {\n      console.error(\n        `Циклическая ${update_kind}-зависимость`,\n        [this.path.toString()].concat(\n          [...$me_atom2._update_atoms[update_kind]]\n            .map(item => item[0].toString())\n            .reverse()\n        )\n      )\n      return null\n    }\n    ss.set(this.path, true)\n    const prev = a.curr\n    a.curr = this\n    const ret = fn()\n    a.curr = prev\n    ss.delete(this.path)\n    return ret\n  }\n  // ===========================\n\n  private _key_provider(): $me_atom2_keys_intf {\n    if (this.path.tail === '#masters' || this.path.tail === '#keys')\n      return (this.parent() as $me_atom2)._key_provider()\n    if (this.path.ent !== $me_atom2_entity_enum.key)\n      return null\n    if (this._key_provider_cache)\n      return this._key_provider_cache\n    const result = <$me_atom2_keys_intf>{len_key: 0}\n    let atom = this as $me_atom2<any>\n    let key_enum: string[][]\n    let key: string[]\n    let keys: string[]\n    while (atom.path.ent === $me_atom2_entity_enum.key) {\n      result.len_key++\n      if (!key) key = Array<string>()\n      if (!keys) keys = Array<string>()\n      if (!key_enum) key_enum = Array<string[]>()\n      key.unshift(atom.path.tail)\n      atom = atom.parent() as $me_atom2<any>\n      keys = (atom._key_gen.masters as string[]).concat(keys)\n      const key_name = atom._key_gen.masters[0]\n      const masters_store = atom._key_gen._masters_store\n      if (masters_store) {\n        const atom_master = (masters_store[key_name] as $me_atom2<string[]>)\n        if (atom_master) {\n          key_enum = [atom_master.value()].concat(key_enum)\n        } else {\n          // TODO: uncomment and test for nl/picker\n          // console.error(this.name(), key_name, masters_store)\n        }\n      } else {\n        // console.error(atom._key_gen.name())\n      }\n    }\n    if (result.len_key) {\n      result.key = key\n      result.keys = keys\n      result.key_enum = key_enum\n    }\n    return (this._key_provider_cache = result)\n  }\n  // ===========================\n\n  private static _spread_atoms = new Map<$me_atom2<any>, $me_atom2_state_type>()\n  // private static _cyclic_dependency = false\n\n  static set_state_count = 0\n  set_state(val: $me_atom2_state_type, state2spread?: $me_atom2_state_type) : void {\n    // if ($me_atom2._cyclic_dependency) return\n\n    this._state = val\n\n    // if (this.name() == '/@app@workspace@search@panelResult@shown.#clientRect') console.warn(this.name(), val, this._state, this.fn_apply)\n    // if (\n      // this.name() == '/@app@workspace@search@panelResult@grid.ofsHor'\n      // ||\n     // this.name() == '/@demo@dialog@invisible@row[3]@content@wrapper@item.#hidden'\n      // ) console.warn(this.name(), val, this._value)\n    if (\n      this.fn_apply &&\n      (val === $me_atom2_state_enum.invalid || val === $me_atom2_state_enum.need_check)\n    ) {\n    // if (this.name() == '/@app@workspace@search@panelResult@shown.#clientRect') console.log(this.name(), val)\n      if (this.path.tail != '#clientRect' || $me_atom2_event_mousemove_last && !$me_atom2_event_mousemove_to_process) {\n        $me_atom2.add_to_update(this)\n        // $me_atom2.to_update.add(this)\n        // $me_atom2_async()\n      } else {\n        // if ($me_atom2_event_mousemove_last && !$me_atom2_event_mousemove_to_process) {\n        const entity = this.parent(true) as $me_atom2_entity\n        if (entity instanceof $me_atom2_elem) {\n          const elem = entity as $me_atom2_elem\n    // if (this.name() == '/@app@workspace@search@panelResult@shown.#clientRect') console.log('add_to_update', this.name(), val, entity, '--' + elem.node.style.width + '--', '--' + elem.node.style.height + '--', a('/@app@workspace@search@panelResult@shown.#width'), a('/@app@workspace@search@panelResult@shown.#height'))\n          if (\n            elem.node.style.width == 'auto' ||\n            elem.node.style.height == 'auto' ||\n            (() => {\n              const prop_width = $me_atom2_entity.root().by_path<$me_atom2>($me_atom2_path.fromString('.#width') as $me_atom2_path)\n              const prop_height = $me_atom2_entity.root().by_path<$me_atom2>($me_atom2_path.fromString('.#height') as $me_atom2_path)\n              return prop_width && prop_height && (prop_width.value() == null || prop_height.value() == null)\n            })\n          ) {\n            // if (this.name() == '/@app@workspace@search@panelResult@shown.#clientRect') console.error(this.name())\n            $me_atom2.add_to_update(this)\n          } else {\n            // console.log(this.name(), this.parent(true))\n          }\n        }\n      }\n      // $me_atom2.to_update.add(this.path)\n      // $me_atom2_async()\n    }\n    $me_atom2.set_state_count++\n\n    if (!this._slaves) return\n\n    $me_atom2._spread_atoms.set(this, val)\n    for (let [atom_slave, name_master] of this._slaves) {\n      // if (this.name() === '/@app@workspace@search@panelResult@shown.#isReady') console.error(this.name(), val, this._state, atom_slave)\n      atom_slave.set_state_slave(name_master, state2spread !== void 0 ? state2spread : val)\n    }\n    $me_atom2._spread_atoms.delete(this)\n  }\n  private set_state_slave(name_master: string, val: $me_atom2_state_type) {\n    if ($me_atom2._spread_atoms.has(this)) {\n      // $me_atom2._cyclic_dependency = true\n      $me_throw(\n        'Циклическая spread-зависомость',\n        [[this.name(), val]].concat([...$me_atom2._spread_atoms].map(item => [item[0].name(), item[1]]).reverse()),\n        ...[this as $me_atom2<Value>].concat([...$me_atom2._spread_atoms].map(item => item[0]).reverse()),\n      )\n    }\n\n// if (this.name() == '/@app@workspace@search@panelResult@shown.#clientRect') console.log(this.name(), this._state, name_master, val)\n// if (this.name() == '/@demo@dialog@invisible@row[2]@content.id')\n    // if (this.name().endsWith(']@content.id')) console.log(this.name(), this._state, name_master, val)\n    if (this._state instanceof Set && typeof val == 'number') {\n      this.no_wait_for_master(name_master)\n    } else if (\n      (typeof this._state == 'string' || this._state instanceof Error) && typeof val == 'number'\n    ) {\n      this.set_state($me_atom2_state_enum.invalid)\n    } else if (val instanceof Set || typeof val == 'string' || val instanceof Error) {\n      if (!(this._state instanceof Set)) this._state = new Set()\n      this._state.add(name_master)\n    } else if (\n      this._state === $me_atom2_state_enum.valid &&\n      (val == $me_atom2_state_enum.need_check || val == $me_atom2_state_enum.invalid)\n    ) {\n      this.set_state($me_atom2_state_enum.need_check)\n    }\n    // else if (\n    //   this._state === $me_atom2_state_enum.invalid\n    // )\n// if (this.name() == '/@app@workspace@search@panelResult@shown.#clientRect') console.warn(this.name(), this._state, name_master, val)\n// if (this.name() == '/@app@workspace@search@panelResult@grid@header@wrapper@cells.#ofsHor') console.warn(this.name(), this._state, name_master, val)\n    // if (this.name().endsWith(']@content.id') && val == $me_atom2_state_enum.valid) console.warn(this.name(), this._state, name_master, val)\n  }\n  // ===========================\n  protected _key_idx_changed(p: $me_atom2_key_idx_changed_p_intf) {\n    if ($me_debug) console.log(this,p)\n    if (this._entities && this._entities.key) {\n      const entities_key = this._entities.key\n      for (const k in entities_key) {\n        (entities_key[k] as $me_atom2)._key_idx_changed({\n          key: p.key.concat(k),\n          change: {\n            ...p.change,\n            i_key: p.change.i_key - 1,\n          },\n        })\n      }\n    } else if (this._fn_key_idx_changed) {\n      let path = this.path\n      let n = 0\n      while (path.ent === $me_atom2_entity_enum.key) {\n        n++\n        path = path.path\n      }\n      p.change.i_key = n - 1 + p.change.i_key\n      this._key_idx_changed_helper(p, this.by_path(path) as $me_atom2, n, [])\n    }\n  }\n  private _key_idx_changed_helper(\n    p: $me_atom2_key_idx_changed_p_intf,\n    parent: $me_atom2,\n    n: number,\n    key: string[],\n  ) {\n    if (n <= p.key.length) {\n      this._fn_key_idx_changed({\n        key: key.concat(p.key),\n        change: p.change,\n      })\n    } else {\n      const entities_key = parent._entities.key\n      for (const k in entities_key) {\n        this._key_idx_changed_helper(\n          p,\n          entities_key[k] as $me_atom2,\n          n - 1,\n          key.concat(k),\n        )\n      }\n    }\n  }\n\n  // ===========================\n\n  key_enum() {\n    const result = []\n    let atom = this as $me_atom2<any>\n    while (atom._key_gen) {\n      const key_enum = atom._key_gen.value()\n      result.push(key_enum)\n      // atom = atom.by_path(new $me_atom2_path({ent: $me_atom2_entity_enum.key, tail: key_enum[0]})) as $me_atom2<any>\n      atom = atom._entities.key[key_enum[0]] as $me_atom2<any>\n    }\n    return result\n  }\n\n  // ===========================\n\n  protected _on_active() {\n    if (this.fn_apply && this._state === $me_atom2_state_enum.invalid) {\n      $me_atom2.add_to_update(this)\n      // $me_atom2.to_update.add(this)\n      // $me_atom2_async()\n    }\n  }\n\n  // ===========================\n\n  private _masters(): string[] {\n    const masters = this.masters\n    return (\n      Array.isArray(masters) ? masters :\n      masters instanceof $me_atom2 ? (masters as $me_atom2<string[]>).value() :\n      []\n    ) as string[]\n  }\n\n  // ===========================\n\n  private static _waiting_for_atom_def = <{\n    [name: string]: Map<$me_atom2_path, string>\n  }>{}\n\n  // ===========================\n\n  static to_def = Array<$me_atom2_def<any>>()\n\n  // ===========================\n\n  static to_update_first = new Set<$me_atom2<any>>()\n  static to_update_second = new Set<$me_atom2<any>>()\n  static to_update_third = new Set<$me_atom2<any>>()\n  private static _update_order = ['#keys', '#masters', '']\n  private static _update_atoms_debug = false\n  private static did_not_apply = false\n  static add_to_update(atom: $me_atom2<any>) {\n    const to_update =\n      atom.path.tail == '#keys' ? $me_atom2.to_update_first :\n      atom.path.tail == '#masters' ? $me_atom2.to_update_second :\n      $me_atom2.to_update_third\n    to_update.add(atom)\n    $me_atom2_async()\n  // if (atom.name() == '/@app@workspace@search@panelResult@grid@row[17].#top') console.warn(atom.name(), atom.parent()._waiting_for)\n  }\n  static compute_timing = 0\n  static compute_count = 0\n  static update_timing = 0\n  static update_count = 0\n  static pure_compute_count = 0\n  static pure_compute_timing = 0\n  static update_atoms(deadline: number, last_now: number) {\n    const pre = performance.now() - last_now\n    let count = 0\n// const ss : string[] = []\n    // $me_atom2.compute_timing = 0\n    const start = performance.now()\n    while (\n      $me_atom2.to_update_first.size ||\n      $me_atom2.to_update_second.size ||\n      $me_atom2.to_update_third.size\n    ) {\n      const to_update =\n        $me_atom2.to_update_first.size ? $me_atom2.to_update_first :\n        $me_atom2.to_update_second.size ? $me_atom2.to_update_second :\n        $me_atom2.to_update_third\n      for (const atom of to_update) {\n        to_update.delete(atom)\n        if (\n          atom._active &&\n          atom._state != $me_atom2_state_enum.valid) {\n          atom.update()\n// ss.push(atom.name())\n          count++\n        }\n      }\n    }\n    // if (count) console.log(performance.now() - start, $me_atom2.compute_timing)\n// if (ss.length) console.log(ss)\n    return [count, pre]\n  }\n\n  // ===========================\n  static anim_to_play = new Map<$me_atom2_path, $me_atom2_anim_to_play_intf<any>>()\n  static anim_start(anim: $me_atom2_anim_to_play_intf, t: number) {\n    if (anim.start == null)\n      anim.start = anim.progress == null ? t :\n        t - anim.delay - Math.min(1, anim.progress) * anim.duration\n  }\n  static anim_active<Value=number>(anim: $me_prop_anim_intf<Value>, active: boolean) {\n    if (!anim.path_active) return\n    const atom_active = $me_atom2_entity.root().by_path(anim.path_active) as $me_atom2<boolean>\n    if (!atom_active) return\n\n    atom_active.value(active)\n  }\n  static anim_stop(path: $me_atom2_path) {\n    if (!$me_atom2.anim_to_play.has(path)) return\n    const anim = $me_atom2.anim_to_play.get(path)\n  // console.error(path.toString())\n    $me_atom2.anim_to_play.delete(path)\n    $me_atom2.anim_active(anim, false)\n    $me_atom2.anim_fini(anim, path)\n  }\n  static anim_fini(anim: $me_atom2_anim_intf<any>, path: $me_atom2_path) {\n    if (anim.fini) {\n      const atom = $me_atom2_entity.root().by_path(path) as $me_atom2\n      if (atom instanceof $me_atom2) {\n        const prev = a.curr\n        a.curr = atom\n        anim.fini()\n        a.curr = prev\n      }\n    }\n  }\n  // ===========================\n  static fn_compute_false() {\n    return false\n  }\n  static fn_compute_true() {\n    return true\n  }\n  static fn_compute_zero() {\n    return 0\n  }\n}\nexport interface $me_atom2_key_idx_changed_p_intf {\n  key: string[],\n  change: {\n    idx_curr?: number,\n    idx_prev?: number,\n    i_key?: number,\n  },\n}\nexport type $me_atom2_key_idx_changed_fn = (p: $me_atom2_key_idx_changed_p_intf) => void\n\ninterface compute_result_intf<Value> {\n  ret?: Value | $me_atom2_anim_class<Value>,\n  state?: Error | $me_atom2_state_complex,\n}\n\nexport type $me_atom2_state_type =\n  string |\n  Error |\n  $me_atom2_state_enum |\n  $me_atom2_state_complex\n\n\nexport type $me_atom2_state_complex = Set<string>\n\nexport enum $me_atom2_state_enum {invalid, valid, need_check}\n\nexport type $me_atom2_masters_type =\n  string[] | $me_atom2<string[]>\n\n\n// ==========================================================================\n\nexport type $me_atom2_def_masters_type =\n  string[] | $me_atom2_masters_prop_intf\n\nexport type $me_atom2_masters_prop_intf =\n  $me_atom2_prop_def_compute_intf<string[]>\n\n// ==========================================================================\n\nexport function $me_atom2_anim<Value=number>(anim: $me_atom2_anim_intf<Value>) {\n  return new $me_atom2_anim_class<Value>(anim)\n}\n\nexport type $me_atom2_anim_fn<Value> =\n  (p: {from: Value, to:Value, easing: $me_easing_func, progress: number}) => Value\n\nexport interface $me_prop_anim_intf<Value=number> {\n  from?: Value,\n  delay?: number,\n  duration?: number,\n  easing?: $me_easing_func,\n  fn?: $me_atom2_anim_fn<Value>,\n  path_active?: $me_atom2_path,\n  fini?: $me_fn<void>,\n}\n\nexport interface $me_atom2_anim_intf<Value=number>\n  extends $me_prop_anim_intf<Value>\n  {\n    to: Value,\n  }\n\nexport interface $me_atom2_anim_to_play_intf<Value=number>\n  extends $me_atom2_anim_intf<Value>\n  {\n    value: Value,\n    start?: number,\n    progress?: number,\n  }\n\nexport class $me_atom2_anim_class<Value=number> {\n  public _anim: $me_atom2_anim_intf<Value>\n  constructor(anim: $me_atom2_anim_intf<Value>) {\n    this._anim = {\n      ...anim,\n      delay: anim.delay || 0,\n      duration: anim.duration || 200,\n      easing: anim.easing || $me_easing.easeInOutQuad,\n    }\n  }\n}\n\n// ==========================================================================\n\nexport type $me_atom2_compute_fn<Value=number, Masters=any[]> =\n  (p: $me_atom2_compute_fn_p_intf<Value, Masters>) => Value | $me_atom2_anim_class<Value>\n\nexport interface $me_atom2_compute_fn_p_intf<Value=number, Masters=any[]>\n  extends $me_atom2_keys_intf\n  {\n    atom: $me_atom2<Value>,\n    prev: Value,\n    len: number,\n    masters: Masters,\n  }\n\nexport type $me_atom2_apply_fn<Value=number> =\n  (p: $me_atom2_apply_fn_p_intf<Value>) => Value | void\n\nexport interface $me_atom2_apply_fn_p_intf<Value=number>\n  extends $me_atom2_keys_intf\n  {\n    atom: $me_atom2<Value>,\n    prev: Value,\n    val: Value,\n  }\n\nexport interface $me_atom2_keys_intf {\n  len_key?: number,\n  keys?: string[],\n  key?: string[],\n  key_enum?: string[][],\n}\n\n// ==========================================================================\n\nexport interface $me_atom2_a {\n  <Value=number>(path_s: string, val?: Value, force?: boolean): Value,\n  curr?: $me_atom2_entity,\n  root: () => $me_atom2_entity,\n  get: (path_s: string) => string | $me_atom2_entity,\n  dispatch: <Arg=any>(path: string | $me_atom2_path, dispatch_name?: string, dispatch_arg?: Arg) => Arg,\n  update<Value=number>(path_s: string, fn: (val: Value) => Value, force?: boolean): Value,\n}\n\nexport const a: $me_atom2_a = (window as any).a = Object.assign(\n  <Value=number>(path_s: string, val?: Value, force?: boolean): Value => {\n    const relative_to = ((a as any).curr as $me_atom2_entity) || $me_atom2_entity.root()\n    const atom = relative_to.by_path_s(path_s) as $me_atom2<Value>\n    if (typeof atom === 'string') $me_throw(`atom '${atom}' does not exist`)\n    if (!(atom instanceof $me_atom2)) $me_throw(`entity '${atom}' is not $me_atom2`, atom)\n    return atom.value(val, force)\n  },\n  {\n    root: () => $me_atom2_entity.root(),\n    get(path_s: string) {\n      const relative_to = ((a as any).curr as $me_atom2_entity) || $me_atom2_entity.root()\n      return !path_s ? relative_to : relative_to.by_path_s(path_s)\n    },\n    dispatch<Arg=any>(path: string | $me_atom2_path, dispatch_name?: string, dispatch_arg?: Arg) {\n      const entity =\n        path instanceof $me_atom2_path ? $me_atom2_entity.root().by_path(path as $me_atom2_path) :\n        path as string ? a.get(path as string) as $me_atom2_entity :\n        a.curr instanceof $me_atom2_ec ? a.curr :\n        (a.curr as $me_atom2).parent(true)\n      if (typeof entity == 'string') $me_throw(`${entity} does not exist`)\n      if (!(entity instanceof $me_atom2_ec)) $me_throw(`${entity.name()} is not $me_atom2_ec`, entity)\n      const ec = entity as $me_atom2_ec\n      if (!dispatch_name) dispatch_name = a.curr.name()\n      const ret = ec.dispatch(dispatch_name, dispatch_arg)\n      if (!ret) $me_throw(`failed dispatch(\"${dispatch_name}\", ${dispatch_arg}) on ${ec.name()}`)\n      return dispatch_arg\n    },\n    update<Value=number>(path_s: string, fn: (val: Value) => Value, force?: boolean): Value {\n      const relative_to = ((a as any).curr as $me_atom2_entity) || $me_atom2_entity.root()\n      const atom = relative_to.by_path_s(path_s) as $me_atom2<Value>\n      if (typeof atom === 'string') $me_throw(`atom '${atom}' does not exist`)\n      if (!(atom instanceof $me_atom2)) $me_throw(`entity '${atom}' is not $me_atom2`, atom)\n      const val = atom.value()\n      const ret = fn(val)\n      if (ret === void 0) $me_throw('update returned undefined for val', val)\n      atom.value(ret, force)\n      return ret\n    },\n  }\n)\n\n// ==========================================================================\n}\n","namespace $.$$ {\n\n// ============================================================================\n\nexport interface $me_atom2_ctx_size_intf {\n  pixelRatio: number,\n  width: number,\n  height: number,\n}\n\n// ============================================================================\n\ninterface ctx_intf {\n  ctx: CanvasRenderingContext2D,\n}\n\nexport interface ctx_rect_p_base_intf\n  extends ctx_intf\n  {\n    ctxRect?: $me_rect_intf,\n    ctxTop?: number,\n    ctxLeft?: number,\n    ctxWidth?: number,\n    ctxHeight?: number,\n    fillStyle?: string,\n  }\n\nexport interface $me_atom2_ctx_rect_p_intf\n  extends ctx_rect_p_base_intf\n  {\n    // ctxBorderRadius?: number,\n    ctxBorderRadius?: number | $me_rect_corners_intf,\n    stroke?: {\n      style: string | $me_rect_sides_intf<string>,\n      ctxWidth: number | $me_rect_sides_intf,\n    }\n  }\n\nexport function $me_atom2_ctx_rect(p: $me_atom2_ctx_rect_p_intf) {\n  ctx_rect_helper(p)\n  if (!p.stroke ||\n      (null == p.stroke.ctxWidth || typeof p.stroke.ctxWidth == 'number') &&\n      (null == p.stroke.style || typeof p.stroke.style == 'string')\n  ) {\n    ctx_rect_rounded(p, p.stroke && (p.stroke.ctxWidth as number) || 0)\n    fill_stroke({...p, stroke: p.stroke && { ctxWidth: p.stroke.ctxWidth as number, style: p.stroke.style as string }})\n    // console.warn(p.stroke.style, p.stroke.ctxWidth)\n  } else {\n    if (!(p.fillStyle == 'transparent' || p.fillStyle == null)) {\n      ctx_rect_rounded(p)\n      fill({...p})\n    }\n\n    const ctxStrokeStyleLeft = (typeof p.stroke.style == 'string' ? p.stroke.style as string : (p.stroke.style as $me_rect_sides_intf<string>).left) || 'transparent'\n    const ctxStrokeWidthLeft =\n    // !ctxStrokeStyleLeft ? 0 :\n    typeof p.stroke.ctxWidth == 'number' ? p.stroke.ctxWidth as number : (p.stroke.ctxWidth as $me_rect_sides_intf).left || 0\n\n    const ctxStrokeStyleTop = (typeof p.stroke.style == 'string' ? p.stroke.style as string : (p.stroke.style as $me_rect_sides_intf<string>).top) || 'transparent'\n    const ctxStrokeWidthTop =\n    // !ctxStrokeStyleTop ? 0 :\n    typeof p.stroke.ctxWidth == 'number' ? p.stroke.ctxWidth as number : (p.stroke.ctxWidth as $me_rect_sides_intf).top || 0\n\n    const ctxStrokeStyleRight = (typeof p.stroke.style == 'string' ? p.stroke.style as string : (p.stroke.style as $me_rect_sides_intf<string>).right) || 'transparent'\n    const ctxStrokeWidthRight =\n    // !ctxStrokeStyleRight ? 0 :\n    typeof p.stroke.ctxWidth == 'number' ? p.stroke.ctxWidth as number : (p.stroke.ctxWidth as $me_rect_sides_intf).right || 0\n\n    const ctxStrokeStyleBottom = (typeof p.stroke.style == 'string' ? p.stroke.style as string : (p.stroke.style as $me_rect_sides_intf<string>).bottom) || 'transparent'\n    const ctxStrokeWidthBottom =\n    // !ctxStrokeStyleBottom ? 0 :\n    typeof p.stroke.ctxWidth == 'number' ? p.stroke.ctxWidth as number : (p.stroke.ctxWidth as $me_rect_sides_intf).bottom || 0\n\n    let x: number, y: number\n    const ctxBorderRadiusLeftTop =\n      !ctxStrokeWidthLeft || !ctxStrokeWidthTop || ctxStrokeStyleLeft == 'transparent' || ctxStrokeStyleTop == 'transparent' ? 0 :\n      p.ctxBorderRadius && (typeof p.ctxBorderRadius == 'number' ? p.ctxBorderRadius as number : (p.ctxBorderRadius as $me_rect_corners_intf).leftTop) || 0\n    const ctxBorderRadiusRightTop =\n      !ctxStrokeWidthRight || !ctxStrokeWidthTop || ctxStrokeStyleRight == 'transparent' || ctxStrokeStyleTop == 'transparent'  ? 0 :\n      p.ctxBorderRadius && (typeof p.ctxBorderRadius == 'number' ? p.ctxBorderRadius as number : (p.ctxBorderRadius as $me_rect_corners_intf).rightTop) || 0\n    const ctxBorderRadiusRightBottom =\n      !ctxStrokeWidthRight || !ctxStrokeWidthBottom || ctxStrokeStyleRight == 'transparent' || ctxStrokeStyleBottom == 'transparent'  ? 0 :\n      p.ctxBorderRadius && (typeof p.ctxBorderRadius == 'number' ? p.ctxBorderRadius as number : (p.ctxBorderRadius as $me_rect_corners_intf).rightBottom) || 0\n    const ctxBorderRadiusLeftBottom =\n      !ctxStrokeWidthLeft || !ctxStrokeWidthBottom || ctxStrokeStyleLeft == 'transparent' || ctxStrokeStyleBottom == 'transparent'  ? 0 :\n      p.ctxBorderRadius && (typeof p.ctxBorderRadius == 'number' ? p.ctxBorderRadius as number : (p.ctxBorderRadius as $me_rect_corners_intf).leftBottom) || 0\n\n      // p.ctx.beginPath()\n      // p.ctx.moveTo(\n      //   Math.round(x = p.ctxLeft),\n      //   Math.round(y = p.ctxTop + ctxStrokeWidthTop / 2)\n      // )\n      // p.ctx.lineTo(\n      //   Math.round(x += 20),\n      //   Math.round(y),\n      // )\n      // stroke({ctx: p.ctx, stroke: {style: 'blue', ctxWidth: ctxStrokeWidthTop}})\n      // x = null\n\n    if (ctxStrokeWidthTop && ctxStrokeStyleTop != 'transparent') {\n      p.ctx.beginPath()\n\n      p.ctx.moveTo(\n        Math.round(x = p.ctxLeft + (ctxStrokeStyleLeft == 'transparent' ? 0 : ctxStrokeWidthLeft / 2)),\n        Math.round(y = p.ctxTop + ctxBorderRadiusLeftTop + ctxStrokeWidthTop / 2)\n      )\n      // console.log({ctxStrokeStyleLeft, ctxStrokeWidthLeft, x}, p.ctxLeft)\n      if (ctxStrokeWidthLeft == ctxStrokeWidthTop && ctxStrokeStyleLeft == ctxStrokeStyleTop) {\n        p.ctx.arc(\n          Math.round(x += ctxBorderRadiusLeftTop),\n          Math.round(y -= 0), Math.round(ctxBorderRadiusLeftTop),\n          Math.PI, - Math.PI / 2,\n          false\n        )\n      } else if (ctxStrokeWidthLeft && ctxStrokeStyleLeft != 'transparent') {\n        console.error({ctxStrokeWidthLeft, ctxStrokeWidthTop, ctxStrokeStyleLeft, ctxStrokeStyleTop})\n      }\n      p.ctx.lineTo(\n        Math.round(x += p.ctxWidth - ctxBorderRadiusLeftTop - ctxBorderRadiusRightTop - (ctxStrokeStyleLeft == 'transparent' ? 0 : ctxStrokeWidthLeft / 2) - (ctxStrokeStyleRight == 'transparent' ? 0 : ctxStrokeWidthRight / 2)),\n        Math.round(y -= ctxBorderRadiusLeftTop)\n      )\n      if (ctxStrokeWidthRight != ctxStrokeWidthTop || ctxStrokeStyleRight != ctxStrokeStyleTop) {\n        // p.ctx.closePath()\n        stroke({ctx: p.ctx, stroke: {style: ctxStrokeStyleTop, ctxWidth: ctxStrokeWidthTop}})\n        // console.log({ctxStrokeStyleTop})\n        x = null\n      }\n    }\n    if (ctxStrokeWidthRight && ctxStrokeStyleRight != 'transparent') {\n      if (x == null) {\n        p.ctx.beginPath()\n        p.ctx.moveTo(\n          Math.round(x = p.ctxLeft + p.ctxWidth - ctxBorderRadiusLeftTop - ctxBorderRadiusRightTop - ctxStrokeWidthLeft / 2),\n          Math.round(y = p.ctxTop + ctxStrokeWidthTop / 2)\n        )\n      }\n      if (ctxStrokeWidthTop == ctxStrokeWidthRight && ctxStrokeStyleTop == ctxStrokeStyleRight) {\n        p.ctx.arc(\n          Math.round(x += 0),\n          Math.round(y += ctxBorderRadiusRightTop),\n          Math.round(ctxBorderRadiusRightTop),\n          - Math.PI / 2, 0,\n          false\n        )\n      } else if (ctxStrokeWidthTop && ctxStrokeStyleTop != 'transparent') {\n        console.error({ctxStrokeWidthTop, ctxStrokeWidthRight, ctxStrokeStyleTop, ctxStrokeStyleRight})\n      }\n      p.ctx.lineTo(Math.round(x += ctxBorderRadiusRightTop), Math.round(y += p.ctxHeight - ctxBorderRadiusRightTop - ctxBorderRadiusRightBottom - ctxStrokeWidthTop / 2 - ctxStrokeWidthBottom / 2))\n      if (ctxStrokeWidthBottom != ctxStrokeWidthRight || ctxStrokeStyleBottom != ctxStrokeStyleRight) {\n        // p.ctx.closePath()\n        stroke({ctx: p.ctx, stroke: {style: ctxStrokeStyleRight, ctxWidth: ctxStrokeWidthRight}})\n        // console.log({ctxStrokeStyleRight})\n        x = null\n      }\n    // } else {\n      // console.warn({ctxStrokeWidthRight})\n    }\n    if (ctxStrokeWidthBottom && ctxStrokeStyleBottom != 'transparent') {\n      if (x == null) {\n        p.ctx.beginPath()\n        p.ctx.moveTo(\n          Math.round(x = p.ctxLeft + p.ctxWidth - (ctxStrokeStyleRight == 'transparent' ? 0 : ctxStrokeWidthRight / 2)),\n          Math.round(y = p.ctxTop + p.ctxHeight - ctxBorderRadiusRightBottom - ctxStrokeWidthBottom / 2)\n        )\n      }\n      if (ctxStrokeWidthRight == ctxStrokeWidthBottom && ctxStrokeStyleRight == ctxStrokeStyleBottom) {\n        p.ctx.arc(\n          Math.round(x -= ctxBorderRadiusRightBottom),\n          Math.round(y += 0),\n          Math.round(ctxBorderRadiusRightBottom),\n          0, Math.PI / 2,\n          false,\n        )\n      } else if (ctxStrokeWidthRight && ctxStrokeStyleRight != 'transparent') {\n        console.error({ctxStrokeWidthRight, ctxStrokeWidthBottom, ctxStrokeStyleRight, ctxStrokeStyleBottom})\n      }\n      p.ctx.lineTo(\n        Math.round(x -= p.ctxWidth - ctxBorderRadiusLeftBottom - ctxBorderRadiusRightBottom - (ctxStrokeStyleRight == 'transparent' ? 0 : ctxStrokeWidthRight / 2) - (ctxStrokeStyleLeft == 'transparent' ? 0 : ctxStrokeWidthLeft / 2)),\n        Math.round(y += ctxBorderRadiusRightBottom)\n      )\n      if (ctxStrokeWidthLeft != ctxStrokeWidthBottom || ctxStrokeStyleLeft != ctxStrokeStyleBottom) {\n        // p.ctx.closePath()\n        stroke({ctx: p.ctx, stroke: {style: ctxStrokeStyleBottom, ctxWidth: ctxStrokeWidthBottom}})\n        // console.log({ctxStrokeStyleBottom})\n        x = null\n      }\n    }\n    if (ctxStrokeWidthLeft && ctxStrokeStyleLeft != 'transparent') {\n      // console.warn({ctxStrokeWidthLeft})\n      if (x == null) {\n        p.ctx.beginPath()\n        p.ctx.moveTo(\n          Math.round(x = p.ctxLeft + ctxBorderRadiusLeftTop + ctxStrokeWidthLeft / 2),\n          Math.round(y = p.ctxTop + p.ctxHeight - ctxBorderRadiusLeftTop - ctxStrokeWidthBottom / 2)\n        )\n      }\n      if (ctxStrokeWidthBottom == ctxStrokeWidthLeft && ctxStrokeStyleBottom == ctxStrokeStyleLeft) {\n        p.ctx.arc(\n          Math.round(x -= 0),\n          Math.round(y -= ctxBorderRadiusLeftBottom),\n          Math.round(ctxBorderRadiusLeftBottom),\n          Math.PI / 2, Math.PI,\n          false,\n        )\n      } else if (ctxStrokeWidthBottom && ctxStrokeStyleBottom != 'transparent') {\n        console.error({ctxStrokeWidthLeft, ctxStrokeWidthTop, ctxStrokeStyleLeft, ctxStrokeStyleTop})\n      }\n      p.ctx.lineTo(\n        Math.round(x -= ctxBorderRadiusLeftBottom),\n        Math.round(y -= p.ctxHeight - ctxBorderRadiusLeftTop - ctxBorderRadiusLeftBottom - ctxStrokeWidthTop / 2 - ctxStrokeWidthBottom / 2),\n      )\n      // p.ctx.closePath()\n      stroke({ctx: p.ctx, stroke: {style: ctxStrokeStyleLeft, ctxWidth: ctxStrokeWidthLeft}})\n      // console.log({ctxStrokeStyleLeft})\n    }\n  }\n}\n\nfunction ctx_rect_rounded(p: $me_atom2_ctx_rect_p_intf, ctxStrokeWidth = 0) {\n  p.ctx.beginPath()\n  if (!p.ctxBorderRadius) {\n// console.log({ctxStrokeWidth})\n    p.ctx.rect(\n      Math.round(p.ctxLeft + ctxStrokeWidth / 2),\n      Math.round(p.ctxTop + ctxStrokeWidth / 2),\n      Math.round(p.ctxWidth - ctxStrokeWidth),\n      Math.round(p.ctxHeight - ctxStrokeWidth),\n    )\n  } else {\n    let x: number, y: number\n\n    const ctxBorderRadiusLeftTop = p.ctxBorderRadius && (typeof p.ctxBorderRadius == 'number' ? p.ctxBorderRadius as number : (p.ctxBorderRadius as $me_rect_corners_intf).leftTop) || 0\n    const ctxBorderRadiusRightTop = p.ctxBorderRadius && (typeof p.ctxBorderRadius == 'number' ? p.ctxBorderRadius as number : (p.ctxBorderRadius as $me_rect_corners_intf).rightTop) || 0\n    const ctxBorderRadiusRightBottom = p.ctxBorderRadius && (typeof p.ctxBorderRadius == 'number' ? p.ctxBorderRadius as number : (p.ctxBorderRadius as $me_rect_corners_intf).rightBottom) || 0\n    const ctxBorderRadiusLeftBottom = p.ctxBorderRadius && (typeof p.ctxBorderRadius == 'number' ? p.ctxBorderRadius as number : (p.ctxBorderRadius as $me_rect_corners_intf).leftBottom) || 0\n\n    p.ctx.moveTo(Math.round(x = p.ctxLeft + ctxStrokeWidth / 2), Math.round(y = p.ctxTop + ctxBorderRadiusLeftTop + ctxStrokeWidth / 2))\n    p.ctx.arc(Math.round(x += ctxBorderRadiusLeftTop), Math.round(y -= 0), Math.round(ctxBorderRadiusLeftTop), Math.PI, - Math.PI / 2, false)\n\n    p.ctx.lineTo(Math.round(x += p.ctxWidth - ctxBorderRadiusLeftTop - ctxBorderRadiusRightTop - ctxStrokeWidth), Math.round(y -= ctxBorderRadiusLeftTop))\n    p.ctx.arc(Math.round(x += 0), Math.round(y += ctxBorderRadiusRightTop), Math.round(ctxBorderRadiusRightTop), - Math.PI / 2, 0, false)\n\n    p.ctx.lineTo(Math.round(x += ctxBorderRadiusRightTop), Math.round(y += p.ctxHeight - ctxBorderRadiusRightTop - ctxBorderRadiusRightBottom - ctxStrokeWidth))\n    p.ctx.arc(Math.round(x -= ctxBorderRadiusRightBottom), Math.round(y += 0), Math.round(ctxBorderRadiusRightBottom), 0, Math.PI / 2, false)\n\n    p.ctx.lineTo(Math.round(x -= p.ctxWidth - ctxBorderRadiusLeftBottom - ctxBorderRadiusRightTop - ctxStrokeWidth), Math.round(y += ctxBorderRadiusRightBottom))\n    p.ctx.arc(Math.round(x -= 0), Math.round(y -= ctxBorderRadiusLeftBottom), Math.round(ctxBorderRadiusLeftBottom), Math.PI / 2, Math.PI, false)\n\n    p.ctx.closePath()\n  }\n}\n\nfunction ctx_rect_helper(p: $me_atom2_ctx_rect_p_intf) {\n  if (void 0 === p.ctxLeft && p.ctxRect) p.ctxLeft = p.ctxRect.left\n  if (void 0 === p.ctxTop && p.ctxRect) p.ctxTop = p.ctxRect.top\n  if (void 0 === p.ctxWidth && p.ctxRect) p.ctxWidth = p.ctxRect.right - p.ctxRect.left\n  if (void 0 === p.ctxHeight && p.ctxRect) p.ctxHeight = p.ctxRect.bottom - p.ctxRect.top\n}\n\n// ============================================================================\n\nexport interface $me_atom2_ctx_cross_p_intf extends\n  ctx_rect_p_base_intf,\n  ctx_fill_stroke_intf\n{}\n\nexport function $me_atom2_ctx_cross(p: $me_atom2_ctx_cross_p_intf) {\n  ctx_rect_helper(p)\n  const ctxStrokeWidth = p.stroke && p.stroke.ctxWidth || 0\n  const ctxSemiLineWidth = ctxStrokeWidth / 2\n  const ctxLeft = p.ctxLeft + ctxSemiLineWidth\n  const ctxRight = p.ctxLeft + p.ctxWidth - ctxSemiLineWidth\n  const ctxTop = p.ctxTop + ctxSemiLineWidth\n  const ctxBottom = p.ctxTop + p.ctxHeight - ctxSemiLineWidth\n  p.ctx.beginPath()\n  p.ctx.moveTo(ctxLeft, ctxTop)\n  p.ctx.lineTo(ctxRight, ctxBottom)\n  p.ctx.moveTo(ctxLeft, ctxBottom)\n  p.ctx.lineTo(ctxRight, ctxTop)\n  fill_stroke(p)\n}\n\n// ============================================================================\n\nexport interface $me_atom2_ctx_circle_p_intf\n  extends $me_atom2_ctx_fill_stroke_intf\n  {\n    ctxCenterX: number,\n    ctxCenterY: number,\n    ctxRadius: number,\n  }\n\nexport function $me_atom2_ctxCenterOf(p: $me_atom2_ctx_rect_p_intf) {\n  ctx_rect_helper(p)\n  return {\n    ctxCenterX: p.ctxLeft + p.ctxWidth / 2,\n    ctxCenterY: p.ctxTop + p.ctxHeight / 2,\n  }\n}\n\nexport function $me_atom2_ctxWidthOf(p: $me_atom2_ctx_rect_p_intf) {\n  ctx_rect_helper(p)\n  return p.ctxWidth\n}\n\nexport function $me_atom2_ctxHeightOf(p: $me_atom2_ctx_rect_p_intf) {\n  ctx_rect_helper(p)\n  return p.ctxHeight\n}\n\nexport function $me_atom2_ctx_circle(p: $me_atom2_ctx_circle_p_intf) {\n  const ctxStrokeWidth = p.stroke && p.stroke.ctxWidth || 0\n  const ctxSemiLineWidth = ctxStrokeWidth / 2\n  p.ctx.beginPath()\n  p.ctx.arc(\n    Math.round(p.ctxCenterX),\n    Math.round(p.ctxCenterY),\n    Math.round(p.ctxRadius - ctxSemiLineWidth),\n    0, 2 * Math.PI\n  )\n  p.ctx.closePath()\n  fill_stroke(p)\n}\n\n// ============================================================================\n\ninterface ctx_fill_intf {\n  fillStyle?: string,\n}\n\ninterface ctx_stroke_intf {\n  stroke?: {\n    style: string\n    ctxWidth: number,\n  }\n}\n\ninterface ctx_fill_stroke_intf\n  extends ctx_fill_intf, ctx_stroke_intf\n  {}\n\nexport interface $me_atom2_ctx_fill_intf\n  extends ctx_intf, ctx_fill_intf\n  {}\n\nexport interface $me_atom2_ctx_stroke_intf\n  extends ctx_intf, ctx_stroke_intf\n  {}\n\nexport interface $me_atom2_ctx_fill_stroke_intf\n  extends ctx_intf, ctx_fill_stroke_intf\n  {}\n\nfunction fill_stroke(p: $me_atom2_ctx_fill_stroke_intf) {\n  fill(p)\n  stroke(p)\n}\n\nfunction fill(p: $me_atom2_ctx_fill_intf) {\n  if (p.fillStyle && p.fillStyle != 'transparent') {\n    p.ctx.fillStyle = p.fillStyle\n    p.ctx.fill()\n  }\n}\n\nfunction stroke(p: $me_atom2_ctx_stroke_intf) {\n  if (p.stroke && p.stroke.ctxWidth && p.stroke.style && p.stroke.style != 'transparent') {\n    p.ctx.strokeStyle = p.stroke.style\n    p.ctx.lineWidth = p.stroke.ctxWidth\n    p.ctx.stroke()\n  }\n}\n\n// ============================================================================\n\nexport function $me_atom2_ctx_check(p: {\n  ctx: CanvasRenderingContext2D,\n  ctxTop: number,\n  ctxLeft: number,\n  ctxWidth: number,\n  ctxHeight: number,\n  stroke: {\n    style: string,\n    ctxWidth: number,\n  }\n  lambda: number,\n  mu: number\n}) {\n  let x: number, y: number\n  p.ctx.beginPath()\n  p.ctx.moveTo(x = p.ctxLeft, y = p.ctxTop + p.ctxHeight * (1 - p.mu))\n  p.ctx.lineTo(x += p.ctxWidth * p.lambda, y += p.ctxHeight * p.mu)\n  p.ctx.lineTo(x += p.ctxWidth * (1 - p.lambda), y -= p.ctxHeight)\n  stroke(p)\n}\n\n// ============================================================================\n\nexport function $me_atom2_ctx_buttom_line_draw(pp: {\n  p: $me_atom2_control_render_p_intf,\n  fn?: (ctxLineY: number) => void,\n  name_atom?: {\n    prefix?: string,\n    lineWidth?: string,\n    colorLine?: string,\n  },\n}) {\n  const {p, fn, name_atom} = pp\n  const val = (prop: string) =>\n    name_atom && name_atom[prop] ? name_atom[prop] :\n    (\n      name_atom && name_atom.prefix ? name_atom && name_atom.prefix : '.'\n    ) + prop\n  const ctxLineWidth = a(val('lineWidth')) * p.pixelRatio\n  const ctxLineY = p.ctxRect.bottom - ctxLineWidth / 2\n  p.ctx.beginPath()\n  if (fn) { fn(ctxLineY) } else {\n    p.ctx.moveTo(p.ctxRect.left, ctxLineY)\n    p.ctx.lineTo(p.ctxRect.right, ctxLineY)\n  }\n  p.ctx.lineWidth = ctxLineWidth\n  p.ctx.strokeStyle = a<string>(val('colorLine'))\n  p.ctx.stroke()\n}\n\n// ============================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nexport enum $me_atom2_pinch_mode {justStarted, init, move, fini }\n\n// const pinch_threshold = .01\n\nexport class $me_atom2_pinch_class {\n  mode: $me_atom2_pinch_mode\n  _start: TouchEvent\n  _end: TouchEvent\n  clientX0: number\n  clientY0: number\n\n  clientX1: number\n  clientY1: number\n\n  distInitial: number\n  distCurrent: number\n  distPrev: number\n  center: $me_point_intf\n\n  start(event: TouchEvent) {\n    this.mode = $me_atom2_pinch_mode.justStarted\n    this._start = event\n\n    this.clientX0 = event.touches[0].clientX\n    this.clientY0 = event.touches[0].clientY\n\n    this.clientX1 = event.touches[1].clientX\n    this.clientY1 = event.touches[1].clientY\n\n    this.distInitial = Math.hypot(this.clientX0 - this.clientX1, this.clientY0 - this.clientY1)\n    // this.distPrev = this.distInitial\n  }\n  accum(event: TouchEvent) {\n    this.clientX0 = event.touches[0].clientX\n    this.clientY0 = event.touches[0].clientY\n\n    this.clientX1 = event.touches[1].clientX\n    this.clientY1 = event.touches[1].clientY\n  }\n  move(event: TouchEvent) {\n    this._end = event\n    this.center = {\n      x: (this.clientX0 + this.clientX1) / 2,\n      y: (this.clientY0 + this.clientY1) / 2,\n    }\n    this.distCurrent = Math.hypot(this.clientX0 - this.clientX1, this.clientY0 - this.clientY1)\n    this.clientX0 = event.touches[0].clientX\n    this.clientX1 = event.touches[1].clientX\n    this.clientY0 = event.touches[0].clientY\n    this.clientY1 = event.touches[1].clientY\n\n    if (this.mode == $me_atom2_pinch_mode.justStarted) {\n      this.mode = $me_atom2_pinch_mode.init\n    }\n    // this.mode =\n    //   this.mode == $me_atom2_pinch_mode.justStarted ?\n    //     $me_atom2_pinch_mode.init :\n    //     $me_atom2_pinch_mode.move\n    $me_atom2_async()\n  }\n  cancel() {\n    this.mode = null\n  }\n  end(event: TouchEvent) {\n    this.mode = $me_atom2_pinch_mode.fini\n    $me_atom2_async()\n  }\n  raf(t: number) {\n    if ($me_atom2_pinch.mode == $me_atom2_pinch_mode.fini && this.distCurrent == null) {\n      this.distCurrent = this.distPrev\n    }\n    const result =\n      this.mode == null ||\n      // $me_atom2_pinch.mode != $me_atom2_pinch_mode.fini && (\n        this.distCurrent == null ||\n        // Math.abs(this.distPrev - this.distCurrent) < pinch_threshold * this.distInitial ||\n        false\n      // )\n?\n        null :\n        <$me_atom2_event_pinch_intf>{\n          start: this._start,\n          end: this._end,\n          distInitial: this.distInitial,\n          distCurrent: this.distCurrent,\n          scale: this.distCurrent / this.distInitial,\n          center: this.center,\n        }\n    if (result)\n      this.distPrev = this.distCurrent\n    // console.log('raf', result)\n\n    return result\n  }\n}\n\nexport let $me_atom2_pinch: $me_atom2_pinch_class\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nexport const $me_atom2_async_raf = (t: number) => {\n  const start = performance.now()\n  const stat = new Map<string, $me_atom2_async_stat_item_intf>()\n\n  if ($me_atom2.anim_to_play.size) {\n\n    $me_atom2.set_state_count = 0\n    fill_stat(stat, 'anim', last_now => {\n      const pre = performance.now() - last_now\n      const anim_to_play = new Array<[$me_atom2, $me_atom2_anim_to_play_intf]>()\n      for (const [path, anim] of $me_atom2.anim_to_play) {\n        // if (path.toString() == '/@app@menu.#width') debugger;//console.log({...anim})\n        if (anim.progress != null)\n          if (anim.progress >= 1) {\n            $me_atom2.anim_stop(path)\n          } else {\n            const atom = $me_atom2.by_path<$me_atom2<any>>(path)\n            if (!atom) {\n              $me_atom2.anim_stop(path)\n            } else {\n              anim_to_play.push([atom, anim])\n            }\n          }\n      }\n      const [count, needReplay] = $me_atom2_async_anim(anim_to_play, t, start)\n      if (needReplay) $me_atom2_async()\n      return [count, pre]\n    }, t)\n  }\n\n  for (const op in ops_event) fill_stat(stat, op, ops_event[op], t)\n\n  $me_atom2_async_stat_show(stat, start, 'ANIMATION_FRAME')\n}\n\nexport function $me_atom2_async_anim(anim_to_play: Array<[$me_atom2, $me_atom2_anim_to_play_intf]>, t: number, start: number): [number, boolean] {\n  let needReplay = false, count = 0\n  for (const [atom, anim] of anim_to_play) {\n    count += 1\n    $me_atom2.anim_start(anim, t)\n    anim.progress = Math.min(1, (t - anim.start - anim.delay) / anim.duration)\n    if (!anim.fn && typeof anim.to !== 'number') $me_throw('anim.fn must be specified')\n    anim.value = anim.fn ?\n      anim.fn({from: anim.from, to: anim.to, easing: anim.easing, progress: anim.progress}) :\n      anim.from + (anim.to - anim.from) * anim.easing(anim.progress)\n    if ($me_atom2.is_valid_value(anim.value)) {\n      atom.set_value(anim.value)\n    } else {\n      console.error(`anim '${atom.name()}' got invalid value ${anim.value}`)\n    }\n    needReplay = true\n  }\n  return [count, needReplay]\n}\n\ninterface ops_intf {\n  [op: string]: fill_stat_fn\n}\n\nconst ops_event = <ops_intf>{\n  mousemove: (last_now: number) => {\n    const pre = performance.now() - last_now\n    let count = 0\n    if ($me_atom2_event_mousemove_to_process) {\n      $me_atom2_event_process('mousemove', $me_atom2_event_mousemove_to_process)\n      $me_atom2_event_mousemove_to_process = null\n      count = 1\n    }\n    return [count, pre]\n  },\n  wheel: (last_now: number) => {\n    const pre = performance.now() - last_now\n    let count = 0\n    if ($me_atom2_event_wheel_to_process) {\n      $me_atom2_event_process('wheel', $me_atom2_event_wheel_to_process)\n      $me_atom2_event_wheel_to_process = null\n      count = 1\n    }\n    return [count, pre]\n  },\n  pinch: (last_now: number, t) => {\n    const pre = performance.now() - last_now\n    let count = 0\n    if ($me_atom2_pinch && $me_atom2_pinch.mode != null) {\n      const event_pinch_to_process = $me_atom2_pinch.raf(t)\n      if (event_pinch_to_process) {\n        if ($me_atom2_pinch.mode == $me_atom2_pinch_mode.init) {\n          $me_atom2_event_process('pinchInit', event_pinch_to_process)\n          $me_atom2_pinch.mode = $me_atom2_pinch_mode.move\n        }\n        if ($me_atom2_pinch.mode == $me_atom2_pinch_mode.move) {\n          $me_atom2_event_process('pinch', event_pinch_to_process)\n        }\n        if ($me_atom2_pinch.mode == $me_atom2_pinch_mode.fini) {\n          $me_atom2_event_process('pinchFini', event_pinch_to_process)\n          $me_atom2_pinch.mode = null\n        }\n        count = 1\n      }\n    }\n    return [count, pre]\n  },\n  wheelTouch: (last_now: number, t) => {\n    const pre = performance.now() - last_now\n    let count = 0\n    // console.log($me_atom2_wheel_touch, $me_atom2_wheel_touch && $me_atom2_wheel_touch.mode)\n    if ($me_atom2_wheel_touch && $me_atom2_wheel_touch.mode != null) {\n      const event_wheel_touch_to_process = $me_atom2_wheel_touch.raf(t)\n      // console.log('event_wheel_touch_to_process', event_wheel_touch_to_process, $me_atom2_wheel_touch.mode)\n      if (event_wheel_touch_to_process) {\n        // console.log($me_atom2_wheel_touch.mode, event_wheel_touch_to_process)\n        // $me_atom2_event_process('wheelTouch', event_wheel_touch_to_process)\n        if ($me_atom2_wheel_touch.mode == $me_atom2_wheel_synth_mode.init) {\n          $me_atom2_event_process('wheelTouchInit', event_wheel_touch_to_process)\n          $me_atom2_wheel_touch.mode = $me_atom2_wheel_synth_mode.move\n        }\n        if ($me_atom2_wheel_touch.mode == $me_atom2_wheel_synth_mode.move || $me_atom2_wheel_synth_mode.end) {\n          $me_atom2_event_process('wheelTouch', event_wheel_touch_to_process)\n        }\n        if ($me_atom2_wheel_touch.mode == $me_atom2_wheel_synth_mode.fini) {\n          $me_atom2_event_process('wheelTouchFini', event_wheel_touch_to_process)\n          $me_atom2_wheel_touch.mode = null\n        }\n        count = 1\n      }\n    }\n    return [count, pre]\n  },\n  wheelDrag: (last_now: number, t) => {\n    const pre = performance.now() - last_now\n    let count = 0\n    if ($me_atom2_wheel_drag && $me_atom2_wheel_drag.mode != null) {\n      // let event_wheel_drag_to_process: $me_atom2_event_wheel_drag_intf\n      const event_wheel_drag_to_process = $me_atom2_wheel_drag.raf(t)\n      if (event_wheel_drag_to_process) {\n        // $me_atom2_event_process('wheelDrag', event_wheel_drag_to_process)\n        if ($me_atom2_wheel_drag.mode == $me_atom2_wheel_synth_mode.init) {\n          $me_atom2_event_process('wheelDragInit', event_wheel_drag_to_process)\n          $me_atom2_wheel_drag.mode = $me_atom2_wheel_synth_mode.move\n        }\n        if ($me_atom2_wheel_drag.mode == $me_atom2_wheel_synth_mode.move || $me_atom2_wheel_synth_mode.end) {\n          $me_atom2_event_process('wheelDrag', event_wheel_drag_to_process)\n        }\n        if ($me_atom2_wheel_drag.mode == $me_atom2_wheel_synth_mode.fini) {\n          $me_atom2_event_process('wheelDragFini', event_wheel_drag_to_process)\n          $me_atom2_wheel_drag.mode = null\n        }\n        count = 1\n      }\n    }\n    return [count, pre]\n  },\n}\n\n\ntype fill_stat_fn = (last_now: number, t: number) => [number, number]\nfunction fill_stat(\n  stat: Map<string, $me_atom2_async_stat_item_intf>,\n  name: string,\n  fn: fill_stat_fn,\n  t: number\n) {\n  const start = performance.now()\n  const [count, pre] = fn(start, t)\n  $me_atom2_async_stat_update(stat, name, count, pre, performance.now() - start)\n}\n\n$me_atom2_async({fn: $me_atom2_async_raf, order: 0})\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nfunction init_ric() {\n  const ops = <{[op: string]: $me_atom2_async_ric_fn}>{\n    init_asyncComplete: (deadline, last_now) => {\n      if (!$me_atom2_async_complete()) {\n        const root_entities = $me_atom2_entity.root()._entities\n        if (root_entities && root_entities.prop) {\n          for (const tail of ['#asyncComplete', '#asyncCompleteIncludingAnimate']) {\n            const atom = root_entities.prop[tail] as $me_atom2<boolean>\n            if (atom) atom.value(false)\n          }\n        }\n      }\n      return [0, 0]\n    },\n    remove_children: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      const count = $me_atom2_elem.remove_children()\n      return [count, pre]\n    },\n    reorder_children: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      const count = $me_atom2_elem.reorder_children()\n      return [count, pre]\n    },\n    def_atom: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      let count = 0\n      while ($me_atom2.to_def.length\n        && performance.now() < deadline\n        ) {\n        const def = $me_atom2.to_def.shift()\n        if ($me_atom2_entity.root().by_path(def.parent.path)) {\n          new $me_atom2(def)\n          count++\n        }\n      }\n      return [count, pre]\n    },\n    set_node_prop: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      const count = $me_atom2_elem.lazy_prop_apply_all()\n      return [count, pre]\n    },\n    activate_entity: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      const count = $me_atom2_entity.activate_entities()\n      return [count, pre]\n    },\n    upd_atom: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      const [count, pre2] = $me_atom2.update_atoms(deadline, performance.now())\n      return [count, pre + pre2]\n    },\n    viewport: (deadline, last_now) => {\n      const root_entities = $me_atom2_entity.root()._entities\n      if (root_entities && root_entities.prop) {\n        for (const tail of ['#viewportChanged', '#viewportWidthChanged', '#viewportHeightChanged', '#pixelRatioChanged']) {\n          const atom = root_entities.prop[tail] as $me_atom2<boolean>\n          if (atom) atom.value(false)\n        }\n      }\n      return [0, 0]\n    },\n    // def_atom: (deadline, last_now) => {\n    //   const pre = performance.now() - last_now\n    //   let count = 0\n    //   while ($me_atom2.to_def.length\n    //     && performance.now() < deadline\n    //     ) {\n    //     const def = $me_atom2.to_def.shift()\n    //     if ($me_atom2_entity.root().by_path(def.parent.path)) {\n    //       new $me_atom2(def)\n    //       count++\n    //     }\n    //   }\n    //   return [count, pre]\n    // },\n    def_control: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      let count = 0\n      while ($me_atom2_control.to_def.length && performance.now() < deadline) {\n        const def = $me_atom2_control.to_def.shift()\n        if ($me_atom2_entity.root().by_path(def.parent.path)) {\n          new $me_atom2_control(def)\n          count++\n        }\n      }\n      return [count, pre]\n    },\n    def_elem: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      let count = 0\n      while ($me_atom2_elem.to_def.length && performance.now() < deadline) {\n        const def = $me_atom2_elem.to_def.shift()\n        if ($me_atom2_entity.root().by_path(def.parent.path)) {\n          new $me_atom2_elem(def)\n          count++\n        }\n      }\n      return [count, pre]\n    },\n    // set_node_prop: (deadline, last_now) => {\n    //   const pre = performance.now() - last_now\n    //   const count = $me_atom2_elem.lazy_prop_apply_all()\n    //   return [count, pre]\n    // },\n    init_ec: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      let count = 0\n      while ($me_atom2_ec._to_init.length && performance.now() < deadline) {\n        const path = $me_atom2_ec._to_init.shift()\n        const ec = $me_atom2_entity.root().by_path(path) as $me_atom2_ec\n        if (!ec || !ec.active()) continue\n        ec.init()\n        count++\n      }\n      return [count, pre]\n    },\n    set_ready: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      for (const ec of $me_atom2_ec.almost_ready)\n        ec._isReady(true)\n      const count = $me_atom2_ec.almost_ready.size\n      $me_atom2_ec.almost_ready.clear()\n      return [count, pre]\n    },\n    // set_node_prop: (deadline, last_now) => {\n    //   const pre = performance.now() - last_now\n    //   const count = $me_atom2_elem.lazy_prop_apply_all()\n    //   return [count, pre]\n    // },\n    render: (deadline, last_now) => {\n      const pre = performance.now() - last_now\n      let count = 0\n\n      if ($me_atom2_control._to_render.size)\n        for (const path of $me_atom2_control._to_render) {\n          $me_atom2_control._to_clean.add(path)\n        }\n      if ($me_atom2_control._to_clean) {\n        $me_atom2_control.clean($me_atom2_control.zIndex_sort($me_atom2_control._to_clean))\n        $me_atom2_control._to_clean.clear()\n      }\n\n      // if (ready_to_render()) {\n      if ($me_atom2_control._to_render.size) {\n        count = $me_atom2_control.render($me_atom2_control.zIndex_sort($me_atom2_control._to_render, true))\n        $me_atom2_control._to_render.clear()\n      }\n      // }\n      if ($me_atom2_control._to_clean.size) console.error($me_atom2_control._to_clean.size)\n      $me_atom2_control.fill_controls_cache_clear()\n      return [count, pre]\n    },\n    fini_asyncComplete: (deadline, last_now) => {\n      if ($me_atom2_async_complete())\n        a('/.#asyncComplete', true)\n      return [0, 0]\n    },\n    anim: (deadline, last_now, t) => {\n      const start = performance.now()\n\n      let needReplay = false\n\n      const pre = performance.now() - last_now\n      let count = 0\n\n      const anim_to_play = new Array<[$me_atom2, $me_atom2_anim_to_play_intf]>()\n      for (const [path, anim] of $me_atom2.anim_to_play) {\n        // if (path.toString() == '/@app@menu.#width') debugger\n        if (anim.delay) {\n          $me_atom2.anim_start(anim, t)\n          if ((t - anim.start) < anim.delay) {\n            needReplay = true\n            continue\n          }\n        }\n        if (anim.progress == null) {\n          const atom = $me_atom2.by_path<$me_atom2<any>>(path)\n          if (atom) {\n            anim_to_play.push([atom, anim])\n          } else {\n            $me_atom2.anim_stop(path)\n          }\n        }\n      }\n\n      if (!$me_atom2_async_complete()) {\n        // console.warn('!$me_atom2_async_complete()')\n\n  // console.log(\n  //   $me_atom2_elem.children_to_add.size,\n  //   $me_atom2_elem.lazy_prop_apply_did(),\n  //   $me_atom2_entity._to_activate.size,\n  //   $me_atom2_control._to_clean.size,\n  //   $me_atom2_control._to_render.size,\n  //       $me_atom2.to_update_first.size,\n  //       $me_atom2.to_update_second.size,\n  //       $me_atom2.to_update_third.size,\n  //   $me_atom2_control.to_def.length,\n  //   $me_atom2_elem.to_def.length,\n  //   $me_atom2.to_def.length,\n  //   $me_atom2_ec._to_init.length,\n  //   $me_atom2_event_mousemove_to_process,\n  //   $me_atom2_event_wheel_to_process,\n  //   $me_atom2_event_wheel_touch_to_process,\n  // )\n        needReplay = true\n      } else {\n        const [_count, _needReplay] = $me_atom2_async_anim(anim_to_play, t, start)\n        count = _count\n        needReplay = _needReplay\n      }\n\n      if (needReplay) $me_atom2_async()\n      return [count, pre]\n    },\n    fini_asyncCompleteIncludingAnimate: (deadline, last_now) => {\n      if ($me_atom2_async_complete(true))\n        a('/.#asyncCompleteIncludingAnimate', true)\n      return [0, 0]\n    },\n  }\n\n  for (const op in ops) $me_atom2_async_ric({name: op, fn: ops[op]})\n}\n\ninit_ric()\n\n// const ready_to_render = () =>\n//   $me_atom2_control._to_render.size &&\n//   !$me_atom2_control.to_def.length &&\n//   !$me_atom2_elem.to_def.length &&\n//   !$me_atom2.to_def.length &&\n//   true\n\n// ==========================================================================\n\nexport const $me_atom2_async_complete = (including_anim = false) => !(\n  $me_atom2_elem.children_to_add.size ||\n  $me_atom2_elem.lazy_prop_apply_did() ||\n  $me_atom2_entity._to_activate.size ||\n  $me_atom2_control._to_clean.size ||\n  $me_atom2_control._to_render.size ||\n      $me_atom2.to_update_first.size ||\n      $me_atom2.to_update_second.size ||\n      $me_atom2.to_update_third.size ||\n  $me_atom2_control.to_def.length ||\n  $me_atom2_elem.to_def.length ||\n  $me_atom2.to_def.length ||\n  $me_atom2_ec._to_init.length ||\n  including_anim && $me_atom2.anim_to_play.size ||\n\n  $me_atom2_event_mousemove_to_process ||\n  $me_atom2_event_wheel_to_process ||\n  // $me_atom2_event_wheel_touch_to_process ||\n\n  false\n)\n\n// ==========================================================================\n\nconst touchstart = (event: TouchEvent) => {\n  if (event.touches.length == 1) {\n    if (!$me_atom2_wheel_touch)\n      $me_atom2_wheel_touch = new $me_atom2_wheel_touch_class()\n    $me_atom2_wheel_touch.start(event)\n  } else {\n    touchAccu = <touch_accu_intf>{\n      clientX0: event.touches[0].clientX,\n      clientX1: event.touches[1].clientX,\n      clientY0: event.touches[0].clientY,\n      clientY1: event.touches[1].clientY,\n      deltaX0: 0,\n      deltaY0: 0,\n      deltaX1: 0,\n      deltaY1: 0,\n    }\n  }\n  return $me_atom2_event_process('touchstart', event)\n}\n\ninterface touch_accu_intf {\n  clientX0: number,\n  clientX1: number,\n  clientY0: number,\n  clientY1: number,\n  deltaX0: number,\n  deltaY0: number,\n  deltaX1: number,\n  deltaY1: number,\n}\n\nlet touchAccu: touch_accu_intf\nconst touchAccu_threshold = 30\n\nconst touchmove = (event: TouchEvent) => {\n  event.preventDefault()\n  if (event.touches.length == 1) {\n    if ($me_atom2_wheel_touch)\n      $me_atom2_wheel_touch.move(event)\n  } else {\n    if (touchAccu) {\n      touchAccu.deltaX0 += event.touches[0].clientX - touchAccu.clientX0\n      touchAccu.deltaX1 += event.touches[1].clientX - touchAccu.clientX1\n      touchAccu.deltaY0 += event.touches[0].clientY - touchAccu.clientY0\n      touchAccu.deltaY1 += event.touches[1].clientY - touchAccu.clientY1\n      if (\n        Math.abs(touchAccu.deltaX0) < touchAccu_threshold &&\n        Math.abs(touchAccu.deltaX1) < touchAccu_threshold &&\n        Math.abs(touchAccu.deltaY0) < touchAccu_threshold &&\n        Math.abs(touchAccu.deltaY1) < touchAccu_threshold &&\n        true\n      ) {\n        touchAccu.clientX0 = event.touches[0].clientX\n        touchAccu.clientX1 = event.touches[1].clientX\n        touchAccu.clientY0 = event.touches[0].clientY\n        touchAccu.clientY1 = event.touches[1].clientY\n      } else {\n        if (\n          Math.sign(touchAccu.deltaX0) *\n          Math.sign(touchAccu.deltaX1) +\n          Math.sign(touchAccu.deltaY0) *\n          Math.sign(touchAccu.deltaY1) +\n          0 >= 1\n        ) {\n          if (!$me_atom2_wheel_touch)\n            $me_atom2_wheel_touch = new $me_atom2_wheel_touch_class()\n          $me_atom2_wheel_touch.start(event)\n        } else {\n          if (!$me_atom2_pinch)\n            $me_atom2_pinch = new $me_atom2_pinch_class()\n          $me_atom2_pinch.start(event)\n        }\n        touchAccu = null\n      }\n    }\n    if (!touchAccu) {\n      if ($me_atom2_pinch && $me_atom2_pinch.mode != null) {\n        $me_atom2_pinch.move(event)\n      } else if ($me_atom2_wheel_touch && $me_atom2_wheel_touch.mode != null) {\n        $me_atom2_wheel_touch.move(event)\n      }\n    }\n  }\n  return $me_atom2_event_process('touchmove', event)\n}\n\nconst touchend = (event: TouchEvent) => {\n  if ($me_atom2_wheel_touch && $me_atom2_wheel_touch.mode != null)\n    $me_atom2_wheel_touch.end(event)\n  if ($me_atom2_pinch && $me_atom2_pinch.mode != null)\n    $me_atom2_pinch.end(event)\n  return $me_atom2_event_process('touchend', event)\n}\n\nconst mousedown = (event: MouseEvent) => {\n  if (!$me_atom2_wheel_drag)\n    $me_atom2_wheel_drag = new $me_atom2_wheel_drag_class()\n  $me_atom2_wheel_drag.start(event)\n  $me_atom2_event_process('mousedown', event)\n}\n\nconst mousemove = (event: MouseEvent) => {\n  $me_atom2_event_mousemove_last = $me_atom2_event_mousemove_to_process = event\n  if ($me_atom2_wheel_drag && event.buttons == 1)\n    $me_atom2_wheel_drag.move(event)\n  $me_atom2_async()\n}\n\nconst mouseup = (event: MouseEvent) => {\n  if ($me_atom2_wheel_drag)\n    $me_atom2_wheel_drag.end(event)\n  $me_atom2_event_process('mouseup', event)\n}\n\nconst wheel = (event: WheelEvent) => {\n  if (!$me_atom2_event_wheel_to_process) {\n    $me_atom2_event_wheel_to_process = event\n    $me_atom2_event_wheel_to_process._deltaX = event.deltaX\n    $me_atom2_event_wheel_to_process._deltaY = event.deltaY\n  } else {\n    $me_atom2_event_wheel_to_process._deltaX =\n      event.deltaX + (\n        Math.sign($me_atom2_event_wheel_to_process._deltaX) * Math.sign(event.deltaX) < 0 ?\n          0 :\n          $me_atom2_event_wheel_to_process._deltaX\n      )\n    $me_atom2_event_wheel_to_process._deltaY =\n      event.deltaY + (\n        Math.sign($me_atom2_event_wheel_to_process._deltaY) * Math.sign(event.deltaY) < 0 ?\n          0 :\n          $me_atom2_event_wheel_to_process._deltaY\n        )\n  }\n  $me_atom2_async()\n  event.preventDefault()\n}\nconst keydown = (event: KeyboardEvent) => $me_atom2_event_keyboard_process('keydown', event)\nconst keyup = (event: KeyboardEvent) => $me_atom2_event_keyboard_process('keyup', event)\n\nfunction _settingsInit() {\n  let asyncCompleteStart: number\n  let asyncCompleteIncludingAnimateStart: number\n  window.addEventListener( 'resize' , function() {\n    const viewport = _viewport()\n    a('/.#viewportWidth', viewport.width)\n    a('/.#viewportHeight', viewport.height)\n    a('/.#pixelRatio', window.devicePixelRatio)\n  })\n  const viewport = _viewport()\n  $me_atom2_entity.root().props({\n    '#ribbonEffectTimeout': () => 250,\n    '#ribbonAbsorbTimeout': () => 150,\n    '#wheelTouchAccelFactor': () => 0.98,\n    '#wheelTouchAccelThreshold': () => 10,\n    '#touchTolerance': () => 22,\n    '#clickTolerance': () => 2,\n    '#tapTolerance': () => 10,\n    '#isTouch': $me_atom2_prop<boolean>([],\n      () => 'ontouchstart' in window,\n      ({val, prev}) => {\n        if (prev != null && prev != val) {\n          if (prev) {\n            document.body.removeEventListener('touchstart', touchstart)\n            document.body.removeEventListener('touchmove', touchmove)\n            document.body.removeEventListener('touchend', touchend)\n          } else {\n            document.body.removeEventListener('mousedown', mousedown)\n            document.body.removeEventListener('mouseup', mouseup)\n            document.body.removeEventListener('mousemove', mousemove)\n            // document.body.removeEventListener('wheel', wheel, {passive: false})\n            document.body.removeEventListener('wheel', wheel)\n            document.body.removeEventListener('keydown', keydown)\n            document.body.removeEventListener('keyup', keyup)\n          }\n        }\n        if (prev !== val) {\n          if (val) {\n            document.body.addEventListener('touchstart', touchstart)\n            document.body.addEventListener('touchmove', touchmove, {passive: false})\n            document.body.addEventListener('touchend', touchend)\n          } else {\n            document.body.addEventListener('mousedown', mousedown)\n            document.body.addEventListener('mouseup', mouseup)\n            document.body.addEventListener('mousemove', mousemove)\n            document.body.addEventListener('wheel', wheel, {passive: false})\n            document.body.addEventListener('keydown', keydown)\n            document.body.addEventListener('keyup', keyup)\n          }\n        }\n      }\n    ),\n\n    '#height': '.#viewportHeight',\n    '#width': '.#viewportWidth',\n    '#left': () => 0,\n    '#top': () => 0,\n    '#isReady': () => true,\n\n    '#viewportChanged': () => false,\n    '#viewportPortrait': () => false,\n    '#viewportWidthChanged': () => false,\n    '#viewportWidth': $me_atom2_prop([],\n      () => viewport.width,\n      ({prev, val}) => {\n        if (prev != val && prev != null) {\n          a('/.#viewportWidthChanged', true)\n          a('/.#viewportChanged', true)\n        }\n      },\n    ),\n    '#viewportHeightChanged': () => false,\n    '#viewportHeight': $me_atom2_prop([],\n      () => viewport.height,\n      ({prev, val}) => {\n        if (prev != val && prev != null) {\n          a('/.#viewportHeightChanged', true)\n          a('/.#viewportChanged', true)\n        }\n      },\n    ),\n    '#pixelRatioChanged': () => false,\n    '#pixelRatio': $me_atom2_prop([],\n      () => window.devicePixelRatio,\n      ({prev, val}) => {\n        if (prev != val && prev != null)\n          a('/.#viewportHeightChanged', true)\n      },\n    ),\n    '#asyncCompleteShow': $me_atom2_prop<boolean>([],\n      ({atom}) => {\n        let val = null as any\n        const name = atom.name()\n        const s = sessionStorage.getItem(name)\n        if (s)\n          try {\n            val = JSON.parse(s)\n          } catch (e) {\n            console.error({name}, e)\n          }\n        return !!val\n      },\n      ({val, atom}) => {\n        const name = atom.name()\n        if (!val) {\n          sessionStorage.removeItem(name)\n        } else {\n          sessionStorage.setItem(name, JSON.stringify(!!val))\n        }\n        return !!val\n      }\n    ),\n    '#asyncComplete': $me_atom2_prop<boolean>([],\n      () => false,\n      ({prev, val}) => {\n        if (!val) {\n          asyncCompleteStart = performance.now()\n        } else if (!prev && a<boolean>('/.#asyncCompleteShow')) {\n          console.log('%casyncComplete', 'background: green; color: white', (performance.now() - asyncCompleteStart).toFixed(0) + 'ms')\n        }\n      }\n    ),\n    '#asyncCompleteIncludingAnimate': $me_atom2_prop<boolean>([],\n      () => false,\n      ({prev, val}) => {\n        if (!val) {\n          asyncCompleteIncludingAnimateStart = performance.now()\n        } else if (!prev && a<boolean>('/.#asyncCompleteShow')) {\n          console.log('%casyncCompleteIncludingAnimate', 'background: yellow; color: black', (performance.now() - asyncCompleteIncludingAnimateStart).toFixed(0) + 'ms')\n        }\n      }\n    ),\n    '#stat': $me_atom2_prop<number[]>([],\n      ({atom}) => {\n        let val = null as any\n        const name = atom.name()\n        const s = sessionStorage.getItem(name)\n        if (s)\n          try {\n            val = JSON.parse(s)\n          } catch (e) {\n            console.error({name}, e)\n          }\n        return val as number[]\n      },\n      ({val, atom}) => {\n        if (val != null)\n          if (Number.isFinite(+val)) {\n            val = [+val]\n          } else if (Array.isArray(val)) {\n            val = (val as Array<number>)\n              .filter((item: any) => Number.isFinite(+item) && +item >= 0)\n              .map((item: any) => +item)\n              .sort((ia: number, ib: number)=> ia - ib)\n              .slice(0, 3)\n            if (!(val as Array<number>).length) val = null\n          }\n        const name = atom.name()\n        if (val == null) {\n          sessionStorage.removeItem(name)\n        } else {\n          sessionStorage.setItem(name, JSON.stringify(val))\n        }\n        return val\n      }\n    ),\n  })\n}\n\nfunction _viewport() {\n  // https://stackoverflow.com/questions/1248081/get-the-browser-_viewport-dimensions-with-javascript\n  const result = {\n    width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n    height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0),\n  }\n  return result\n}\n\n_settingsInit()\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nexport const $me_stylesheet = <$me_atom2_elem_cnf_intf>{\n  prop: {\n  // required:\n    styleSheetName: $me_atom2_prop_abstract<string>(),\n    styleSheet: $me_atom2_prop(['.className'],\n      ({masters: [className]}) => '',\n    ),\n\n  // optional:\n    styleSheetCommon: $me_atom2_prop(['.styleSheet'],\n      ({masters: [styleSheet]}) => '',\n    ),\n\n  // internal:\n    instanceId: () => null as number,\n    styleSheet_apply: $me_atom2_prop(['.styleSheet', '.styleSheetName', '.instanceId'],\n      null,\n      styleSheet_apply_fn,\n    ),\n    styleSheetCommon_apply: $me_atom2_prop(['.styleSheetCommon', '.styleSheetName'],\n      null,\n      styleSheet_apply_fn,\n    ),\n    className: $me_atom2_prop(['.styleSheetName', '.instanceId'],\n      ({masters: [styleSheetName, instanceId]}) => styleSheetName + '-' + instanceId\n    ),\n  },\n  dom: {\n    className: $me_atom2_prop(['.styleSheetName', '.className'],\n      ({masters: [styleSheetName, className]}) => styleSheetName + ' ' + className\n    ),\n  },\n  init: (self) => {\n    const styleSheetName = a<string>('.styleSheetName')\n    if (!instances[styleSheetName])\n      instances[styleSheetName] = new Map<$me_atom2_ec, number>()\n    const ids = [...instances[styleSheetName]].map(([spinner, id]) => id).sort()\n    let id: number\n    for (let i = 0; i < ids.length; i++)\n      if (i != ids[i]) {\n        id = i\n        break\n      }\n    if (id === void 0) id = ids.length\n    a('.instanceId', id)\n    instances[styleSheetName].set(self, id)\n\n    const styleSheetCommon = a<string>('.styleSheetCommon')\n    if (!styleSheetCommon) return\n\n    const styleSheetCommonId = styleSheetId(styleSheetName)\n    if (document.getElementById(styleSheetCommonId )) return\n\n    let sheet = document.createElement('style')\n    sheet.id = styleSheetCommonId\n    sheet.innerHTML = styleSheetCommon\n    let head = document.head || document.getElementsByTagName('head')[0]\n    head.appendChild(sheet)\n  },\n  fini: (self) => {\n    const styleSheetName = a<string>('.styleSheetName')\n\n    removeStyleSheet(styleSheetId(styleSheetName, a('.instanceId')))\n\n    instances[styleSheetName].delete(self)\n    if (instances[styleSheetName].size) return\n    instances[styleSheetName] = null\n\n    removeStyleSheet(styleSheetId(styleSheetName))\n  },\n}\n\nfunction styleSheet_apply_fn(p: any) {\n  const [innerHTML, styleSheetName, instanceId] : [string, string, number] = p.val\n  let sheet: HTMLElement\n  const id = styleSheetId(styleSheetName, instanceId)\n  if (!innerHTML) {\n    removeStyleSheet(id)\n  } else if (sheet = document.getElementById(id)) {\n    if (sheet.innerHTML != innerHTML) sheet.innerHTML = innerHTML\n  } else {\n    sheet = document.createElement('style')\n    sheet.id = id\n    sheet.innerHTML = innerHTML\n    let head = document.head || document.getElementsByTagName('head')[0]\n    head.appendChild(sheet)\n  }\n}\n\nfunction removeStyleSheet(styleSheetId: string) {\n  let sheet = document.getElementById(styleSheetId)\n  if (sheet && sheet.parentElement)\n    sheet.parentElement.removeChild(sheet)\n}\n\nlet instances: {[styleSheetName: string]: Map<$me_atom2_ec, number>} = {}\n\nconst styleSheetId = (styleSheetName: string, instanceId?: number) =>\n  'styleSheet-' + styleSheetName + (instanceId === void 0 ? '' : '-' + instanceId)\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nexport const $me_cross = <$me_atom2_elem_cnf_intf>{\n  type: '$me_cross',\n  base: $me_stylesheet,\n  prop: {\n  // required:\n    size: $me_atom2_prop_abstract(),\n    thick: $me_atom2_prop_abstract(),\n    color: $me_atom2_prop_abstract<string>(),\n\n  // optional:\n    opacity: () => 1,\n    opacityHover: () => 1,\n\n  // internal:\n    '#width': '.size',\n    '#height': '.size',\n\n    styleSheetName: () => 'me_cross',\n    styleSheetCommon: $me_atom2_prop<string>(['.styleSheetName'],\n      ({masters: [className]}) =>\n      // https://codepen.io/brissmyr/pen/egidw\n      `\n        .${className}:before {\n          transform: rotate(45deg);\n        }\n        .${className}:after {\n          transform: rotate(-45deg);\n        }\n      `\n    ),\n    styleSheet: $me_atom2_prop<string>(['.className', '.size', '.thick', '.color', '.opacity', '.opacityHover'],\n      ({masters: [className, size, thick, color, opacity, opacityHover], atom}) =>\n      // https://codepen.io/brissmyr/pen/egidw\n      `\n        .${className} {\n          opacity: ${opacity};\n        }\n        .${className}:hover {\n          opacity: ${opacityHover};\n        }\n        .${className}:before, .${className}:after {\n          position: absolute;\n          left: ${(size - thick) / 2}px;\n          content: '';\n          height: ${size}px;\n          width: ${thick}px;\n          background-color: ${color};\n        }\n      `\n    ),\n  },\n}\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nfunction handle_pinch(scale_new: number, pinch_center: $me_point_intf, prop_name = '.scale') {\n  handle_helper(p => {\n    const width = p.width\n    const height = p.height\n    const scale = a(prop_name)\n    p.width = width / scale * scale_new\n    p.height = height / scale * scale_new\n\n    const width_max = 3500\n    const height_max = 3500\n    const width_netto = p.width_upper - 2 * p.padding_Hor\n    const height_netto = p.height_upper - 2 * p.padding_Ver\n    if (\n      p.width < width_netto &&\n      p.height < height_netto &&\n      true\n    ) {\n      p.scale = Math.min(\n        width_netto / width * scale,\n        height_netto / height * scale,\n      )\n    } else if (p.width > width_max && p.height > height_max) {\n      p.scale = Math.max(\n        width_max / width * scale,\n        height_max / height * scale,\n      )\n    } else {\n      p.scale = scale_new\n    }\n    if (pinch_center.x < p.ofsHor) {\n      pinch_center.x = p.ofsHor\n    } else if (pinch_center.x > p.ofsHor + width) {\n      pinch_center.x = p.ofsHor + width\n    }\n\n    a(prop_name, p.scale)\n    p.width = a('.width_initial') * p.scale\n    p.height = a('.height_initial') * p.scale\n    p.ofsHor += (scale - p.scale) * pinch_center.x\n    p.ofsVer += (scale - p.scale) * pinch_center.y\n  })\n}\n\nfunction handle_move(deltaX: number, deltaY: number) {\n  handle_helper(p => {\n    p.ofsHor -= deltaX\n    p.ofsVer -= deltaY\n  })\n}\n\ninterface handle_helper_p_intf {\n  ofsHor: number,\n  ofsVer: number,\n  scale: number,\n  width: number,\n  height: number,\n  width_upper: number,\n  height_upper: number,\n  padding_Hor: number,\n  padding_Ver: number,\n}\n\nfunction handle_helper(fn: (p: handle_helper_p_intf) => void) {\n\n  const width_upper = a('<.#width')\n  const height_upper = a('<.#height')\n  const padding_Hor = a('.ofsHor_initial')\n  const padding_Ver = a('.ofsVer_initial')\n\n  const p = {\n    ofsHor: a('.ofsHor'),\n    ofsVer: a('.ofsVer'),\n    width: a('.width'),\n    height: a('.height'),\n    scale: a('.scale'),\n    width_upper,\n    height_upper,\n    padding_Hor,\n    padding_Ver,\n  }\n  fn(p)\n\n  const ofsHor_max = Math.max(a('.ofsHor_initial'), (p.width_upper - p.width) / 2)\n  const ofsHor_min =\n    p.width_upper >= p.width ?\n      (p.width_upper - p.width) / 2 :\n      p.width_upper - a('.ofsHor_initial') - p.width\n\n  const ofsVer_max = Math.max(a('.ofsVer_initial'), (p.height_upper - p.height) / 2)\n  const ofsVer_min =\n    p.height_upper >= p.height ?\n      (p.height_upper - p.height) / 2 :\n      p.height_upper - a('.ofsVer_initial') - p.height\n\n  p.ofsHor = Math.round(Math.min(ofsHor_max, Math.max(ofsHor_min, p.ofsHor)))\n  p.ofsVer = Math.round(Math.min(ofsVer_max, Math.max(ofsVer_min, p.ofsVer)))\n\n  a('.ofsHor', p.ofsHor)\n  a('.ofsVer', p.ofsVer)\n}\n\nexport const $nl_scheme_metro = <$me_atom2_elem_cnf_intf>{\n  style: {\n    userSelect: () => 'none',\n    overflow: () => 'hidden',\n  },\n  prop: {\n    '#width': '/.#viewportWidth',\n    '#height': '/.#viewportHeight',\n    isLasso: () => false,\n    ...$me_atom2_prop_same_def<$me_point_intf>(\n      $me_atom2_prop(['.isLasso'],\n        () => <$me_point_intf>{x: 0, y: 0}\n      ),\n      ['lassoStart', 'lassoEnd']\n    ),\n    lassoEnd: () => null as $me_point_intf,\n    '#order': () => ['container', 'cross', 'lasso'],\n  },\n  dispatch(dispatch_name: string, dispatch_arg: any) {\n    if (dispatch_name == 'lassoShow') {\n      const {clientX, clientY} = dispatch_arg\n      const clientRect = a<$me_rect_intf>('@container.#clientRect')\n      const x = clientX - clientRect.left\n      const y = clientY - clientRect.top\n      const point = <$me_point_intf>{x, y}\n      a<boolean>('.isLasso', true)\n      a<$me_point_intf>('.lassoStart', point)\n      a<$me_point_intf>('.lassoEnd', point)\n      return true\n    } else if (dispatch_name == 'lassoMove') {\n      const {mode, clientX, clientY} = dispatch_arg\n      if (mode == $me_atom2_wheel_synth_mode.end) {\n        a.dispatch('', 'lassoHide')\n      } else {\n        const clientRect = a<$me_rect_intf>('@container.#clientRect')\n        const x = clientX - clientRect.left\n        const y = clientY - clientRect.top\n        a<$me_point_intf>('.lassoEnd', <$me_point_intf>{x, y})\n      }\n      return true\n    } else if (dispatch_name == 'lassoHide') {\n      a<boolean>('.isLasso', false)\n      return true\n    }\n    return true\n  },\n  elem: {\n    cross: () => <$me_atom2_elem_cnf_intf>{\n      base: $me_cross,\n      prop: {\n        size: () => 24,\n        thick: () => 3,\n        '#ofsVer': () => 8,\n        '#ofsHor': () => 16,\n        '#alignHor': () => $me_align.right,\n        color: '/.colorText',\n        '#zIndex': $me_atom2_prop(['<.#zIndex'],\n          ({masters: [zIndex]}) => zIndex + 2,\n        ),\n        '#cursor': () => 'pointer',\n      },\n      event: {\n        clickOrTap: () => {\n          a.dispatch('<', 'close')\n          return true\n        },\n      },\n    },\n    lasso: $me_atom2_prop(['.isLasso'],\n      ({masters: [isLasso]}) => !isLasso ? null : <$me_atom2_elem_cnf_intf>{\n        prop: {\n          '#ofsHor': $me_atom2_prop(['<.lassoStart', '<.lassoEnd'],\n            ({masters: [lassoStart, lassoEnd]}) => Math.min(lassoStart.x, lassoEnd.x)\n          ),\n          '#ofsVer': $me_atom2_prop(['<.lassoStart', '<.lassoEnd'],\n            ({masters: [lassoStart, lassoEnd]}) => Math.min(lassoStart.y, lassoEnd.y)\n          ),\n          '#width': $me_atom2_prop(['<.lassoStart', '<.lassoEnd'],\n            ({masters: [lassoStart, lassoEnd]}) => Math.abs(lassoStart.x - lassoEnd.x)\n          ),\n          '#height': $me_atom2_prop(['<.lassoStart', '<.lassoEnd'],\n            ({masters: [lassoStart, lassoEnd]}) => Math.abs(lassoStart.y - lassoEnd.y)\n          ),\n        },\n        style: {\n          border: () => '1px dotted silver',\n        },\n      },\n    ),\n    container: () => <$me_atom2_elem_cnf_intf>{\n      prop: {\n        '#width': '<.#width',\n        '#height': '<.#height',\n      },\n      control: {\n        scheme: () => <$me_atom2_control_cnf_intf>{\n          event: {\n            pinchFini: p => {\n              console.warn('pinchFini', p.event)\n              a('.scale', a('._scale'))\n              return false\n            },\n            pinch: p => {\n              handle_pinch(a('.scale') * p.event.scale, p.event.center, '._scale')\n              return false\n            },\n            wheelDragInit: p => {\n              a.dispatch('<<', 'lassoShow', p.event.last)\n              return false\n            },\n            wheelDragFini: p => {\n              a<boolean>('<<.isLasso', false)\n              return false\n            },\n            wheelDrag: p => {\n              const {clientX, clientY} = p.event.last\n              a.dispatch('<<', 'lassoMove', {\n                clientX, clientY,\n                mode: p.event.mode,\n              })\n              return true\n            },\n            wheelTouchInit: p => {\n              if (p.event.last.touches.length == 1) {\n                a.dispatch('<<', 'lassoShow', p.event.last.touches[0])\n              }\n              return false\n            },\n            wheelTouch: p => {\n              if (p.event.start.touches.length > 1) {\n                handle_move(p.event._deltaX, p.event._deltaY)\n              } else {\n                const {clientX, clientY} = p.event.last.touches[0]\n                a.dispatch('<<', 'lassoMove', {\n                  clientX, clientY,\n                  mode: p.event.mode,\n                })\n              }\n              return true\n            },\n            wheelTouchFini: p => {\n              if (p.event.start.touches.length == 1) {\n                a.dispatch('<<', 'lassoHide')\n              }\n              return false\n            },\n            wheel: p => {\n              if (!p.event.ctrlKey) {\n                handle_move(p.event._deltaX, p.event._deltaY)\n              } else {\n                const clientRect = a<$me_rect_intf>('.#clientRect')\n                const x = p.event.clientX - clientRect.left\n                const y = p.event.clientY - clientRect.top\n                handle_pinch(a('.scale') - p.event.deltaY * 0.02, {x, y})\n              }\n              return true\n            },\n          },\n          prop: {\n            ofsVer_initial: () => 32,\n            ofsHor_initial: () => 32,\n            width_initial: () => 1136, // for 1200\n            height_initial: () => 1148,\n            scale_initial: $me_atom2_prop(['.#width', '.width_initial', '.ofsHor_initial'],\n              ({masters: [width, width_initial, ofsHor_initial]}) =>\n                (width - 2 * ofsHor_initial) / width_initial ,\n              ({val}) => console.log(val)\n            ),\n            scale: '.scale_initial',\n            _scale: '.scale',\n            ofsHor: '.ofsHor_initial',\n            ofsVer: '.ofsVer_initial',\n            width: $me_atom2_prop(['.width_initial', '._scale'],\n              $me_atom2_prop_compute_fn_mul(),\n            ),\n            height: $me_atom2_prop(['.height_initial', '._scale'],\n              $me_atom2_prop_compute_fn_mul(),\n            ),\n          },\n          render: p => {\n            $me_atom2_ctx_rect({\n              ctx: p.ctx,\n              ctxTop: p.pixelRatio * a('.ofsVer'),\n              ctxLeft: p.pixelRatio * a('.ofsHor'),\n              ctxWidth: p.pixelRatio * a('.width'),\n              ctxHeight: p.pixelRatio * a('.height'),\n              stroke: {ctxWidth: p.pixelRatio, style: 'red'},\n            })\n\n            const color_line_5 = '#80372C'\n            {\n              const radius_line_5 = 420 / 2\n              const ofs_hor_line_5 = 398\n              const ofs_ver_line_5 = 270\n\n              const ctxCenterX = (a('.ofsHor') + (ofs_hor_line_5 + radius_line_5) * a('._scale')) * p.pixelRatio\n              const ctxCenterY = (a('.ofsVer') + (ofs_ver_line_5 + radius_line_5) * a('._scale')) * p.pixelRatio\n              const ctxRadius = radius_line_5 * p.pixelRatio * a('._scale')\n              $me_atom2_ctx_circle({\n                ctx: p.ctx,\n                ctxCenterX,\n                ctxCenterY,\n                ctxRadius,\n                stroke: {ctxWidth: 4 * p.pixelRatio, style: color_line_5},\n              })\n\n              const angle_line_5_station_0 = 45\n              {\n                const x = Math.cos(angle_line_5_station_0) * ctxRadius + ctxCenterX\n                const y = Math.sin(angle_line_5_station_0) * ctxRadius + ctxCenterY\n              }\n\n\n            }\n\n            return true\n          },\n        },\n      },\n    },\n\n    // container: () => <$me_atom2_elem_cnf_intf>{\n    //   prop: {\n    //     // '#width': $me_atom2_prop(['<.#width'],\n    //     //   ({masters: [width]}) => width - 16 * 2,\n    //     // ),\n    //     ofsVer_initial: () => 32,\n    //     ofsHor_initial: () => 32,\n    //     // '#ofsVer': () => 32,\n    //     // '#ofsHor': () => 32,\n    //     '#height': () => null as number,\n    //     // '#height': $me_atom2_prop(['<.#height', '.#ofsVer', '.#ofsVer'],\n    //     //   $me_atom2_prop_compute_fn_diff(),\n    //     // ),\n    //     height_initial: $me_atom2_prop(['.#height', '._scale'],\n    //       ({masters: [height, scale]}) => height / scale,\n    //     ),\n    //     width_initial: $me_atom2_prop(['<.#width', '.ofsHor_initial', '.ofsHor_initial'],\n    //       $me_atom2_prop_compute_fn_diff(),\n    //     ),\n    //     '#width': $me_atom2_prop(['._scale', '.width_initial'],\n    //       $me_atom2_prop_compute_fn_mul(),\n    //     ),\n    //     '#ofsVer': '.ofsVer_initial',\n    //     '#ofsHor': '.ofsHor_initial',\n    //     // '#ofsHor': $me_atom2_prop(['.#width', '<.#width'],\n    //     //   ({masters: [width, width_upper]}) => (width_upper - width) / 2,\n    //     // ),\n    //     // '#ofsVer': $me_atom2_prop(['.#height', '.height_initial', '.ofsVer_initial'],\n    //     //   ({masters: [height, height_initial, ofsVer_initial]}) => (ofsVer_initial + height_initial) / 2 - height / 2\n    //     //   // (width_upper - width) / 2,\n    //     // ),\n    //     // $me_atom2_prop(['<.#width', '.#ofsHor', '.#ofsHor'],\n    //     //   $me_atom2_prop_compute_fn_diff(),\n    //     // ),\n    //     // '#height': $me_atom2_prop(['<.']),\n    //     ofsHor: () => 0,\n    //     ofsVer: () => 0,\n    //     scale: () => 1,\n    //     _scale: '.scale',\n    //   },\n    //   // style: {\n    //   //   transform: $me_atom2_prop(['.ofsHor', '.ofsVer', '._scale'],\n    //   //     ({masters: [ofsHor, ofsVer, scale]}) =>\n    //   //       `translate3D(${ofsHor}px,${ofsVer}px, 0px) scale(${scale})`,\n    //   //   ),\n    //   // },\n    //   event: {\n    //     pinchFini: p => {\n    //       console.warn('pinchFini', p.event)\n    //       a('.scale', a('._scale'))\n    //       return false\n    //     },\n    //     pinch: p => {\n    //       console.log(p.event.scale, a('.scale'), a('.scale') * p.event.scale)\n    //       handle_pinch(a('.scale') * p.event.scale, '._scale')\n    //       // console.log(document.getElementById(a.curr.name()).children[0].getClientRects().item(0))\n    //       // a('._scale', a('.scale') * p.event.scale)\n    //       return false\n    //     },\n    //     wheelTouch: p => {\n    //       // console.log(p.event)\n    //       // console.log(p.event)\n    //       if (p.event.end.touches.length <= 1) return false\n    //       handle_move(p.event._deltaX, p.event._deltaY)\n    //       // a.update('.ofsHor', val => Math.round(val - p.event._deltaX))\n    //       // a.update('.ofsVer', val => Math.round(val - p.event._deltaY))\n    //       // console.log('.')\n    //       // console.log(p.event._deltaX, p.event._deltaY)\n    //       // if (p.event._deltaX == Infinity) $me_throw('Infinity')\n    //       // console.log(a('.ofsHor'), a('.ofsVer'))\n    //       return true\n    //     },\n    //     // wheelDrag: p => {\n    //     //   a.update('.ofsHor', val => Math.round(val - p.event._deltaX))\n    //     //   a.update('.ofsVer', val => Math.round(val - p.event._deltaY))\n    //     //   console.log(a('.ofsHor'), a('.ofsVer'))\n    //     //   return true\n    //     // },\n    //     wheel: p => {\n    //       if (!p.event.ctrlKey) {\n    //         handle_move(p.event._deltaX, p.event._deltaY)\n    //       } else {\n    //         handle_pinch(a('.scale') - p.event.deltaY * 0.02)\n    //       }\n    //       return true\n    //     },\n    //   },\n    //   dom: {\n    //     innerHTML: () => `\n    //       <svg id=\"scheme\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:bw=\"http://www.example.com/whatever/\" viewBox=\"-1070 -980 1940 1960\">\n    //         <style not-minify>\n    //         .station .bg {\n    //           opacity: .8;\n    //           stroke-width: 5;\n    //           stroke: white;\n    //         }\n    //         .station text {\n    //           font-family: Helvetica, Arial, sans-serif;\n    //           font-size: 21px;\n    //         }\n    //         .station circle {\n    //           fill: white;\n    //           stroke-width: 3;\n    //           stroke: #000000;\n    //           r: 10;\n    //         }\n    //         .station.disabled text, .station.disabled circle { fill: grey }\n    //         .station.selected circle, .station.will-be-selected text { fill: red }\n    //         .station:not(.selected).will-be-selected circle { fill: rgb(255,200,200) }\n    //         .station.will-be-deselected text, .station.selected.will-be-deselected circle { fill: blue }\n    //         .station.constructed text { font-weight: normal }\n    //         .station.constructed circle {\n    //           transform: rotate(-23deg);\n    //           stroke-dasharray: 10,5;\n    //         }\n    //         path.constructed { stroke-dasharray:10,5 }\n    //         #transfer path {\n    //           stroke-width: 6;\n    //           fill: none;\n    //         }\n    //         #transfer path.cold {\n    //           stroke-dasharray: 1,6;\n    //           stroke-width: 4;\n    //           stroke-linecap: round;\n    //         }\n    //         #transfer path.constructed {\n    //           stroke: grey;\n    //           stroke-dasharray: 3,3;\n    //           stroke-width: 3;\n    //         }\n    //         .branch path {\n    //           stroke: #000000;\n    //           stroke-width: 7;\n    //           fill: none;\n    //         }\n    //         .branch.red circle,.branch.red path { stroke: #cf2028 }\n    //         .line-numbers .red circle { fill: #cf2028 }\n\n    //         .branch.green circle,.branch.green path { stroke: #13703a }\n    //         .line-numbers .green circle { fill: #13703a }\n\n    //         .branch.dark-blue circle,.branch.dark-blue path { stroke: #283981 }\n    //         .line-numbers .dark-blue circle { fill: #283981 }\n\n    //         .branch.blue circle,.branch.blue path { stroke: #169cd4 }\n    //         .line-numbers .blue circle { fill: #169cd4 }\n\n    //         .branch.brown circle,.branch.brown path { stroke: #8a3127 }\n    //         .line-numbers .brown circle { fill: #8a3127 }\n\n    //         .branch.orange circle,.branch.orange path { stroke: #f78e38 }\n    //         .line-numbers .orange circle { fill: #f78e38 }\n\n    //         .branch.purple circle,.branch.purple path { stroke: #a35d94 }\n    //         .line-numbers .purple circle { fill: #a35d94 }\n\n    //         .branch.yellow circle,.branch.yellow path { stroke: #fde34f }\n    //         .line-numbers .yellow circle { fill: #fde34f }\n\n    //         .branch.grey circle,.branch.grey path { stroke: #abaeba }\n    //         .line-numbers .grey circle { fill: #abaeba }\n\n    //         .branch.lime circle,.branch.lime path { stroke: #aad16e }\n    //         .line-numbers .lime circle { fill: #aad16e }\n\n    //         .branch.turquoise circle,.branch.turquoise path { stroke: #1cb2a7 }\n    //         .line-numbers .turquoise circle { fill: #1cb2a7 }\n\n    //         .branch.light-blue circle,.branch.light-blue path { stroke: #b8deeb }\n    //         .line-numbers .light-blue circle { fill: #b8deeb }\n\n    //         .branch.circle-2 circle { stroke: #e36d49 }\n    //         .line-numbers .circle-2 circle { fill: #e36d49 }\n    //         .branch.circle-2 path.corner { stroke: #e36d49; stroke-width: 3 }\n    //         .branch.circle-2 path { stroke: #ffffff }\n\n    //         .branch.kojuhovskaya circle, .branch.kojuhovskaya path { stroke: #f7bed1 }\n    //         .line-numbers .kojuhovskaya text { fill: #f7bed1 }\n\n    //         .line-numbers circle { r: 14 }\n    //         .line-numbers text {\n    //           font-size: 17px;\n    //           font-weight: 600;\n    //           fill: white;\n    //         }\n    //         .line-numbers .buttons text {\n    //           fill: black;\n    //           font-size: 1.5em;\n    //           font-weight: 400;\n    //         }\n    //         .line-numbers .buttons rect {\n    //           fill: transparent;\n    //           stroke: rgba(0,0,0,0.8);\n    //           stroke-width: 1.5;\n    //           rx: 10;\n    //           ry: 10;\n    //         }\n    //         .line-numbers .buttons g:hover rect {\n    //           fill: #e0e0e0;\n    //           cursor: pointer;\n    //         }\n    //       </style>\n    //         <g transform=\"translate(-75 -80)\">\n    //           <g class=\"lines\">\n    //             <g class=\"branch branch-part circle-2\" bw:branch-part=\"circle-2-all\">\n    //               <path d=\"M-570,-75a620,620 0 1,0 1240,0a620,620 0 1,0 -1240,0\"></path>\n    //               <path class=\"corner\" d=\"M-566,-75a616,616 0 1,0 1232,0a616,616 0 1,0 -1232,0\"></path>\n    //               <path class=\"corner\" d=\"M-574,-75a624,624 0 1,0 1248,0a624,624 0 1,0 -1248,0\"></path>\n    //             </g>\n    //             <g class=\"branch branch-part light-blue\" bw:branch-part=\"light-blue-all\">\n    //               <path d=\"m -228,892 82,0 56,-1 c 29,0 35,24 35,24 l 0,61 c 0,0 -2,22 -25,22 l -350,0\"></path>\n    //             </g>\n    //             <g class=\"branch turquoise\">\n    //               <g class=\"branch-part\" bw:branch-part=\"turquoise-north-west\">\n    //                 <path class=\"constructed\" d=\"m -931,-66 64,0 c 22,0 27,-1 42,-16 l 160,-160 c 19,-19 27,-21 54,-21 l 94,0\"></path>\n    //                 <path d=\"m -516,-263 c 30,0 29,0 54,-14 l 165,-95\"></path>\n    //                 <path d=\"M -295,-373 -140,-463 c 21,-12 21,-11 44,-11 l 35,0\"></path>\n    //                 <path d=\"m -516,-263 -21,0 c -11,2 -24,6 -32,13 -4,4 -9,24 -9,24 -11,49 -17,99 -17,149 0,7 0,15 0,22 l 0,13 c -2,17 12,33 28,33 l 78,0\"></path>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"turquoise-all\">\n    //                 <path class=\"constructed\" d=\"M -42,699 H 124\"></path>\n    //                 <path d=\"M 82,699 H 215\"></path>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch lime\">\n    //               <g class=\"branch-part\" bw:branch-part=\"lime-north\">\n    //                 <path d=\"m -80,-840 0,79 c 0,18 4,37 17,49 l 56,49\"></path>\n    //                 <path d=\"m -7,-663 c 24,19 21,31 21,60 v 85 84\"></path>\n    //               </g>\n    //               <path class=\"branch-part\" bw:branch-part=\"lime-center\" d=\"M 14,-433 V -322 c 2,37 24,55 54,64 h 130 c 18,2 33,10 44,21 l 130,133 37,37\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"lime-south\" d=\"M 409,-66 472,-4 c 25,24 25,40 26,62 l 2,128 c 0,98 -112,115 -112,192 v 498\"></path>\n    //             </g>\n    //             <g class=\"branch grey\">\n    //               <path class=\"branch-part\" bw:branch-part=\"grey-north\" d=\"m -33,-840 v 357 57\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"grey-center\" d=\"M -33,-425 V -340 c 1,18 6,23 19,35 12,14 13,20 13,35 v 67 c -1,12 -6,22 -14,29 l -43,40 -67,65 c -7,7 -13,15 -16,24 v 90 c 0,19 3,38 24,52 l 67,68 c 36,30 22,43 26,62 v 49\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"grey-south\" d=\"M -24,276 V 964\"></path>\n    //             </g>\n    //             <g class=\"branch yellow branch-part\" bw:branch-part=\"yellow-west\">\n    //               <path d=\"m -454,-9 -115,115 c -18,18 -20,24 -20,48 l 0,471\"></path>\n    //               <!-- <path d=\"m -589,341 0,284\"/> -->\n    //             </g>\n    //             <g class=\"branch yellow branch-part\" bw:branch-part=\"yellow-east\">\n    //               <path d=\"M 763,-242 372,122 c 0,0 -11,14 -32,14 l -161,1\"></path>\n    //             </g>\n    //             <g class=\"branch kojuhovskaya\">\n    //               <path class=\"constructed branch-part\" bw:branch-part=\"kojuhovskaya-top\" d=\"m 685,40 80,66 c 21,16 24,20 24,45 v 194 c 0,23 0,23 11,43 l 24.754,44.7169\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"kojuhovskaya-bottom\" d=\"M 823,430 831,444 c 13,25 14,25 14,49 v 167\"></path>\n    //             </g>\n    //             <g class=\"branch purple\">\n    //               <path class=\"branch-part\" bw:branch-part=\"purple-north\" d=\"m -529,-725 v 371 c 0,22 5,38 48,82 l 58,60 c 46,48 42,46 118,46 h 6\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"purple-center\" d=\"M -298,-166 H 115 151 c 18,0 36,1 59,25 l 42,42 138,137\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"purple-south\" d=\"M 390 38 C 461 110 505 152 568 215 582 229 600 252 642 252 c 40 0 155 0 190 0 16 0 27 9 27 25 l 5e-5 68 c 5e-5 14 5e-5 20 -14 35 L 709 512\"></path>\n    //             </g>\n    //             <g class=\"branch orange\">\n    //               <path class=\"branch-part\" bw:branch-part=\"orange-north\" d=\"m 296,-835 v 296 c 0,57 -73,81 -122,98 0,0 -13,5 -27,19\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"orange-center\" d=\"M 146,-421 C 130,-406 113,-381 113,-344 c 0,75 23,81 67,118 44,37 42,48 42,126 v 73 c 1,108 -27,104 -63,146 -41,47 -74,78 -111,78 h -161 c -16,0 -28,10 -42,23\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"orange-south\" d=\"M -155,220 C -160,226 -166,232 -172,238 l -46,45 c -17,17 -23,36 -24,58 v 476 c -3,26 8,37 19,48\"></path>\n    //             </g>\n    //             <g class=\"branch blue branch-part\" bw:branch-part=\"blue-all\">\n    //               <path d=\"m -106,44 -70,-70 c -9,-12 -32,-12 -56,-12 l -84,0 c -38,0 -41,3 -69,32 l -137,133 c -24,24 -33,25 -69,25 l -116,0 c 0,0 -15,0 -24,-9 L -915,-40\"></path>\n    //               <path d=\"m -308,-38 -222,0\"></path>\n    //             </g>\n    //             <g class=\"branch dark-blue\">\n    //               <path class=\"branch-part\" bw:branch-part=\"dark-blue-west\" d=\"m -300,14 -28,0 c -24,0 -33,-3 -51,14 l -133,125 c -17,14 -24,21 -42,21 l -159,0 c 0,0 -19,2 -36,-14 L -937,-28 c 0,0 -11,-10 -11,-25 l 0,-325\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"dark-blue-center\" d=\"M -299,14 H -34 -10 C 1,12 11,-3 21,-4 38,-4 53,-4 72,-4 h 147 c 27,0 21,2 39,-15 l 142,-140\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"dark-blue-east\" d=\"M 400,-159 661,-418 c 13,-13 13,-17 13,-45 v -10 -93\"></path>\n    //             </g>\n    //             <g class=\"branch green\">\n    //               <path class=\"branch-part\" bw:branch-part=\"green-north\" d=\"m -348,-790 0,344 c 0,33 -1,52 17,71 l 25,26 52,52 12,12\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"green-center\" d=\"M -241,-284 -92,-136 -8,-52 c 20,26 44,20 68,19 27,0 53,3 66,22 l 53,55 c 20,20 12,39 15,59 v 151\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"green-south\" d=\"M 194,254 V 857 c 0,29 13,37 37,38 l 178,1 h 146\"></path>\n    //             </g>\n    //             <g class=\"branch red\">\n    //               <path class=\"branch-part\" bw:branch-part=\"red-north\" d=\"m 494,-544 v 7 c 0,22 0,22 -14,37 l -154,162 -14,15\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"red-center\" d=\"M 311,-322 -86,76 l -51,48 c -10,9 -18,10 -28,11 h -77\"></path>\n    //               <path class=\"branch-part\" bw:branch-part=\"red-south\" d=\"M -242,135 H -247 -276 c -19,0 -32,17 -32,17 l -139,172 c 0,0 -10,11 -10,47 v 416\"></path>\n    //             </g>\n    //             <g class=\"branch brown branch-part\" bw:branch-part=\"brown-all\">\n    //               <path d=\"M-310,-75a360,360 0 1,0 720,0a360,360 0 1,0 -720,0\"></path>\n    //             </g>\n    //           </g>\n\n    //           <g class=\"line-numbers\">\n    //             <g class=\"red branch-part\" bw:branch-part=\"red-all\">\n    //               <g transform=\"translate(524 -542)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">1</text>\n    //               </g>\n    //               <g transform=\"translate(-457 815)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">1</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"green branch-part\" bw:branch-part=\"green-all\">\n    //               <g transform=\"translate(-348 -820)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">2</text>\n    //               </g>\n    //               <g transform=\"translate(586 896)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">2</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"dark-blue branch-part\" bw:branch-part=\"dark-blue-all\">\n    //               <g transform=\"translate(-948 -411)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">3</text>\n    //               </g>\n    //               <g transform=\"translate(674 -592)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">3</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"blue branch-part\" bw:branch-part=\"blue-all\">\n    //               <g transform=\"translate(-884 -41)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">4</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"brown branch-part\" bw:branch-part=\"brown-all\">\n    //               <g transform=\"translate(-150 -345)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">5</text>\n    //               </g>\n    //               <g transform=\"translate(275 175)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">5</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"orange branch-part\" bw:branch-part=\"orange-all\">\n    //               <g transform=\"translate(296 -865)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">6</text>\n    //               </g>\n    //               <g transform=\"translate(-253 863)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">6</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"purple branch-part\" bw:branch-part=\"purple-all\">\n    //               <g transform=\"translate(-529 -755)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">7</text>\n    //               </g>\n    //               <g transform=\"translate(688 534)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">7</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"yellow branch-part\" bw:branch-part=\"yellow-east\">\n    //               <g transform=\"translate(787.5 -266)\">\n    //                 <circle></circle><text style=\"fill:black\" x=\"-4.5\" y=\"5.5\">8</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"yellow branch-part\" bw:branch-part=\"yellow-west\">\n    //               <g transform=\"translate(-589 650)\">\n    //                 <circle></circle><text style=\"fill:black;letter-spacing:-1;\" x=\"-10\" y=\"5.5\">8А</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"grey branch-part\" bw:branch-part=\"grey-all\">\n    //               <g transform=\"translate(-33 -870)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">9</text>\n    //               </g>\n    //               <g transform=\"translate(-24 990)\">\n    //                 <circle></circle><text x=\"-4.5\" y=\"5.5\">9</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"lime branch-part\" bw:branch-part=\"lime-all\">\n    //               <g transform=\"translate(-80 -870)\">\n    //                 <circle></circle><text x=\"-10\" y=\"5.5\">10</text>\n    //               </g>\n    //               <g transform=\"translate(358 874)\">\n    //                 <circle></circle><text x=\"-10\" y=\"5.5\">10</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"turquoise branch-part\" bw:branch-part=\"turquoise-all\">\n    //               <g transform=\"translate(-72 699)\">\n    //                 <circle></circle><text style=\"letter-spacing: -2.5;\" x=\"-14\" y=\"5.5\">11А</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"light-blue branch-part\" bw:branch-part=\"light-blue-all\">\n    //               <g transform=\"translate(-455 997)\">\n    //                 <circle></circle><text x=\"-10\" y=\"5.5\">12</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"circle-2 branch-part\" bw:branch-part=\"circle-2-all\">\n    //               <g transform=\"translate(-375 -570)\">\n    //                 <circle></circle><text x=\"-10\" y=\"5.5\">14</text>\n    //               </g>\n    //               <g transform=\"translate(500 400)\">\n    //                 <circle></circle><text x=\"-10\" y=\"5.5\">14</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"kojuhovskaya branch-part\" bw:branch-part=\"kojuhovskaya-all\">\n    //               <g transform=\"translate(845 690)\">\n    //                 <text text-anchor=\"middle\" y=\"0\" style=\"font-style: italic;\">КОЖ</text>\n    //               </g>\n    //             </g>\n    //             <g class=\"buttons\" transform=\"translate(580-880)\">\n    //               <g class=\"branch-part\" bw:branch-part=\"inside-brown\">\n    //                 <rect width=\"300\" height=\"40\"></rect>\n    //                 <text text-anchor=\"middle\" x=\"150\" y=\"28\">Все станции внутри кольца</text>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"brown-all\" transform=\"translate(0 50)\">\n    //                 <rect width=\"300\" height=\"40\"></rect>\n    //                 <text text-anchor=\"middle\" x=\"150\" y=\"28\">Все станции на кольцевой</text>\n    //               </g>\n    //               <!--ВСЕ СТАНЦИИ-->\n    //               <g class=\"branch-part\" bw:branch-part=\"all\" transform=\"translate(0 100)\">\n    //                 <rect width=\"300\" height=\"40\"></rect>\n    //                 <text text-anchor=\"middle\" x=\"150\" y=\"28\">Все станции</text>\n    //               </g>\n    //             </g>\n    //           </g>\n\n    //           <g id=\"transfer\">\n    //             <linearGradient id=\"orangeToBrown\" gradientUnits=\"userSpaceOnUse\" x1=\"174\" y1=\"-441\" x2=\"174\" y2=\"-413\">\n    //               <stop offset=\".4\" stop-color=\"#f78e38\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#orangeToBrown)\" d=\"M174-441L174-413\"></path>\n    //             <linearGradient id=\"brownToOrange\" gradientUnits=\"userSpaceOnUse\" x1=\"-173\" y1=\"239\" x2=\"-173\" y2=\"207\">\n    //               <stop offset=\".4\" stop-color=\"#f78e38\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#brownToOrange)\" d=\"M-173 207L-173 239\"></path>\n    //             <linearGradient id=\"darkblueToGrey\" gradientUnits=\"userSpaceOnUse\" x1=\"-142\" y1=\"46\" x2=\"-88\" y2=\"14\">\n    //               <stop offset=\".4\" stop-color=\"#abaeba\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#283981\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#darkblueToGrey)\" d=\"M-142 46 Q-140 0 -88 14\"></path>\n    //             <linearGradient id=\"greyToRed\" gradientUnits=\"userSpaceOnUse\" x1=\"-86\" y1=\"77\" x2=\"-142\" y2=\"46\">\n    //               <stop offset=\".4\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#abaeba\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#greyToRed)\" d=\"M-86 77Q-132 91 -142 46\"></path>\n    //             <linearGradient id=\"darkblueToRed\" gradientUnits=\"userSpaceOnUse\" x1=\"-86\" y1=\"77\" x2=\"-88\" y2=\"14\">\n    //               <stop offset=\".4\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#283981\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#darkblueToRed)\" d=\"M-86 77Q-58 44 -88 14\"></path>\n    //             <linearGradient id=\"blueToDarkblue\" gradientUnits=\"userSpaceOnUse\" x1=\"-88\" y1=\"14\" x2=\"-106\" y2=\"44\">\n    //               <stop offset=\".4\" stop-color=\"#283981\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#169cd4\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#blueToDarkblue)\" d=\"M-88 14L-106 44\"></path>\n    //             <linearGradient id=\"blueToRed\" gradientUnits=\"userSpaceOnUse\" x1=\"-86\" y1=\"77\" x2=\"-106\" y2=\"44\">\n    //               <stop offset=\".4\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#169cd4\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#blueToRed)\" d=\"M-86 77L-106 44\"></path>\n    //             <linearGradient id=\"redToGreenToDarkblue\" gradientUnits=\"userSpaceOnUse\" x1=\"48\" y1=\"-59\" x2=\"72\" y2=\"-4\">\n    //               <stop offset=\".2\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".3\" stop-color=\"#13703a\"></stop>\n    //               <stop offset=\".65\" stop-color=\"#13703a\"></stop>\n    //               <stop offset=\".75\" stop-color=\"#283981\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#redToGreenToDarkblue)\" d=\"M48-59 L72-4\"></path>\n    //             <linearGradient id=\"greyToBrown\" gradientUnits=\"userSpaceOnUse\" x1=\"-33\" y1=\"-455\" x2=\"-53\" y2=\"-420\">\n    //               <stop offset=\".4\" stop-color=\"#abaeba\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#greyToBrown)\" d=\"M-33-455L-53-420\"></path>\n    //             <linearGradient id=\"greenToBrown\" gradientUnits=\"userSpaceOnUse\" x1=\"-254\" y1=\"-297\" x2=\"-254\" y2=\"-267\">\n    //               <stop offset=\".4\" stop-color=\"#13703a\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#greenToBrown)\" d=\"M-254-297L-254-267\"></path>\n    //             <linearGradient id=\"redToBrown\" gradientUnits=\"userSpaceOnUse\" x1=\"326\" y1=\"-337\" x2=\"326\" y2=\"-307\">\n    //               <stop offset=\".4\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#redToBrown)\" d=\"M326-337L326-307\"></path>\n    //             <linearGradient id=\"brownToGreen\" gradientUnits=\"userSpaceOnUse\" x1=\"194\" y1=\"276\" x2=\"214\" y2=\"246\">\n    //               <stop offset=\".4\" stop-color=\"#13703a\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#brownToGreen)\" d=\"M194 276L214 246\"></path>\n    //             <linearGradient id=\"brownToGrey\" gradientUnits=\"userSpaceOnUse\" x1=\"-50\" y1=\"270\" x2=\"-24\" y2=\"300\">\n    //               <stop offset=\".4\" stop-color=\"#8a3127\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#abaeba\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#brownToGrey)\" d=\"M-50 270L-24 300\"></path>\n    //             <linearGradient id=\"brownToRed\" gradientUnits=\"userSpaceOnUse\" x1=\"-272\" y1=\"137\" x2=\"-257\" y2=\"114\">\n    //               <stop offset=\".4\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#brownToRed)\" d=\"M-272 137L-257 114\"></path>\n    //             <linearGradient id=\"brownToPurple\" gradientUnits=\"userSpaceOnUse\" x1=\"-279\" y1=\"-166\" x2=\"-304\" y2=\"-142\">\n    //               <stop offset=\".4\" stop-color=\"#a35d94\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#brownToPurple)\" d=\"M-279-166L-304-142\"></path>\n    //             <linearGradient id=\"purpleToRed\" gradientUnits=\"userSpaceOnUse\" x1=\"128\" y1=\"-138\" x2=\"115\" y2=\"-166\">\n    //               <stop offset=\".4\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#a35d94\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#purpleToRed)\" d=\"M128-138L115-166\"></path>\n    //             <linearGradient id=\"greyToLime\" gradientUnits=\"userSpaceOnUse\" x1=\"-33\" y1=\"-655\" x2=\"0\" y2=\"-655\">\n    //               <stop offset=\".4\" stop-color=\"#abaeba\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#aad16e\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#greyToLime)\" d=\"M-33-655L0-655\"></path>\n    //             <linearGradient id=\"blueToYellow\" gradientUnits=\"userSpaceOnUse\" x1=\"-475\" y1=\"-38\" x2=\"-455\" y2=\"-9\">\n    //               <stop offset=\".4\" stop-color=\"#169cd4\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#fde34f\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#blueToYellow)\" d=\"M-475-38L-455-9\"></path>\n    //             <linearGradient id=\"darkblueToYellow\" gradientUnits=\"userSpaceOnUse\" x1=\"-559\" y1=\"175\" x2=\"-589\" y2=\"204\">\n    //               <stop offset=\".4\" stop-color=\"#283981\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#fde34f\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#darkblueToYellow)\" d=\"M-559 175L-589 204\"></path>\n    //             <linearGradient id=\"darkblueToBlue\" gradientUnits=\"userSpaceOnUse\" x1=\"-948\" y1=\"-41\" x2=\"-914\" y2=\"-41\">\n    //               <stop offset=\".4\" stop-color=\"#283981\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#169cd4\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#darkblueToBlue)\" d=\"M-948-41L-914-41\"></path>\n    //             <linearGradient id=\"limeToYellow\" gradientUnits=\"userSpaceOnUse\" x1=\"506\" y1=\"-4\" x2=\"472\" y2=\"-4\">\n    //               <stop offset=\".4\" stop-color=\"#fde34f\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#aad16e\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#limeToYellow)\" d=\"M506-4L472-4\"></path>\n    //             <linearGradient id=\"orangeToPurple\" gradientUnits=\"userSpaceOnUse\" x1=\"222\" y1=\"-99\" x2=\"252\" y2=\"-99\">\n    //               <stop offset=\".4\" stop-color=\"#f78e38\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#a35d94\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#orangeToPurple)\" d=\"M222-99L252-99\"></path>\n    //             <linearGradient id=\"limeToPurple\" gradientUnits=\"userSpaceOnUse\" x1=\"529\" y1=\"176\" x2=\"500\" y2=\"186\">\n    //               <stop offset=\".4\" stop-color=\"#a35d94\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#aad16e\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#limeToPurple)\" d=\"M529 176L500 186\"></path>\n    //             <linearGradient id=\"limeToGreen\" gradientUnits=\"userSpaceOnUse\" x1=\"388\" y1=\"874\" x2=\"410\" y2=\"896\">\n    //               <stop offset=\".4\" stop-color=\"#aad16e\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#13703a\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#limeToGreen)\" d=\"M388 874L410 896\"></path>\n    //             <linearGradient id=\"turquoiseToGrey\" gradientUnits=\"userSpaceOnUse\" x1=\"-24\" y1=\"720\" x2=\"-42\" y2=\"699\">\n    //               <stop offset=\".4\" stop-color=\"#abaeba\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#1cb2a7\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#turquoiseToGrey)\" d=\"M-24 720-42 699\"></path>\n    //             <linearGradient id=\"greyToTurquoise\" gradientUnits=\"userSpaceOnUse\" x1=\"-33\" y1=\"-500\" x2=\"-58\" y2=\"-474\">\n    //               <stop offset=\".4\" stop-color=\"#abaeba\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#1cb2a7\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#greyToTurquoise)\" d=\"M-33 -500-58 -474\"></path>\n    //             <linearGradient id=\"greenToTurquoise\" gradientUnits=\"userSpaceOnUse\" x1=\"194\" y1=\"676\" x2=\"215\" y2=\"699\">\n    //               <stop offset=\".4\" stop-color=\"#13703a\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#1cb2a7\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#greenToTurquoise)\" d=\"M194 676L215 699\"></path>\n    //             <linearGradient id=\"turquoiseToGreen\" gradientUnits=\"userSpaceOnUse\" x1=\"-296\" y1=\"-373\" x2=\"-296\" y2=\"-338\">\n    //               <stop offset=\".4\" stop-color=\"#1cb2a7\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#13703a\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#turquoiseToGreen)\" d=\"M-296 -373L-296 -338\"></path>\n    //             <linearGradient id=\"orangeTolightBlue\" gradientUnits=\"userSpaceOnUse\" x1=\"-223\" y1=\"863\" x2=\"-223\" y2=\"891\">\n    //               <stop offset=\".4\" stop-color=\"#f78e38\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#b8deeb\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#orangeTolightBlue)\" d=\"M-223 863L-223 891\"></path>\n    //             <linearGradient id=\"lightBlueTGrey\" gradientUnits=\"userSpaceOnUse\" x1=\"-24\" y1=\"960\" x2=\"-55\" y2=\"960\">\n    //               <stop offset=\".4\" stop-color=\"#abaeba\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#b8deeb\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#lightBlueTGrey)\" d=\"M-24 960L-55 960\"></path>\n    //             <linearGradient id=\"limeToGrey\" gradientUnits=\"userSpaceOnUse\" x1=\"-14\" y1=\"-310\" x2=\"14\" y2=\"-322\">\n    //               <stop offset=\".4\" stop-color=\"#abaeba\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#aad16e\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#limeToGrey)\" d=\"M-14-310L14-322\"></path>\n    //             <linearGradient id=\"orangeToRed\" gradientUnits=\"userSpaceOnUse\" x1=\"216\" y1=\"-226\" x2=\"180\" y2=\"-225\">\n    //               <stop offset=\".4\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#f78e38\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#orangeToRed)\" d=\"M216-226L180-225\"></path>\n    //             <linearGradient id=\"orangeToLime\" gradientUnits=\"userSpaceOnUse\" x1=\"180\" y1=\"-225\" x2=\"198\" y2=\"-258\">\n    //               <stop offset=\".4\" stop-color=\"#f78e38\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#aad16e\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#orangeToLime)\" d=\"M180-225L198-258\"></path>\n    //             <linearGradient id=\"limeToRed\" gradientUnits=\"userSpaceOnUse\" x1=\"198\" y1=\"-258\" x2=\"216\" y2=\"-226\">\n    //               <stop offset=\".4\" stop-color=\"#aad16e\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#cf2028\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#limeToRed)\" d=\"M198-258L216-226\"></path>\n    //             <linearGradient id=\"greenToPurple\" gradientUnits=\"userSpaceOnUse\" x1=\"-92\" y1=\"-136\" x2=\"-75\" y2=\"-166\">\n    //               <stop offset=\".4\" stop-color=\"#13703a\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#a35d94\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#greenToPurple)\" d=\"M-92-136L-75-166\"></path>\n    //             <linearGradient id=\"purpleToGrey\" gradientUnits=\"userSpaceOnUse\" x1=\"-75\" y1=\"-166\" x2=\"-58\" y2=\"-136\">\n    //               <stop offset=\".4\" stop-color=\"#a35d94\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#abaeba\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#purpleToGrey)\" d=\"M-75-166 L-58-136\"></path>\n    //             <linearGradient id=\"greyToGreen\" gradientUnits=\"userSpaceOnUse\" x1=\"-58\" y1=\"-136\" x2=\"-92\" y2=\"-136\">\n    //               <stop offset=\".4\" stop-color=\"#abaeba\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#13703a\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#greyToGreen)\" d=\"M-58-136L-92-136\"></path>\n    //             <linearGradient id=\"darkblueToBrown\" gradientUnits=\"userSpaceOnUse\" x1=\"382\" y1=\"-138\" x2=\"408\" y2=\"-116\">\n    //               <stop offset=\".4\" stop-color=\"#283981\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#darkblueToBrown)\" d=\"M382-138L408-116\"></path>\n    //             <linearGradient id=\"brownToLime\" gradientUnits=\"userSpaceOnUse\" x1=\"408\" y1=\"-116\" x2=\"372\" y2=\"-104\">\n    //               <stop offset=\".4\" stop-color=\"#8a3127\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#aad16e\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#brownToLime)\" d=\"M408-116L372-104\"></path>\n    //             <linearGradient id=\"limeToDarkblue\" gradientUnits=\"userSpaceOnUse\" x1=\"372\" y1=\"-104\" x2=\"378\" y2=\"-138\">\n    //               <stop offset=\".4\" stop-color=\"#aad16e\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#283981\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#limeToDarkblue)\" d=\"M372-104L378-138\"></path>\n    //             <linearGradient id=\"brownToPurple2\" gradientUnits=\"userSpaceOnUse\" x1=\"380\" y1=\"69\" x2=\"400\" y2=\"49\">\n    //               <stop offset=\".4\" stop-color=\"#8a3127\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#a35d94\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#brownToPurple2)\" d=\"M380 69L400 49\"></path>\n    //             <linearGradient id=\"purpleToYellow\" gradientUnits=\"userSpaceOnUse\" x1=\"400\" y1=\"49\" x2=\"413\" y2=\"84\">\n    //               <stop offset=\".4\" stop-color=\"#a35d94\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#fde34f\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#purpleToYellow)\" d=\"M400 49L413 84\"></path>\n    //             <linearGradient id=\"yellowToBrown\" gradientUnits=\"userSpaceOnUse\" x1=\"413\" y1=\"84\" x2=\"380\" y2=\"69\">\n    //               <stop offset=\".4\" stop-color=\"#fde34f\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#yellowToBrown)\" d=\"M413 84L380 69\"></path>\n    //             <linearGradient id=\"orangeToGreen\" gradientUnits=\"userSpaceOnUse\" x1=\"194\" y1=\"103\" x2=\"159\" y2=\"119\">\n    //               <stop offset=\".4\" stop-color=\"#13703a\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#f78e38\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#orangeToGreen)\" d=\"M194 103L159 119\"></path>\n    //             <linearGradient id=\"orangeToYellow\" gradientUnits=\"userSpaceOnUse\" x1=\"159\" y1=\"119\" x2=\"179\" y2=\"138\">\n    //               <stop offset=\".4\" stop-color=\"#f78e38\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#fde34f\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#orangeToYellow)\" d=\"M159 119L179 138\"></path>\n    //             <linearGradient id=\"yellowToGreen\" gradientUnits=\"userSpaceOnUse\" x1=\"179\" y1=\"138\" x2=\"194\" y2=\"103\">\n    //               <stop offset=\".4\" stop-color=\"#fde34f\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#13703a\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#yellowToGreen)\" d=\"M179 138L194 103\"></path>\n    //             <linearGradient id=\"darkblueToBlue2\" gradientUnits=\"userSpaceOnUse\" x1=\"-346\" y1=\"14\" x2=\"-346\" y2=\"-38\">\n    //               <stop offset=\".4\" stop-color=\"#283981\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#169cd4\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#darkblueToBlue2)\" d=\"M-346 14L-346-38\"></path>\n    //             <linearGradient id=\"blueToBrown\" gradientUnits=\"userSpaceOnUse\" x1=\"-346\" y1=\"-38\" x2=\"-305\" y2=\"-12\">\n    //               <stop offset=\".4\" stop-color=\"#169cd4\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#8a3127\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#blueToBrown)\" d=\"M-346 -38L-305 -12\"></path>\n    //             <linearGradient id=\"brownToDarkblue\" gradientUnits=\"userSpaceOnUse\" x1=\"-305\" y1=\"-12\" x2=\"-346\" y2=\"14\">\n    //               <stop offset=\".4\" stop-color=\"#8a3127\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#283981\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#brownToDarkblue)\" d=\"M-305-12L-346 14\"></path>\n    //             <linearGradient id=\"redToCircle2North2\" gradientUnits=\"userSpaceOnUse\" x1=\"468\" y1=\"-487\" x2=\"512\" y2=\"-487\">\n    //               <stop offset=\".4\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#redToCircle2North2)\" d=\"M468-487L512-487\"></path>\n    //             <linearGradient id=\"greyToCircle2North\" gradientUnits=\"userSpaceOnUse\" x1=\"-33\" y1=\"-720\" x2=\"-5\" y2=\"-695\">\n    //               <stop offset=\".4\" stop-color=\"#abaeba\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#greyToCircle2North)\" d=\"M-33 -720 L-5 -693\"></path>\n    //             <linearGradient id=\"orangeToCircle2South\" gradientUnits=\"userSpaceOnUse\" x1=\"-242\" y1=\"451\" x2=\"-225\" y2=\"480\">\n    //               <stop offset=\".4\" stop-color=\"#f78e38\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#orangeToCircle2South)\" d=\"M-242 451 L-225 480\"></path>\n    //             <linearGradient id=\"blueToCircle2West\" gradientUnits=\"userSpaceOnUse\" x1=\"-540\" y1=\"115\" x2=\"-510\" y2=\"115\">\n    //               <stop offset=\".4\" stop-color=\"#e36d49\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#169cd4\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#blueToCircle2West)\" d=\"M-540 115L-510 115\"></path>\n    //             <linearGradient id=\"blueToCircle2West2\" gradientUnits=\"userSpaceOnUse\" x1=\"-531\" y1=\"-38\" x2=\"-569\" y2=\"-38\">\n    //               <stop offset=\".4\" stop-color=\"#169cd4\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#blueToCircle2West2)\" d=\"M-531-38L-569-38\"></path>\n    //             <linearGradient id=\"purpleToCircle2West2\" gradientUnits=\"userSpaceOnUse\" x1=\"-529\" y1=\"-427\" x2=\"-484\" y2=\"-390\">\n    //               <stop offset=\".4\" stop-color=\"#a35d94\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path class=\"cold\" style=\"stroke:url(#purpleToCircle2West2)\" d=\"M-529-427L-484-390\"></path>\n    //             <linearGradient id=\"circle2ToTurquoise\" gradientUnits=\"userSpaceOnUse\" x1=\"-534\" y1=\"-286\" x2=\"-514\" y2=\"-263\">\n    //               <stop offset=\".4\" stop-color=\"#e36d49\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#1cb2a7\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#circle2ToTurquoise)\" d=\"M-534-286L-514-263\"></path>\n    //             <linearGradient id=\"circle2ToTurquoise2\" gradientUnits=\"userSpaceOnUse\" x1=\"-564\" y1=\"-160\" x2=\"-589\" y2=\"-160\">\n    //               <stop offset=\".4\" stop-color=\"#e36d49\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#1cb2a7\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#circle2ToTurquoise2)\" d=\"M-564-160L-589-160\"></path>\n    //             <linearGradient id=\"blueToTurquoise\" gradientUnits=\"userSpaceOnUse\" x1=\"-475\" y1=\"-38\" x2=\"-495\" y2=\"-9\">\n    //               <stop offset=\".4\" stop-color=\"#169cd4\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#1cb2a7\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#blueToTurquoise)\" d=\"M-475-38L-495-9\"></path>\n    //             <linearGradient id=\"turquoiseToYellow\" gradientUnits=\"userSpaceOnUse\" x1=\"-455\" y1=\"-9\" x2=\"-495\" y2=\"-9\">\n    //               <stop offset=\".4\" stop-color=\"#fde34f\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#1cb2a7\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#turquoiseToYellow)\" d=\"M-455-9L-495-9\"></path>\n    //             <linearGradient id=\"purpleToTurquoise\" gradientUnits=\"userSpaceOnUse\" x1=\"-494\" y1=\"-286\" x2=\"-514\" y2=\"-263\">\n    //               <stop offset=\".4\" stop-color=\"#a35d94\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#1cb2a7\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#purpleToTurquoise)\" d=\"M-494-286L-514-263\"></path>\n    //             <linearGradient id=\"purpleToCircle2West\" gradientUnits=\"userSpaceOnUse\" x1=\"-534\" y1=\"-286\" x2=\"-494\" y2=\"-286\">\n    //               <stop offset=\".4\" stop-color=\"#e36d49\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#a35d94\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#purpleToCircle2West)\" d=\"M-534-286L-494-286\"></path>\n    //             <linearGradient id=\"orangeToCircle2North\" gradientUnits=\"userSpaceOnUse\" x1=\"296\" y1=\"-680\" x2=\"268\" y2=\"-656\">\n    //               <stop offset=\".4\" stop-color=\"#f78e38\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path class=\"cold\" style=\"stroke:url(#orangeToCircle2North)\" d=\"M296-680L268-656\"></path>\n    //             <linearGradient id=\"redToCircle2North\" gradientUnits=\"userSpaceOnUse\" x1=\"460\" y1=\"-542\" x2=\"494\" y2=\"-542\">\n    //               <stop offset=\".4\" stop-color=\"#e36d49\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#cf2028\"></stop>\n    //             </linearGradient>\n    //             <path class=\"cold\" style=\"stroke:url(#redToCircle2North)\" d=\"M460-542L494-542\"></path>\n    //             <linearGradient id=\"darkblueToCircle2North\" gradientUnits=\"userSpaceOnUse\" x1=\"617\" y1=\"-376\" x2=\"617\" y2=\"-323\">\n    //               <stop offset=\".4\" stop-color=\"#283981\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path class=\"cold\" style=\"stroke:url(#darkblueToCircle2North)\" d=\"M617-376L617-323\"></path>\n    //             <linearGradient id=\"yellowToCircle2East\" gradientUnits=\"userSpaceOnUse\" x1=\"637\" y1=\"-126\" x2=\"667\" y2=\"-126\">\n    //               <stop offset=\".4\" stop-color=\"#fde34f\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path class=\"cold\" style=\"stroke:url(#yellowToCircle2East)\" d=\"M637-126L667-126\"></path>\n    //             <linearGradient id=\"limeToCircle2\" gradientUnits=\"userSpaceOnUse\" x1=\"388\" y1=\"420\" x2=\"368\" y2=\"457\">\n    //               <stop offset=\".4\" stop-color=\"#aad16e\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path class=\"cold\" style=\"stroke:url(#limeToCircle2)\" d=\"M388 420L368 457\"></path>\n    //             <linearGradient id=\"greenToCircle2South\" gradientUnits=\"userSpaceOnUse\" x1=\"194\" y1=\"500\" x2=\"214\" y2=\"522\">\n    //               <stop offset=\".4\" stop-color=\"#13703a\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path class=\"cold\" style=\"stroke:url(#greenToCircle2South)\" d=\"M194 500L214 522\"></path>\n    //             <linearGradient id=\"redToCircle2South\" gradientUnits=\"userSpaceOnUse\" x1=\"-422\" y1=\"293\" x2=\"-422\" y2=\"326\">\n    //               <stop offset=\".4\" stop-color=\"#cf2028\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#e36d49\"></stop>\n    //             </linearGradient>\n    //             <path class=\"cold\" style=\"stroke:url(#redToCircle2South)\" d=\"M-422 293L-422 326\"></path>\n    //             <linearGradient id=\"greenToCircle2North\" gradientUnits=\"userSpaceOnUse\" x1=\"-324\" y1=\"-570\" x2=\"-348\" y2=\"-516\">\n    //               <stop offset=\".4\" stop-color=\"#e36d49\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#13703a\"></stop>\n    //             </linearGradient>\n    //             <path class=\"cold\" style=\"stroke:url(#greenToCircle2North)\" d=\"M-324 -570 L-348 -516\"></path>\n    //             <linearGradient id=\"circle2ToKojuhovska\" gradientUnits=\"userSpaceOnUse\" x1=\"663\" y1=\"16\" x2=\"685\" y2=\"40\">\n    //               <stop offset=\".4\" stop-color=\"#e36d49\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#f7bed1\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#circle2ToKojuhovska)\" d=\"M663,16 L685,40\"></path>\n    //             <linearGradient id=\"purpleToKojuhovska\" gradientUnits=\"userSpaceOnUse\" x1=\"789\" y1=\"433\" x2=\"824\" y2=\"433\">\n    //               <stop offset=\".4\" stop-color=\"#a35d94\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#f7bed1\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#purpleToKojuhovska)\" d=\"M789 433 L824 433\"></path>\n    //             <linearGradient id=\"turquoiseToDarkblue\" gradientUnits=\"userSpaceOnUse\" x1=\"-931\" y1=\"-66\" x2=\"-948\" y2=\"-41\">\n    //               <stop offset=\".4\" stop-color=\"#1cb2a7\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#283981\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#turquoiseToDarkblue)\" d=\"M-931-66L-948-41\"></path>\n    //             <linearGradient id=\"turquoiseToBlue\" gradientUnits=\"userSpaceOnUse\" x1=\"-931\" y1=\"-66\" x2=\"-914\" y2=\"-41\">\n    //               <stop offset=\".4\" stop-color=\"#1cb2a7\"></stop>\n    //               <stop offset=\".6\" stop-color=\"#169cd4\"></stop>\n    //             </linearGradient>\n    //             <path style=\"stroke:url(#turquoiseToBlue)\" d=\"M-931-66L-914-41\"></path>\n    //             <path class=\"constructed\" d=\"M-70 -720 L-70 -684 L-71 -684\"></path>\n    //           </g>\n\n    //           <g id=\"stationHelper\">\n\n    //             <g class=\"branch red\" bw:code=\"ru-msk-liniya-metro-sokolnicheskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"red-all;red-north;all\">\n    //                 <g bw:code=\"ru-msk-metro-bulvar-rokossovskogo\" class=\"station\" transform=\"translate(494 -542)\">\n    //                   <circle r=\"10\"></circle>\n    //                   <g transform=\"translate(-12,-18)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Бульвар Рокоссовского</text>\n    //                     <text text-anchor=\"middle\">Бульвар Рокоссовского</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-cherkizovskaya\" class=\"station\" transform=\"translate(468 -487)\">\n    //                   <circle r=\"10\"></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Черкизовская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-preobrajenskaya-ploschad\" class=\"station\" transform=\"translate(437 -452)\">\n    //                   <circle r=\"10\"></circle>\n    //                   <g transform=\"translate(119, 7)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Преображенская пл.</text>\n    //                     <text text-anchor=\"middle\">Преображенская пл.</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-sokolniki\" class=\"station\" transform=\"translate(403 -417)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Сокольники</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-krasnoselskaya\" class=\"station\" transform=\"translate(364 -377)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Красносельская</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"red-all;red-north;red-center;all\">\n    //                 <g bw:code=\"ru-msk-metro-komsomolskaya\" class=\"station\" transform=\"translate(326 -337)\">\n    //                   <circle></circle>\n    //                   <text x=\"12\" y=\"22\">Комсомольская</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"red-all;red-center;inside-brown;all\">\n    //                 <g bw:code=\"ru-msk-metro-krasnyie-vorota\" class=\"station\" transform=\"translate(264 -275)\">\n    //                   <circle></circle>\n    //                   <text x=\"5\" y=\"30\"><tspan>Красные</tspan><tspan x=\"13\" dy=\"18\">ворота</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-chistyie-prudyi-sretenskiy-bulvar-turgenevskaya\" class=\"station\" transform=\"translate(216 -226)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(80 30)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Чистые пруды</text>\n    //                     <text text-anchor=\"middle\">Чистые пруды</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kuznetskiy-most-lubyanka\" class=\"station\" transform=\"translate(128 -138)\">\n    //                   <circle></circle>\n    //                   <text x=\"-5\" y=\"30\">Лубянка</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ohotnyiy-ryad-teatralnaya-ploschad-revolyutsii\" class=\"station\" transform=\"translate(48 -59)\">\n    //                   <circle></circle>\n    //                   <g>\n    //                     <text text-anchor=\"end\" x=\"5\" y=\"-35\"><tspan>Охотный</tspan><tspan x=\"5\" dy=\"18\">Ряд</tspan></text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-arbatskaya-aleksandrovskiy-sad-biblioteka-im-lenina-borovitskaya\" class=\"station\" transform=\"translate(-86 77)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"10\"><tspan>Библиотека</tspan><tspan x=\"15\" dy=\"18\">им. Ленина</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kropotkinskaya\" class=\"station\" transform=\"translate(-166 137)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(50 32)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Кропоткинская</text>\n    //                     <text text-anchor=\"middle\">Кропоткинская</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"red-all;red-center;red-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-park-kulturyi\" class=\"station\" transform=\"translate(-272 137)\">\n    //                   <circle></circle>\n    //                   <text x=\"-5\" y=\"-20\" text-anchor=\"end\">Парк культуры</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"red-all;red-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-frunzenskaya\" class=\"station\" transform=\"translate(-372 232)\">\n    //                   <circle></circle>\n    //                   <text y=\"30\">Фрунзенская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-sportivnaya\" class=\"station\" transform=\"translate(-422 293)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Спортивная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-vorobevyi-goryi\" class=\"station\" transform=\"translate(-457 385)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(95 7)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Воробьевы горы</text>\n    //                     <text text-anchor=\"middle\">Воробьевы горы</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-universitet\" class=\"station\" transform=\"translate(-457 425)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(15 7)\">\n    //                     <text class=\"bg\">Университет</text>\n    //                     <text>Университет</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-prospekt-vernadskogo\" class=\"station\" transform=\"translate(-457 465)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\"><tspan>Проспект</tspan><tspan x=\"15\" dy=\"18\">Вернадского</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-yugo-zapadnaya\" class=\"station\" transform=\"translate(-457 505)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Юго-Западная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-troparevo\" class=\"station\" transform=\"translate(-457 545)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Тропарёво</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-rumyantsevo\" class=\"station\" transform=\"translate(-457 585)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Румянцево</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-salarevo\" class=\"station\" transform=\"translate(-457 625)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Саларьево</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-filatov-lug\" class=\"station\" transform=\"translate(-457 665)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Филатов луг</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-prokshino\" class=\"station\" transform=\"translate(-457 705)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Прокшино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-olhovaya\" class=\"station\" transform=\"translate(-457 745)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Ольховая</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kommunarka\" class=\"station\" transform=\"translate(-457 785)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Коммунарка</text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch green\" bw:code=\"ru-msk-liniya-metro-zamoskvoretskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"zelenograd;all\">\n    //                 <g id=\"zelenograd\" bw:code=\"ru-msk-zelenograd-g\" class=\"station\" transform=\"translate(-398 -810)\">\n    //                   <circle></circle>\n    //                   <text text-anchor=\"end\" x=\"-15\" y=\"7\">Зеленоград</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"green-all;green-north;all\">\n    //                 <g bw:code=\"ru-msk-metro-hovrino\" class=\"station\" transform=\"translate(-348 -790)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Ховрино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-belomorskaya\" class=\"station\" transform=\"translate(-348 -750)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Беломорская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-rechnoy-vokzal\" class=\"station\" transform=\"translate(-348 -710)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"0\"><tspan>Речной</tspan><tspan x=\"15\" dy=\"18\">вокзал</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-vodnyiy-stadion\" class=\"station\" transform=\"translate(-348 -670)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"0\"><tspan>Водный</tspan><tspan x=\"15\" dy=\"18\">стадион</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-voykovskaya\" class=\"station\" transform=\"translate(-348 -516)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Войковская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-sokol\" class=\"station\" transform=\"translate(-348 -466)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Сокол</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-aeroport\" class=\"station\" transform=\"translate(-348 -416)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Аэропорт</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-dinamo\" class=\"station\" transform=\"translate(-296 -338)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(15,7)\">\n    //                     <text class=\"bg\">Динамо</text>\n    //                     <text>Динамо</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"green-all;green-north;green-center;all\">\n    //                 <g bw:code=\"ru-msk-metro-belorusskaya-belorusskaya\" class=\"station\" transform=\"translate(-254 -297)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(80,20)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Белорусская</text>\n    //                     <text text-anchor=\"middle\">Белорусская</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"green-all;green-center;inside-brown;all\">\n    //                 <g bw:code=\"ru-msk-metro-mayakovskaya\" class=\"station\" transform=\"translate(-186 -229)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\">Маяковская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-pushkinskaya-tverskaya-chehovskaya\" class=\"station\" transform=\"translate(-92 -136)\">\n    //                   <circle></circle>\n    //                   <text text-anchor=\"end\" x=\"-15\" y=\"15\">Тверская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ohotnyiy-ryad-teatralnaya-ploschad-revolyutsii\" class=\"station\" transform=\"translate(60 -33)\">\n    //                   <circle></circle>\n    //                   <text x=\"5\" y=\"-10\">Театральная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-novokuznetskaya-tretyakovskaya\" class=\"station\" transform=\"translate(194 103)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(92 7)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Новокузнецкая</text>\n    //                     <text text-anchor=\"middle\">Новокузнецкая</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"green-all;green-center;green-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-paveletskaya-paveletskaya\" class=\"station\" transform=\"translate(194 276)\">\n    //                   <circle></circle>\n    //                   <text x=\"20\" y=\"5\">Павелецкая</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"green-all;green-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-avtozavodskaya\" class=\"station\" transform=\"translate(194 500)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(90,0)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Автозаводская</text>\n    //                     <text text-anchor=\"middle\">Автозаводская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-tehnopark\" class=\"station\" transform=\"translate(194 576)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Технопарк</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kolomenskaya\" class=\"station\" transform=\"translate(194 626)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Коломенская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kashirskaya\" class=\"station\" transform=\"translate(194 676)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Каширская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kantemirovskaya\" class=\"station\" transform=\"translate(194 722)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Кантемировская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-tsaritsyino\" class=\"station\" transform=\"translate(194 762)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Царицино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-orehovo\" class=\"station\" transform=\"translate(194 802)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Орехово</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-domodedovskaya\" class=\"station\" transform=\"translate(194 842)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Домодедовская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-zyablikovo-krasnogvardeyskaya\" class=\"station\" transform=\"translate(410 896)\">\n    //                   <circle></circle>\n    //                   <text x=\"-95\" y=\"34\">Красногвардейская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-alma-atinskaya\" class=\"station\" transform=\"translate(556 896)\">\n    //                   <circle></circle>\n    //                   <text x=\"-30\" y=\"34\">Алма-Атинская</text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch dark-blue\" bw:code=\"ru-msk-liniya-metro-arbatsko-pokrovskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"dark-blue-all;dark-blue-west;all\">\n    //                 <g bw:code=\"ru-msk-metro-pyatnitskoe-shosse\" class=\"station\" transform=\"translate(-948 -381)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"-5\"><tspan>Пятницкое</tspan> <tspan dy=\"18\" x=\"15\">шоссе</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-mitino\" class=\"station\" transform=\"translate(-948 -341)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Митино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-volokolamskaya\" class=\"station\" transform=\"translate(-948 -301)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Волоколамская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-myakinino\" class=\"station\" transform=\"translate(-948 -261)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Мякинино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-strogino\" class=\"station\" transform=\"translate(-948 -221)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Строгино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kryilatskoe\" class=\"station\" transform=\"translate(-948 -181)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Крылатское</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-molodejnaya\" class=\"station\" transform=\"translate(-948 -141)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Молодёжная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kuntsevskaya-kuntsevskaya\" class=\"station\" transform=\"translate(-948 -41)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-30,30)\">\n    //                     <text class=\"bg\">Кунцевская</text>\n    //                     <text>Кунцевская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-slavyanskiy-bulvar\" class=\"station\" transform=\"translate(-664 175)\">\n    //                   <circle></circle>\n    //                   <text y=\"28\" text-anchor=\"end\"><tspan x=\"25\">Славянский</tspan><tspan x=\"25\" dy=\"18\">бульвар</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-park-pobedyi-park-pobedyi\" class=\"station\" transform=\"translate(-559 175)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-10,35)\">\n    //                     <text class=\"bg\">Парк Победы</text>\n    //                     <text>Парк Победы</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"dark-blue-all;dark-blue-west;dark-blue-center;all\">\n    //                 <g bw:code=\"ru-msk-metro-kievskaya\" class=\"station\" transform=\"translate(-346 14)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-35,-18)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Киевская</text>\n    //                     <text text-anchor=\"middle\">Киевская</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"dark-blue-all;dark-blue-center;inside-brown;all\">\n    //                 <g bw:code=\"ru-msk-metro-smolenskaya\" class=\"station\" transform=\"translate(-224 14)\">\n    //                   <circle></circle>\n    //                   <text x=\"-5\" y=\"-15\" text-anchor=\"middle\">Смоленская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-arbatskaya-aleksandrovskiy-sad-biblioteka-im-lenina-borovitskaya\" class=\"station\" transform=\"translate(-88 14)\">\n    //                   <circle></circle>\n    //                   <text x=\"-40\" y=\"-20\">Арбатская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ohotnyiy-ryad-teatralnaya-ploschad-revolyutsii\" class=\"station\" transform=\"translate(72 -4)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(35 30)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Пл. Революции</text>\n    //                     <text text-anchor=\"middle\">Пл. Революции</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"dark-blue-all;dark-blue-center;dark-blue-east;all\">\n    //                 <g bw:code=\"ru-msk-metro-kurskaya-kurskaya-chkalovskaya\" class=\"station\" transform=\"translate(378 -138)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(60 0)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Курская</text>\n    //                     <text text-anchor=\"middle\">Курская</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"dark-blue-all;dark-blue-east;all\">\n    //                 <g bw:code=\"ru-msk-metro-baumanskaya\" class=\"station\" transform=\"translate(442 -202)\">\n    //                   <circle></circle>\n    //                   <text x=\"10\" y=\"25\">Бауманская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-elektrozavodskaya\" class=\"station\" transform=\"translate(480 -239)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(100, 25)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Электрозаводская</text>\n    //                     <text text-anchor=\"middle\">Электрозаводская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-semenovskaya\" class=\"station\" transform=\"translate(536 -296)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(83, 7)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Семёновская</text>\n    //                     <text text-anchor=\"middle\">Семёновская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-partizanskaya\" class=\"station\" transform=\"translate(617 -376)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Партизанская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-izmaylovskaya\" class=\"station\" transform=\"translate(674 -450)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Измайловская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-pervomayskaya\" class=\"station\" transform=\"translate(674 -504)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Первомайская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-schelkovskaya\" class=\"station\" transform=\"translate(674 -562)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Щёлковская</text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch blue\" bw:code=\"ru-msk-liniya-metro-filvskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"blue-all;all\">\n    //                 <g bw:code=\"ru-msk-metro-kuntsevskaya-kuntsevskaya\" class=\"station\" transform=\"translate(-914 -41)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-pionerskaya\" class=\"station\" transform=\"translate(-864 9)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Пионерская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-filevskiy-park\" class=\"station\" transform=\"translate(-829 44)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Филёвский парк</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-bagrationovskaya\" class=\"station\" transform=\"translate(-794 79)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Багратионовская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-fili\" class=\"station\" transform=\"translate(-759 114)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Фили</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kutuzovskaya\" class=\"station\" transform=\"translate(-510 115)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-15 -18)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Кутузовская</text>\n    //                     <text text-anchor=\"middle\">Кутузовская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-studencheskaya\" class=\"station\" transform=\"translate(-455 62)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(83 7)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Студенческая</text>\n    //                     <text text-anchor=\"middle\">Студенческая</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kievskaya\" class=\"station\" transform=\"translate(-346 -38)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-vyistavochnaya-delovoy-tsentr\" class=\"station\" transform=\"translate(-475 -38)\">\n    //                   <circle></circle>\n    //                   <text x=\"40\" y=\"-18\" text-anchor=\"middle\">Выставочная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-mejdunarodnaya\" class=\"station\" transform=\"translate(-531 -38)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(20,-18)\">\n    //                     <text class=\"bg\" text-anchor=\"end\">Международная</text>\n    //                     <text text-anchor=\"end\">Международная</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"blue-all;inside-brown;all\">\n    //                 <g bw:code=\"ru-msk-metro-smolenskaya\" class=\"station\" transform=\"translate(-232 -38)\">\n    //                   <circle></circle>\n    //                   <text x=\"-50\" y=\"-20\">Смоленская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-arbatskaya-aleksandrovskiy-sad-biblioteka-im-lenina-borovitskaya\" bw:slug=\"metro-arbatskaya\" class=\"station\" transform=\"translate(-176 -26)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(68-10)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Арбатская</text>\n    //                     <text text-anchor=\"middle\">Арбатская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-arbatskaya-aleksandrovskiy-sad-biblioteka-im-lenina-borovitskaya\" bw:slug=\"metro-aleksandrovskiy-sad\" class=\"station\" transform=\"translate(-106 44)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(127 5)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Александровский сад</text>\n    //                     <text text-anchor=\"middle\">Александровский сад</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch brown\" bw:code=\"ru-msk-liniya-metro-koltsevaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"brown-all;all\">\n    //                 <g bw:code=\"ru-msk-metro-novoslobodskaya-mendeleevskaya\" class=\"station\" transform=\"translate(-53 -420)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(0 35)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Новослободская</text>\n    //                     <text text-anchor=\"middle\">Новослободская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-prospekt-mira\" class=\"station\" transform=\"translate(174 -413)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"-7\">Проспект Мира</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-komsomolskaya\" class=\"station\" transform=\"translate(326 -307)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kurskaya-kurskaya-chkalovskaya\" class=\"station\" transform=\"translate(408 -116)\">\n    //                   <circle bw:title=\"Курская\"></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-taganskaya-taganskaya-marksistskaya\" class=\"station\" transform=\"translate(380 69)\">\n    //                   <circle bw:title=\"Таганская\"></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-paveletskaya-paveletskaya\" class=\"station\" transform=\"translate(214 246)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-dobryininskaya-serpuhovskaya\" class=\"station\" transform=\"translate(-50 270)\">\n    //                   <circle></circle>\n    //                   <text x=\"-5\" y=\"26\" text-anchor=\"end\">Добрынинская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-oktyabrskaya\" class=\"station\" transform=\"translate(-173 207)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-park-kulturyi\" class=\"station\" transform=\"translate(-257 114)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kievskaya\" class=\"station\" transform=\"translate(-305 -12)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-krasnopresnenskaya-barrikadnaya\" class=\"station\" transform=\"translate(-304 -142)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-10 30)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Краснопресненская</text>\n    //                     <text text-anchor=\"middle\">Краснопресненская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-belorusskaya-belorusskaya\" class=\"station\" transform=\"translate(-254 -267)\">\n    //                   <circle></circle>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch orange\" bw:code=\"ru-msk-liniya-metro-kalujsko-rijskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"orange-all;orange-north;all\">\n    //                 <g bw:code=\"ru-msk-metro-medvedkovo\" class=\"station\" transform=\"translate(296 -835)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Медведково</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-babushkinskaya\" class=\"station\" transform=\"translate(296 -785)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Бабушкинская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-sviblovo\" class=\"station\" transform=\"translate(296 -735)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Свиблово</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-botanicheskiy-sad\" class=\"station\" transform=\"translate(296 -680)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-103 5)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Ботанический сад</text>\n    //                     <text text-anchor=\"middle\">Ботанический сад</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-vdnh\" class=\"station\" transform=\"translate(296 -611)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">ВДНХ</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-alekseevskaya\" class=\"station\" transform=\"translate(296 -557)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Алексеевская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-rijskaya\" class=\"station\" transform=\"translate(276 -491)\">\n    //                   <circle></circle>\n    //                   <text x=\"\" y=\"-15\" text-anchor=\"end\">Рижская</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"orange-all;orange-north;orange-center;all\">\n    //                 <g bw:code=\"ru-msk-metro-prospekt-mira\" class=\"station\" transform=\"translate(174 -441)\">\n    //                   <circle></circle>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"orange-all;orange-center;inside-brown;all\">\n    //                 <g bw:code=\"ru-msk-metro-suharevskaya\" class=\"station\" transform=\"translate(114 -343)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Сухаревская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-chistyie-prudyi-sretenskiy-bulvar-turgenevskaya\" class=\"station\" transform=\"translate(180 -225)\">\n    //                   <circle></circle>\n    //                   <text x=\"-20\" y=\"5\" text-anchor=\"end\">Тургеневская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kitay-gorod\" class=\"station\" transform=\"translate(222 -99)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-25 35)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Китай-город</text>\n    //                     <text text-anchor=\"middle\">Китай-город</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-novokuznetskaya-tretyakovskaya\" class=\"station\" transform=\"translate(159 119)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-72 31)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Третьяковская</text>\n    //                     <text text-anchor=\"middle\">Третьяковская</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"orange-all;orange-center;orange-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-oktyabrskaya\" class=\"station\" transform=\"translate(-173 239)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"-10\" text-anchor=\"end\">Октябрьская</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"orange-all;orange-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-shabolovskaya\" class=\"station\" transform=\"translate(-242 341)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Шаболовская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-leninskiy-prospekt\" class=\"station\" transform=\"translate(-242 451)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"-15\"><tspan>Ленинский</tspan><tspan x=\"15\" dy=\"18\">проспект</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-akademicheskaya\" class=\"station\" transform=\"translate(-242 545)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Академическая</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-profsoyuznaya\" class=\"station\" transform=\"translate(-242 585)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Профсоюзная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-novyie-cheremushki\" class=\"station\" transform=\"translate(-242 625)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Новые Черёмушки</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kalujskaya\" class=\"station\" transform=\"translate(-242 665)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Калужская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-belyaevo\" class=\"station\" transform=\"translate(-242 705)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Беляево</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-konkovo\" class=\"station\" transform=\"translate(-242 745)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Коньково</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-teplyiy-stan\" class=\"station\" transform=\"translate(-242 785)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Тёплый Стан</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-yasenevo\" class=\"station\" transform=\"translate(-242 825)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Ясенево</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-novoyasenevskaya-bittsevskiy-park\" class=\"station\" transform=\"translate(-223 863)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\">Новоясеневская</text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch kojuhovskaya\" bw:code=\"ru-msk-liniya-metro-kojuhovskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"kojuhovskaya-top;kojuhovskaya-all;all\">\n    //                 <g bw:code=\"ru-msk-metro-nijegorodskaya\" class=\"constructed station\" transform=\"translate(685,40)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Нижегородская улица</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-stahanovskaya\" class=\"constructed station\" transform=\"translate(768,108)\">\n    //                   <circle></circle>\n    //                   <text x=\"10\" y=\"-5\">Стахановская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-okskaya-ulitsa\" class=\"constructed station\" transform=\"translate(789,180)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"0\"><tspan>Окская</tspan><tspan x=\"15\" dy=\"18\">улица</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-yugo-vostochnaya\" class=\"constructed station\" transform=\"translate(789,365)\">\n    //                   <circle></circle>\n    //                   <text text-anchor=\"end\" x=\"-15\" y=\"7\">Юго-Восточная</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"kojuhovskaya-bottom;kojuhovskaya-all;all\">\n    //                 <g bw:code=\"ru-msk-metro-lermontovskiy-prospekt\" class=\"station\" transform=\"translate(824 433)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Косино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ulitsa-dmitrievskogo\" class=\"station\" transform=\"translate(845 580)\">\n    //                   <circle></circle>\n    //                   <text text-anchor=\"end\" x=\"-15\" y=\"0\"><tspan>Улица</tspan><tspan x=\"-15\" dy=\"18\">Дмитриевского</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-luhmanovskaya\" class=\"station\" transform=\"translate(845 620)\">\n    //                   <circle></circle>\n    //                   <text text-anchor=\"end\" x=\"-15\" y=\"7\">Лухмановская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-nekrasovka\" class=\"station\" transform=\"translate(845 660)\">\n    //                   <circle></circle>\n    //                   <text text-anchor=\"end\" x=\"-15\" y=\"7\">Некрасовка</text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch purple\" bw:code=\"ru-msk-liniya-metro-tagansko-krasnopresnenskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"purple-all;purple-north;all\">\n    //                 <g bw:code=\"ru-msk-metro-planernaya\" class=\"station\" transform=\"translate(-529 -725)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Планерная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-shodnenskaya\" class=\"station\" transform=\"translate(-529 -680)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Сходненская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-tushinskaya\" class=\"station\" transform=\"translate(-529 -635)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Тушинская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-spartak\" class=\"station\" transform=\"translate(-529 -590)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Спартак</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-schukinskaya\" class=\"station\" transform=\"translate(-529 -545)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Щукинская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-oktyabrskoe-pole\" class=\"station\" transform=\"translate(-529 -427)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(15 0)\">\n    //                     <text class=\"bg\"><tspan>Октябрьское</tspan><tspan x=\"0\" dy=\"18\">поле</tspan></text>\n    //                     <text><tspan>Октябрьское</tspan><tspan x=\"0\" dy=\"18\">поле</tspan></text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-polejaevskaya\" class=\"station\" transform=\"translate(-494 -286)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(0,-20)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Полежаевская</text>\n    //                     <text text-anchor=\"middle\">Полежаевская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-begovaya\" class=\"station\" transform=\"translate(-461 -252)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\">Беговая</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ulitsa-1905-goda\" class=\"station\" transform=\"translate(-423 -212)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"-15\"><tspan x=\"15\">Улица</tspan><tspan x=\"15\" dy=\"18\">1905 года</tspan></text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"purple-all;purple-north;purple-center;all\">\n    //                 <g bw:code=\"ru-msk-metro-krasnopresnenskaya-barrikadnaya\" class=\"station\" transform=\"translate(-279 -166)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(0-17)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Баррикадная</text>\n    //                     <text text-anchor=\"middle\">Баррикадная</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"purple-all;purple-center;inside-brown;all\">\n    //                 <g bw:code=\"ru-msk-metro-pushkinskaya-tverskaya-chehovskaya\" class=\"station\" transform=\"translate(-75 -166)\">\n    //                   <circle></circle>\n    //                   <text x=\"-60\" y=\"-15\">Пушкинская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kuznetskiy-most-lubyanka\" class=\"station\" transform=\"translate(115 -166)\">\n    //                   <circle></circle>\n    //                   <text x=\"-110\" y=\"-15\">Кузнецкий мост</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kitay-gorod\" class=\"station\" transform=\"translate(252 -99)\">\n    //                   <circle></circle>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"purple-all;purple-center;purple-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-taganskaya-taganskaya-marksistskaya\" class=\"station\" transform=\"translate(400 49)\">\n    //                   <circle></circle>\n    //                   <text x=\"-22\" text-anchor=\"end\">Таганская</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"purple-all;purple-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-proletarskaya-krestyanskaya-zastava\" class=\"station\" transform=\"translate(529 176)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(85 7)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Пролетарская</text>\n    //                     <text text-anchor=\"middle\">Пролетарская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-volgogradskiy-prospekt\" class=\"station\" transform=\"translate(566, 213)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(15 0)\">\n    //                     <text class=\"bg\"><tspan>Волгоградский</tspan><tspan x=\"0\" dy=\"18\">проспект</tspan></text>\n    //                     <text><tspan>Волгоградский</tspan><tspan x=\"0\" dy=\"18\">проспект</tspan></text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-tekstilschiki\" class=\"station\" transform=\"translate(629 252)\">\n    //                   <circle></circle>\n    //                   <text x=\"17\" y=\"30\" text-anchor=\"middle\">Текстильщики</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kuzminki\" class=\"station\" transform=\"translate(759 252)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(20-18)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Кузьминки</text>\n    //                     <text text-anchor=\"middle\">Кузьминки</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ryazanskiy-prospekt\" class=\"station\" transform=\"translate(859 294)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-15 0)\">\n    //                     <text class=\"bg\" text-anchor=\"end\"><tspan>Рязанский</tspan><tspan x=\"-15\" dy=\"18\">проспект</tspan></text>\n    //                     <text text-anchor=\"end\"><tspan>Рязанский</tspan><tspan x=\"-15\" dy=\"18\">проспект</tspan></text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-vyihino\" class=\"station\" transform=\"translate(859 334)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-15 7)\">\n    //                     <text class=\"bg\" text-anchor=\"end\">Выхино</text>\n    //                     <text text-anchor=\"end\">Выхино</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-lermontovskiy-prospekt\" class=\"station\" transform=\"translate(789 433)\">\n    //                   <circle></circle>\n    //                   <text x=\"-10\" y=\"-28\" text-anchor=\"end\"><tspan>Лермонтовский</tspan><tspan x=\"-10\" dy=\"18\">проспект</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-julebino\" class=\"station\" transform=\"translate(749 473)\">\n    //                   <circle></circle>\n    //                   <text x=\"-10\" y=\"-10\" text-anchor=\"end\">Жулебино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kotelniki\" class=\"station\" transform=\"translate(709 513)\">\n    //                   <circle></circle>\n    //                   <text x=\"-10\" y=\"-10\" text-anchor=\"end\">Котельники</text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch yellow\" bw:code=\"ru-msk-metro-kalininsko-solntsevskaya-liniya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"yellow-east;all\">\n    //                 <g bw:code=\"ru-msk-metro-novokosino\" class=\"station\" transform=\"translate(762 -242)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"10\">Новокосино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-novogireevo\" class=\"station\" transform=\"translate(728 -210)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"10\">Новогиреево</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-perovo\" class=\"station\" transform=\"translate(691 -178)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"10\">Перово</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-shosse-entuziastov\" class=\"station\" transform=\"translate(637 -126)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(17 -17)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Шоссе Энтузиастов</text>\n    //                     <text text-anchor=\"middle\">Шоссе Энтузиастов</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-aviamotornaya\" class=\"station\" transform=\"translate(576 -69)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(0 -17)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Авиамоторная</text>\n    //                     <text text-anchor=\"middle\">Авиамоторная</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ploschad-ilicha-rimskaya\" class=\"station\" transform=\"translate(506 -4)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"15\"><tspan>Площадь</tspan><tspan x=\"15\" dy=\"18\">Ильича</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-taganskaya-taganskaya-marksistskaya\" class=\"station\" transform=\"translate(413 84)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(71 35)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Марксистская</text>\n    //                     <text text-anchor=\"middle\">Марксистская</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"yellow-east;inside-brown;all\">\n    //                 <g bw:code=\"ru-msk-metro-novokuznetskaya-tretyakovskaya\" class=\"station\" transform=\"translate(179 138)\">\n    //                   <circle bw:title=\"Третьяковская\"></circle>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch yellow\" bw:code=\"ru-msk-metro-kalininsko-solntsevskaya-liniya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"yellow-west;all\">\n    //                 <g bw:code=\"ru-msk-metro-vyistavochnaya-delovoy-tsentr\" class=\"station\" transform=\"translate(-455 -9)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-20 32)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Деловой центр</text>\n    //                     <text text-anchor=\"middle\">Деловой центр</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-park-pobedyi-park-pobedyi\" class=\"station\" transform=\"translate(-589 204)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-minskaya\" class=\"station\" transform=\"translate(-589 260)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Минская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-lomonosovskiy-prospekt\" class=\"station\" transform=\"translate(-589 300)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" text-anchor=\"end\"><tspan>Ломоносовский</tspan><tspan x=\"-15\" dy=\"18\">проспект</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ramenki\" class=\"station\" transform=\"translate(-589 340)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"5\" text-anchor=\"end\">Раменки</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-michurinskiy-prospekt\" class=\"station\" transform=\"translate(-589 380)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" text-anchor=\"end\"><tspan>Мичуринский</tspan><tspan x=\"-15\" dy=\"18\">проспект</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ochakovo\" class=\"station\" transform=\"translate(-589 420)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Озерная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-govorovo\" class=\"station\" transform=\"translate(-589 460)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Говорово</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-solntsevo\" class=\"station\" transform=\"translate(-589 500)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Солнцево</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-borovskoe-shosse\" class=\"station\" transform=\"translate(-589 540)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" text-anchor=\"end\"><tspan>Боровское</tspan><tspan x=\"-15\" dy=\"18\">шоссе</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-novoperedelkino\" class=\"station\" transform=\"translate(-589 580)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Новопеределкино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-rasskazovka\" class=\"station\" transform=\"translate(-589 620)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Рассказовка</text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch grey\" bw:code=\"ru-msk-liniya-metro-serpuhovsko-timiryazevskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"grey-all;grey-north;all\">\n    //                 <g bw:code=\"ru-msk-metro-altufevo\" class=\"station\" transform=\"translate(-33 -840)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Алтуфьево</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-bibirevo\" class=\"station\" transform=\"translate(-33 -800)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Бибирево</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-otradnoe\" class=\"station\" transform=\"translate(-33 -760)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Отрадное</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-vladyikino\" class=\"station\" transform=\"translate(-33 -720)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\">Владыкино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-petrovsko-razumovskaya\" class=\"station\" transform=\"translate(-33 -655)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(20 35)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Петровско-Разумовская</text>\n    //                     <text text-anchor=\"middle\">Петровско-Разумовская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-timiryazevskaya\" class=\"station\" transform=\"translate(-33 -590)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Тимирязевская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-dmitrovskaya\" class=\"station\" transform=\"translate(-33 -545)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Дмитровская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-savelovskaya\" class=\"station\" transform=\"translate(-33 -500)\">\n    //                   <circle></circle>\n    //                   <text x=\"-22\" y=\"7\" text-anchor=\"end\">Савёловская</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"grey-all;grey-north;grey-center;all\">\n    //                 <g bw:code=\"ru-msk-metro-novoslobodskaya-mendeleevskaya\" class=\"station\" transform=\"translate(-33 -455)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-15,14)\">\n    //                     <text class=\"bg\" text-anchor=\"end\">Менделеевская</text>\n    //                     <text text-anchor=\"end\">Менделеевская</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"grey-all;grey-center;inside-brown;all\">\n    //                 <g bw:code=\"ru-msk-metro-tsvetnoy-bulvar-trubnaya\" class=\"station\" transform=\"translate(-14 -310)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(20,30)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Цветной бульвар</text>\n    //                     <text text-anchor=\"middle\">Цветной бульвар</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-pushkinskaya-tverskaya-chehovskaya\" class=\"station\" transform=\"translate(-58 -136)\">\n    //                   <circle></circle>\n    //                   <g>\n    //                     <text text-anchor=\"middle\" transform=\"translate(70 10)\">Чеховская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-arbatskaya-aleksandrovskiy-sad-biblioteka-im-lenina-borovitskaya\" class=\"station\" transform=\"translate(-142 46)\">\n    //                   <circle></circle>\n    //                   <g>\n    //                     <text text-anchor=\"middle\" transform=\"translate(-74 10)\">Боровицкая</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-polyanka\" class=\"station\" transform=\"translate(-24 227)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"6\">Полянка</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"grey-all;grey-center;grey-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-dobryininskaya-serpuhovskaya\" class=\"station\" transform=\"translate(-24 300)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"15\">Серпуховская</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"grey-all;grey-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-tulskaya\" class=\"station\" transform=\"translate(-24 420)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Тульская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-nagatinskaya\" class=\"station\" transform=\"translate(-24 570)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Нагатинская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-nagornaya\" class=\"station\" transform=\"translate(-24 605)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Нагорная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-nahimovskiy-prospekt\" class=\"station\" transform=\"translate(-24 640)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\"><tspan x=\"15\">Нахимовский</tspan> <tspan x=\"15\" dy=\"18\">проспект</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kahovskaya-sevastopolskaya\" class=\"station\" transform=\"translate(-24 720)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Севастопольская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-chertanovskaya\" class=\"station\" transform=\"translate(-24 760)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Чертановская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-yujnaya\" class=\"station\" transform=\"translate(-24 800)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Южная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-prajskaya\" class=\"station\" transform=\"translate(-24 840)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Пражская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ulitsa-akademika-yangelya\" class=\"station\" transform=\"translate(-24 880)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"0\"><tspan>Улица Академика</tspan> <tspan x=\"15\" dy=\"18\">Янгеля</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-annino\" class=\"station\" transform=\"translate(-24 920)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Аннино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-bulvar-dmitriya-donskogo-ulitsa-starokachalovskaya\" class=\"station\" transform=\"translate(-24 960)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"0\"><tspan>Бульвар</tspan><tspan x=\"15\" dy=\"18\">Дмитрия Донского</tspan></text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch lime\" bw:code=\"ru-msk-liniya-metro-lyublinsko-dmitrovskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"lime-all;lime-north;all\">\n    //                 <g bw:code=\"ru-msk-metro-seligerskaya\" class=\"station\" transform=\"translate(-80 -840)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"7\" text-anchor=\"end\">Селигерская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-verhnie-lihoboryi\" class=\"station\" transform=\"translate(-80 -780)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"0\" text-anchor=\"end\"><tspan>Верхние</tspan><tspan x=\"-15\" dy=\"18\">Лихоборы</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-okrujnaya\" class=\"station\" transform=\"translate(-70 -720)\">\n    //                   <circle></circle>\n    //                   <text x=\"-12\" y=\"22\" text-anchor=\"end\">Окружная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-petrovsko-razumovskaya\" class=\"station\" transform=\"translate(0 -655)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\"></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-fonvizinskaya\" class=\"station\" transform=\"translate(14 -590)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Фонвизинская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-butyirskaya\" class=\"station\" transform=\"translate(14 -545)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Бутырская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-marina-roscha\" class=\"station\" transform=\"translate(14 -500)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Марьина Роща</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-dostoevskaya\" class=\"station\" transform=\"translate(14 -455)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Достоевская</text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"lime-all;lime-center;inside-brown;all\">\n    //                 <g bw:code=\"ru-msk-metro-tsvetnoy-bulvar-trubnaya\" class=\"station\" transform=\"translate(14 -322)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(0,-20)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Трубная</text>\n    //                     <text text-anchor=\"middle\">Трубная</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-chistyie-prudyi-sretenskiy-bulvar-turgenevskaya\" class=\"station\" transform=\"translate(198 -258)\">\n    //                   <circle></circle>\n    //                   <text y=\"-35\" text-anchor=\"middle\"><tspan>Сретенский</tspan><tspan x=\"0\" dy=\"18\">бульвар</tspan></text>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"lime-all;lime-center;lime-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-kurskaya-kurskaya-chkalovskaya\" class=\"station\" transform=\"translate(372 -104)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(0 32)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Чкаловская</text>\n    //                     <text text-anchor=\"middle\">Чкаловская</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //               <g class=\"branch-part\" bw:branch-part=\"lime-all;lime-south;all\">\n    //                 <g bw:code=\"ru-msk-metro-ploschad-ilicha-rimskaya\" class=\"station\" transform=\"translate(472 -4)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-10-20)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Римская</text>\n    //                     <text text-anchor=\"middle\">Римская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-proletarskaya-krestyanskaya-zastava\" class=\"station\" transform=\"translate(500 186)\">\n    //                   <circle></circle>\n    //                   <text x=\"-18\" y=\"5\" text-anchor=\"end\"><tspan>Крестьянская</tspan><tspan x=\"-18\" dy=\"18\">застава</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-dubrovka\" class=\"station\" transform=\"translate(388 420)\">\n    //                   <circle></circle>\n    //                   <text x=\"-15\" y=\"15\" text-anchor=\"end\">Дубровка</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kojuhovskaya\" class=\"station\" transform=\"translate(388 498)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Кожуховская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-pechatniki\" class=\"station\" transform=\"translate(388 545)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Печатники</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-voljskaya\" class=\"station\" transform=\"translate(388 592)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Волжская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-lyublino\" class=\"station\" transform=\"translate(388 639)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Люблино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-bratislavskaya\" class=\"station\" transform=\"translate(388 686)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Братиславская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-marino\" class=\"station\" transform=\"translate(388 733)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Марьино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-borisovo\" class=\"station\" transform=\"translate(388 780)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Борисово</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-shipilovskaya\" class=\"station\" transform=\"translate(388 827)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Шипиловская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-zyablikovo-krasnogvardeyskaya\" class=\"station\" transform=\"translate(388 874)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\">Зябликово</text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch turquoise\" bw:code=\"ru-msk-liniya-metro-tretiy-peresadochnyiy-kontur\">\n    //               <g class=\"branch-part\" bw:branch-part=\"turquoise-north-west;all\">\n    //                 <g bw:code=\"ru-msk-metro-vyistavochnaya-delovoy-tsentr\" class=\"station\" transform=\"translate(-495 -9)\">\n    //                   <circle bw:title=\"Деловой центр\"></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-shelepiha\" class=\"station\" transform=\"translate(-589 -160)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"\" class=\"station constructed disabled\" transform=\"translate(-931,-66)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(0,-20)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Можайская</text>\n    //                     <text text-anchor=\"middle\">Можайская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"\" class=\"station disabled\" transform=\"translate(-796,-111)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"12\">Терехово</text>\n    //                 </g>\n    //                 <g bw:code=\"\" class=\"station disabled\" transform=\"translate(-751,-156)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"5\"><tspan>Нижние</tspan><tspan x=\"15\" dy=\"18\">Мнёвники</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"\" class=\"station disabled\" transform=\"translate(-706,-201)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(15,5)\">\n    //                     <text class=\"bg\"><tspan>Улица Народного</tspan><tspan x=\"0\" dy=\"18\">ополчения</tspan></text>\n    //                     <text><tspan>Улица Народного</tspan><tspan x=\"0\" dy=\"18\">ополчения</tspan></text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-polejaevskaya\" class=\"station\" transform=\"translate(-514 -263)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-30,30)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Хорошёвская</text>\n    //                     <text text-anchor=\"middle\">Хорошёвская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-tsska\" class=\"station\" transform=\"translate(-400 -313)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"15\">ЦСКА</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-dinamo\" class=\"station\" transform=\"translate(-296 -373)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(15,-5)\">\n    //                     <text class=\"bg\"><tspan>Петровский</tspan><tspan x=\"0\" dy=\"18\">парк</tspan></text>\n    //                     <text><tspan>Петровский</tspan><tspan x=\"0\" dy=\"18\">парк</tspan></text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-savelovskaya\" class=\"station\" transform=\"translate(-58-474)\">\n    //                   <circle></circle>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch turquoise\" bw:code=\"ru-msk-liniya-metro-kahovskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"turquoise-all;all\">\n    //                 <g bw:code=\"ru-msk-metro-kahovskaya-sevastopolskaya\" class=\"station\" transform=\"translate(-42 699)\">\n    //                   <circle></circle>\n    //                   <text x=\"0\" y=\"27\" text-anchor=\"end\">Каховская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-varshavskaya\" class=\"station\" transform=\"translate(82 699)\">\n    //                   <circle></circle>\n    //                   <text y=\"-17\" text-anchor=\"middle\">Варшавская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kashirskaya\" class=\"station\" transform=\"translate(215 699)\">\n    //                   <circle></circle>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch light-blue\" bw:code=\"ru-msk-liniya-metro-butovskaya\">\n    //               <g class=\"branch-part\" bw:branch-part=\"light-blue-all;all\">\n    //                 <g bw:code=\"ru-msk-metro-novoyasenevskaya-bittsevskiy-park\" class=\"station\" transform=\"translate(-223 891)\">\n    //                   <circle></circle>\n    //                   <text x=\"0\" y=\"30\" text-anchor=\"end\"><tspan>Битцевский</tspan><tspan x=\"0\" dy=\"18\">парк</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-lesoparkovaya\" class=\"station\" transform=\"translate(-141 891)\">\n    //                   <circle></circle>\n    //                   <text x=\"0\" y=\"30\" text-anchor=\"middle\">Лесопарковая</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-bulvar-dmitriya-donskogo-ulitsa-starokachalovskaya\" class=\"station\" transform=\"translate(-55 960)\">\n    //                   <circle></circle>\n    //                   <text x=\"-17\" text-anchor=\"end\"><tspan>Улица</tspan><tspan x=\"-17\" dy=\"18\">Старокачаловская</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ulitsa-skobelevskaya\" class=\"station\" transform=\"translate(-89 997)\">\n    //                   <circle></circle>\n    //                   <text x=\"-17\" y=\"30\"><tspan>Улица</tspan><tspan x=\"-17\" dy=\"18\">Скобелевская</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-bulvar-admirala-ushakova\" class=\"station\" transform=\"translate(-289 997)\">\n    //                   <circle></circle>\n    //                   <text x=\"-17\" y=\"30\"><tspan>Бульвар</tspan><tspan x=\"-17\" dy=\"18\">Адмирала Ушакова</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ulitsa-gorchakova\" class=\"station\" transform=\"translate(-377 997)\">\n    //                   <circle></circle>\n    //                   <text y=\"30\" text-anchor=\"middle\"><tspan>Улица</tspan><tspan x=\"0\" dy=\"18\">Горчакова</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-buninskaya-alleya\" class=\"station\" transform=\"translate(-425 997)\">\n    //                   <circle></circle>\n    //                   <text x=\"-40\" y=\"-35\"><tspan>Бунинская</tspan><tspan x=\"-40\" dy=\"18\">аллея</tspan></text>\n    //                 </g>\n    //               </g>\n    //             </g>\n    //             <g class=\"branch circle-2\" bw:code=\"ru-msk-liniya-metro-moskovskoe-tsentralnoe-koltso\">\n    //               <g class=\"branch-part\" bw:branch-part=\"circle-2-all;all\">\n    //                 <g bw:code=\"ru-msk-metro-mejdunarodnaya\" class=\"station\" transform=\"translate(-569 -38)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-15,5)\">\n    //                     <text class=\"bg\" text-anchor=\"end\"><tspan>Деловой центр</tspan><tspan x=\"0\" dy=\"18\"> (МЦК)</tspan></text>\n    //                     <text text-anchor=\"end\"><tspan>Деловой центр</tspan><tspan x=\"0\" dy=\"18\">(МЦК)</tspan></text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kutuzovskaya\" class=\"station\" transform=\"translate(-540 115)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-sportivnaya\" class=\"station\" transform=\"translate(-422 326)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Лужники</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-leninskiy-prospekt\" class=\"station\" transform=\"translate(-225 480)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\">Пл. Гагарина</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-kryimskaya\" class=\"station\" transform=\"translate(-105 524)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(50 -18)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Крымская</text>\n    //                     <text text-anchor=\"middle\">Крымская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-verhnie-kotlyi\" class=\"station\" transform=\"translate(44 544)\">\n    //                   <circle></circle>\n    //                   <text y=\"-35\" text-anchor=\"middle\"><tspan>Верхние</tspan><tspan x=\"0\" dy=\"18\">котлы</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-zil\" class=\"station\" transform=\"translate(144 538)\">\n    //                   <circle></circle>\n    //                   <text y=\"-17\" text-anchor=\"middle\">ЗИЛ</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-avtozavodskaya\" class=\"station\" transform=\"translate(214 522)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-dubrovka\" class=\"station\" transform=\"translate(368 457)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-ugreshskaya\" class=\"station\" transform=\"translate(454 395)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(15 -20)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Угрешская</text>\n    //                     <text text-anchor=\"middle\">Угрешская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-novohohlovskaya\" class=\"station\" transform=\"translate(637 126)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(15 -20)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Новохохловская</text>\n    //                     <text text-anchor=\"middle\">Новохохловская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-nijegorodskaya\" class=\"station\" transform=\"translate(663 16)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Нижегородская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-andronovka\" class=\"station\" transform=\"translate(670 -64)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Андроновка</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-shosse-entuziastov\" class=\"station\" transform=\"translate(667 -126)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-sokolinaya-gora\" class=\"station\" transform=\"translate(639 -268)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"0\" text-anchor=\"\"><tspan>Соколиная</tspan><tspan dy=\"18\" x=\"15\">гора</tspan></text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-partizanskaya\" class=\"station\" transform=\"translate(617 -323)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Измайлово</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-cherkizovskaya\" class=\"station\" transform=\"translate(512 -487)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Локомотив</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-bulvar-rokossovskogo\" class=\"station\" transform=\"translate(460 -542)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-belokamennaya\" class=\"station\" transform=\"translate(389 -595)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"0\">Белокаменная</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-rostokino\" class=\"station\" transform=\"translate(340 -623)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"0\">Ростокино</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-botanicheskiy-sad\" class=\"station\" transform=\"translate(268 -656)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-vladyikino\" class=\"station\" transform=\"translate(-5 -693)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-okrujnaya\" class=\"station\" transform=\"translate(-70 -684)\">\n    //                   <circle></circle>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-lihoboryi\" class=\"station\" transform=\"translate(-162 -657)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(0-18)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Лихоборы</text>\n    //                     <text text-anchor=\"middle\">Лихоборы</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-koptevo\" class=\"station\" transform=\"translate(-254 -616)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(60-5)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Коптево</text>\n    //                     <text text-anchor=\"middle\">Коптево</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-voykovskaya\" class=\"station\" transform=\"translate(-324 -570)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"10\">Балтийская</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-streshnevo\" class=\"station\" transform=\"translate(-435 -460)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(0, -18)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Стрешнево</text>\n    //                     <text text-anchor=\"middle\">Стрешнево</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-oktyabrskoe-pole\" class=\"station\" transform=\"translate(-484 -390)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-15,7)\">\n    //                     <text class=\"bg\" text-anchor=\"end\">Панфиловская</text>\n    //                     <text text-anchor=\"end\">Панфиловская</text>\n    //                   </g>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-zorge\" class=\"station\" transform=\"translate(-504 -355)\">\n    //                   <circle></circle>\n    //                   <text x=\"15\" y=\"7\">Зорге</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-polejaevskaya\" class=\"station\" transform=\"translate(-534 -286)\">\n    //                   <circle></circle>\n    //                   <text text-anchor=\"end\" x=\"-15\" y=\"7\">Хорошёво</text>\n    //                 </g>\n    //                 <g bw:code=\"ru-msk-metro-shelepiha\" class=\"station\" transform=\"translate(-564 -160)\">\n    //                   <circle></circle>\n    //                   <g transform=\"translate(-12,30)\">\n    //                     <text class=\"bg\" text-anchor=\"middle\">Шелепиха</text>\n    //                     <text text-anchor=\"middle\">Шелепиха</text>\n    //                   </g>\n    //                 </g>\n    //               </g>\n    //             </g>\n\n    //           </g>\n    //         </g>\n    //       </svg>\n    //     `\n    //   },\n    // },\n\n  },\n}\n\n// ============================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\nexport function $nl_defaults_init() {\n  ($me_atom2_entity.root() as $me_atom2_entity).props({\n    em: () => 16,\n    pm: () => 32, // common panel content margin\n\n    colorText: $me_atom2_prop(['.theme'],\n      ({masters: [theme]}) => theme == $me_theme.light ? '#313745' : 'white',\n    ),\n    fontFamily: () => '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"', // https://medium.com/needmore-notes/using-system-fonts-for-web-apps-bf76d214a0e0\n    fontWeight: () => 400,\n    // СвернутьРазвернуть: $me_atom2_prop_store({\n    //   default: () => false,\n    //   valid: (val: any) => typeof val == 'boolean' ? val : null,\n    // }),\n    // СписокБарабан: $me_atom2_prop_store({\n    //   default: () => false,\n    //   valid: (val: any) => typeof val == 'boolean' ? val : null,\n    // }),\n    theme: $me_atom2_prop_store({\n      default: () => $me_theme.light,\n      valid: (val: any) => val == $me_theme.light || val == $me_theme.dark ? val : null,\n    }),\n    colorButton: $me_atom2_prop(['.theme'],\n      ({masters: [theme]}) =>\n        theme == $me_theme.light ?\n        '#0070a4' :\n        '#008ecf',\n    ),\n    colorLink: $me_atom2_prop(['.theme'],\n      ({masters: [theme]}) =>\n        theme == $me_theme.light ?\n        '#2b87db' :\n        '#53adff',\n    ),\n  })\n\n  $me_atom2_ec.prop_default = <$me_atom2_prop_intf>{\n    ...$me_atom2_ec.prop_default,\n\n    em: '/.em',\n    pm: '/.pm',\n    colorText: '/.colorText',\n    fontFamily: '/.fontFamily',\n    fontWeight: '/.fontWeight',\n    fontSize: '.em',\n    theme: '/.theme',\n  }\n\n  $me_atom2_elem.style_default = <$me_atom2_prop_intf>{\n    ...$me_atom2_elem.style_default,\n\n    color: '.colorText',\n    fontFamily: '.fontFamily',\n    fontWeight: '.fontWeight',\n    fontSize: '.fontSize',\n  }\n}\n\n// ==========================================================================\n}\n","namespace $.$$ {\n// ============================================================================\n\n\nexport const $nl_scheme_metro_demo = (rootElem: HTMLElement) => {\n  $nl_defaults_init()\n\n  return new $me_atom2_elem({tail: 'app', cnf: {\n    node: rootElem,\n    //base: $nl_demo4,\n    style: {\n      margin: () => 0,\n    },\n    prop: {\n    },\n    elem: {\n      scheme: () => <$me_atom2_elem_cnf_intf>{\n        base: $nl_scheme_metro\n      }\n    }\n  }})\n}\n\n// ==========================================================================\n}"]}